{"ast":null,"code":"var _jsxFileName = \"/Users/juanlugo/Desktop/sp-firebase/src/components/IdleTimerContainer/IdleTimerContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react'; // React Router\n\nimport { useHistory } from 'react-router-dom'; // Firebase\n\nimport { db, auth } from '../../firebase/firebase';\nimport firebase from \"firebase/app\"; // IdleTimer\n\nimport IdleTimer from 'react-idle-timer'; // Icons\n\nimport { IconContext } from \"react-icons\";\nimport { RiTimeLine } from 'react-icons/ri'; // Swal\n\nimport swal from '@sweetalert/with-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction IdleTimerContainer() {\n  _s();\n\n  const IdleTimerRef = useRef(null); // Histoty\n\n  const history = useHistory();\n\n  const signOut = async () => {\n    // Sign Out - Firebase\n    await auth.signOut().then(() => {\n      console.log('Sign-out successful.'); // Redirect\n\n      history.push('/');\n    }).catch(error => {\n      console.log('An error happened.');\n    });\n    return;\n  };\n\n  const onIdle = () => {\n    // Counter down timer\n    let timeleft = 30;\n    let counterDownTimer = setInterval(function () {\n      if (timeleft <= 0) {\n        clearInterval(counterDownTimer);\n      } // Decresae by -1\n\n\n      let upTo = timeleft -= 1;\n\n      if (upTo === 0) {\n        // Signout method\n        signOut(); // Email\n\n        const email = auth.currentUser.email; // Firebase\n\n        db.collection('signOutLogs').add({\n          email,\n          signInTime: firebase.firestore.FieldValue.serverTimestamp()\n        }); // Check modal state\n\n        const isOpen = swal.getState().isOpen; // Conditional to close the modal\n\n        if (isOpen) {\n          swal.close();\n        }\n\n        return;\n      }\n    }, 1000);\n    swal({\n      closeOnClickOutside: true,\n      buttons: {\n        confirm: \"Yes, I'm here\"\n      },\n      content: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"swal-text-custom\",\n        children: [/*#__PURE__*/_jsxDEV(IconContext.Provider, {\n          value: {\n            color: '#D338AE',\n            size: '50px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"animate__animated animate__shakeX\",\n            children: /*#__PURE__*/_jsxDEV(RiTimeLine, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Are you still there?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }).then(respond => {\n      if (respond === null || respond === true) {\n        clearInterval(counterDownTimer);\n        return;\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(IdleTimer, {\n      ref: IdleTimerRef,\n      timeout: 360 * 1000,\n      onIdle: onIdle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n}\n\n_s(IdleTimerContainer, \"7Wv17BF82TiOMIQ6TFzuOsz5KkM=\", false, function () {\n  return [useHistory];\n});\n\n_c = IdleTimerContainer;\nexport default IdleTimerContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"IdleTimerContainer\");","map":{"version":3,"sources":["/Users/juanlugo/Desktop/sp-firebase/src/components/IdleTimerContainer/IdleTimerContainer.js"],"names":["React","useRef","useHistory","db","auth","firebase","IdleTimer","IconContext","RiTimeLine","swal","IdleTimerContainer","IdleTimerRef","history","signOut","then","console","log","push","catch","error","onIdle","timeleft","counterDownTimer","setInterval","clearInterval","upTo","email","currentUser","collection","add","signInTime","firestore","FieldValue","serverTimestamp","isOpen","getState","close","closeOnClickOutside","buttons","confirm","content","color","size","respond"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\n// React Router\nimport { useHistory } from 'react-router-dom';\n// Firebase\nimport { db, auth } from '../../firebase/firebase';\nimport firebase from \"firebase/app\";\n// IdleTimer\nimport IdleTimer from 'react-idle-timer';\n// Icons\nimport { IconContext } from \"react-icons\";\nimport { RiTimeLine } from 'react-icons/ri';\n// Swal\nimport swal from '@sweetalert/with-react';\n\nfunction IdleTimerContainer() {\n    const IdleTimerRef = useRef(null);\n\n    // Histoty\n    const history = useHistory();\n\n    const signOut = async () => {\n        // Sign Out - Firebase\n        await auth.signOut().then(() => {\n            console.log('Sign-out successful.');\n            // Redirect\n            history.push('/');\n        }).catch((error) => {\n            console.log('An error happened.');\n        });\n\n        return;\n    }\n\n    const onIdle = () => {\n\n        // Counter down timer\n        let timeleft = 30;\n        let counterDownTimer = setInterval(function () {\n            if (timeleft <= 0) {\n                clearInterval(counterDownTimer);\n            }\n\n            // Decresae by -1\n            let upTo = timeleft -= 1;\n\n            if (upTo === 0) {\n\n                // Signout method\n                signOut();\n\n                // Email\n                const email = auth.currentUser.email;\n\n                // Firebase\n                db.collection('signOutLogs').add({\n                    email,\n                    signInTime: firebase.firestore.FieldValue.serverTimestamp(),\n                });\n\n                // Check modal state\n                const isOpen = swal.getState().isOpen;\n                // Conditional to close the modal\n                if (isOpen) {\n                    swal.close();\n                }\n\n                return;\n            }\n\n        }, 1000);\n\n        swal({\n            closeOnClickOutside: true,\n            buttons: {\n                confirm: \"Yes, I'm here\"\n            },\n            content: (\n                <div className=\"swal-text-custom\">\n                    <IconContext.Provider value={{ color: '#D338AE', size: '50px' }}>\n                        <div className=\"animate__animated animate__shakeX\">\n                            <RiTimeLine />\n                        </div>\n                    </IconContext.Provider>\n                    <h1>Are you still there?</h1>\n                </div>\n            )\n        }).then(respond => {\n            if (respond === null || respond === true) {\n                clearInterval(counterDownTimer);\n                return;\n            }\n        });\n    }\n\n    return (\n        <div>\n            <IdleTimer ref={IdleTimerRef} timeout={360 * 1000} onIdle={onIdle}></IdleTimer>\n        </div>\n    )\n}\n\nexport default IdleTimerContainer\n"]},"metadata":{},"sourceType":"module"}
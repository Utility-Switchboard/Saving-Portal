{"ast":null,"code":"var _jsxFileName = \"/Users/juanlugo/Desktop/sp-firebase/src/components/FormCards/FormAddress/FormAddress.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; // Styles\n\nimport \"./FormAddress.css\"; // Firebase\n\nimport { db } from \"../../../firebase/firebase\";\nimport firebase from \"firebase/app\"; // Swal\n\nimport swal from '@sweetalert/with-react'; // Icons\n\nimport { IconContext } from \"react-icons\";\nimport { IoMdArrowDropleft, IoMdArrowDropright } from 'react-icons/io';\nimport { ImProfile } from 'react-icons/im'; // Hooks\n\nimport useAddress from \"../../../hooks/useAddress/useAddress\"; // Components\n\nimport FormScript from '../FormScript/FormScript';\nimport Error from '../../Error/Error';\nimport FormAssistant from \"../FormAssistant/FormAssistant\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction FormAddress({\n  postcodeValue,\n  gasInformation,\n  electricityInformation,\n  progressBar,\n  showScript,\n  customerStep,\n  updateCustomerAddress,\n  updateGasInformation,\n  updateElectricityInformation,\n  updateShowFormPostCode,\n  updateShowFormAddres,\n  updateShowOverlay,\n  updateProgressBar,\n  updateShowFomrFuelType\n}) {\n  _s();\n\n  /** STATES */\n  // Customer Address JSON\n  const [dataAddress, updateDataAddress] = useState({\n    doornumber: '',\n    addressline1: '',\n    addressline2: '',\n    city: '',\n    postcode: '',\n    mpan: '',\n    mprn: ''\n  }); // Customer Address List\n\n  const [addressList, updateAddressList] = useState([]); // Hook useAddress\n\n  const [address, SelectAddress, updateAddress] = useAddress(\"\", //Label\n  \"\", //Initial State\n  addressList //Array(response)\n  ); // Show Address type section\n\n  const [showTypeAddress, updateShowTypeAddres] = useState(true); // Error State\n\n  const [error, updateError] = useState(false); // Create customer in firebase\n\n  const [createCustomer, updateCreateCustomer] = useState(false); // Button focus animation\n\n  const [focusAnimation, setFocusAnimation] = useState(false);\n  /** FUNCTIONS */\n  // Error smooth scroll\n\n  useEffect(() => {\n    if (error) {\n      const scroll_to = () => {\n        var element = document.querySelector(\"#error\"); // smooth scroll to element and align it at the bottom\n\n        element.scrollIntoView({\n          behavior: \"smooth\",\n          block: \"end\",\n          inline: \"end\"\n        });\n      };\n\n      scroll_to();\n    }\n  }, [error]); // Scroll to top\n\n  useEffect(() => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n  }, []); // useEffect to fetch the data from API\n\n  useEffect(() => {\n    // const address_api = process.env.REACT_APP_ADDRESS_API;\n    // Fetching Data\n    const fetchAPI = async () => {\n      // const url = `https://ws.postcoder.com/pcw/${address_api}/address/uk/${postcodeValue.replace(/ /g, '').toLowerCase()}`;\n      const key = process.env.REACT_APP_ADDRESS_API;\n      const url = `https://api.getAddress.io/find/${postcodeValue.replace(/ /g, '').toLowerCase()}?api-key=${key}&expand=true`;\n      const response_postcode = await fetch(url, {\n        method: 'GET'\n      }).then(function (response) {\n        if (response.status === 200) {\n          return response.json();\n        } else {\n          swal({\n            button: \"Ok\",\n            icon: \"info\",\n            content: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"swal-text-custom\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"Address not found\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Please enter the address manually\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this)\n          });\n          return;\n        }\n      }).then(function (response) {\n        return response;\n      }).catch(function (error) {\n        console.error(`Catch an error fetching to postcoder ${error}`);\n        swal({\n          button: \"Ok\",\n          icon: \"info\",\n          content: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"swal-text-custom\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Address not found\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Please enter the address manually\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)\n        });\n        return;\n      });\n\n      if (response_postcode !== undefined) {\n        const data = response_postcode.addresses; // Adding an ID\n\n        data.forEach((item, i) => {\n          item.id = i + 1;\n        });\n\n        if (addressList === []) {\n          return;\n        } else {\n          updateAddressList(data);\n        }\n      } else {\n        return;\n      }\n    }; // Execute Fetch API\n\n\n    fetchAPI();\n  }, []); // Address Data\n\n  if (address !== '') {\n    // Selected Value\n    const selectedValue = addressList[address - 1];\n    console.log(selectedValue); // Separated Values\n\n    var doornumberValue = selectedValue.formatted_address[0].replace(/[^0-9.]/g, '');\n    var addressline1Value = selectedValue.formatted_address.toString().replace(/,*,/g, ',').replace(/,/g, \", \");\n    var addressline2Value = '';\n    var cityValue = selectedValue.town_or_city;\n    var mpanValue = '';\n    var mprnValue = '';\n\n    if (doornumberValue === undefined || doornumberValue === '') {\n      doornumberValue = \"N/A\";\n    } else {\n      doornumberValue = selectedValue.formatted_address[0].replace(/[^0-9.]/g, '');\n    }\n\n    if (addressline1Value === undefined || addressline1Value === '') {\n      addressline1Value = \"N/A\";\n    } else {\n      addressline1Value = selectedValue.formatted_address.toString().replace(/,*,/g, ',').replace(/,/g, \", \");\n    }\n\n    if (addressline2Value === undefined || addressline2Value === '') {\n      addressline2Value = \"N/A\";\n    } else {\n      addressline2Value = \"\";\n    }\n\n    if (cityValue === undefined || cityValue === '') {\n      cityValue = \"N/A\";\n    } else {\n      cityValue = selectedValue.town_or_city;\n    }\n\n    if (mpanValue === undefined || mpanValue === '') {\n      mpanValue = '';\n    } else {\n      mpanValue = '';\n    }\n\n    if (mprnValue === undefined || mprnValue === '') {\n      mprnValue = '';\n    } else {\n      mprnValue = '';\n    }\n  }\n\n  const doornumber = doornumberValue;\n  const addressline1 = addressline1Value;\n  const addressline2 = addressline2Value;\n  const city = cityValue;\n  const postcode = postcodeValue;\n  const mpan = mpanValue;\n  const mprn = mprnValue; // useEffect to add the data to the state\n\n  useEffect(() => {\n    updateDataAddress({ ...dataAddress,\n      doornumber: doornumber,\n      addressline1: addressline1,\n      addressline2: addressline2,\n      city: city,\n      postcode: postcode,\n      mpan: mpan,\n      mprn: mprn\n    });\n    updateError(false);\n  }, [address]); // Function that runs every time the user writes to the input\n\n  const handleChange = e => {\n    updateDataAddress({ ...dataAddress,\n      [e.target.name]: e.target.value.replace(/[^\\w\\s]/gi, '').trim(),\n      mpan: '',\n      mprn: ''\n    });\n  };\n\n  const handleChangeTypeAddress = () => {\n    const door_typed = document.getElementById(\"door-number\").value;\n    const addres_line1_typed = document.getElementById(\"line1\").value;\n    const city_typed = document.getElementById(\"city\").value; // Validation for Typeaddress\n\n    if (door_typed !== '' && addres_line1_typed !== '' && city_typed !== '') {\n      // Hidde message\n      updateError(false);\n    }\n  }; // Send Add address to CustomerData \n\n\n  const sendAddress = async dataAddress => {\n    const door_typed = document.getElementById(\"door-number\").value;\n    const addres_line1_typed = document.getElementById(\"line1\").value;\n    const city_typed = document.getElementById(\"city\").value; // Validation for type address section\n\n    if (door_typed === '' || door_typed === undefined || addres_line1_typed === '' || addres_line1_typed === undefined || city_typed === '' || city_typed === undefined) {\n      updateError(true);\n      return;\n    } else {\n      updateError(false);\n    } // Show Overlay\n\n\n    updateShowOverlay(true); // Values to validate\n\n    const doornumberValidate = dataAddress.doornumber.replace(/[^\\w\\s]/gi, '').trim();\n    const addressValidate = dataAddress.addressline1.replace(/[^\\w\\s]/gi, '').trim();\n    const cityValidate = dataAddress.city.replace(/[^\\w\\s]/gi, '').trim();\n\n    if (doornumberValidate === '' || doornumberValidate === undefined || addressValidate === '' || addressValidate === undefined || cityValidate === '' || cityValidate === undefined) {\n      // Validation failed\n      updateError(true);\n    } else {\n      /** -- ECOES API -- */\n      // ecoes_api\n      const ecoes_api = process.env.REACT_APP_ECOES_API; // Body parameters\n\n      const postcodeParameters = {\n        \"Authentication\": {\n          \"Key\": ecoes_api\n        },\n        \"ParameterSets\": [{\n          \"Parameters\": [{\n            \"Key\": \"Postcode\",\n            \"Value\": postcodeValue.replace(/[^\\w\\s]/gi, '').trim()\n          }, {\n            \"Key\": \"BuildingNumber\",\n            \"Value\": doornumberValidate\n          }]\n        }]\n      }; // Response ECOES MPAN\n\n      const responseECOESMPAN = await fetch('https://cors-anywhere.herokuapp.com/https://www.ecoes.co.uk/WebServices/Trial/ECOESAPI.svc/RESTful/JSON/SearchUtilityAddress', {\n        method: 'POST',\n        body: JSON.stringify(postcodeParameters),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(function (response) {\n        if (response.status === 200) {\n          return response.json();\n        } else {\n          return console.error('An error ocurred fetching to ECOES SearchUtilityAddress');\n        }\n      }).then(function (response) {\n        // Error response\n        const error_response = response.Results[0].Errors.length; // Check values and return \n\n        if (error_response >= 1) {\n          const NA = 'NA';\n          return NA;\n        } else {\n          // Successful response\n          const successful_response = response.Results[0].UtilityAddressMatches[0].AddressDetails[0].Value;\n          return successful_response;\n        }\n      }).catch(function (error) {\n        return console.error(`Catch an error fetching to ECOES SearchUtilityAddress ${error}`);\n      }); // MPAN value\n\n      let mpan_core = '';\n\n      if (responseECOESMPAN !== \"NA\" && responseECOESMPAN !== undefined) {\n        mpan_core = responseECOESMPAN.replace(/[^\\w\\s]/gi, '').trim();\n      } else {\n        mpan_core = '';\n      } //If we get a MPAN value call ECOES Details - Conditional\n\n\n      if (mpan_core !== '') {\n        /**-- Response ECOES DETAILS by MPAN--  */\n        // Body parameters\n        const detailsParameters = {\n          \"Authentication\": {\n            \"Key\": ecoes_api\n          },\n          \"ParameterSets\": [{\n            \"Parameters\": [{\n              \"Key\": \"MPAN\",\n              \"Value\": mpan_core\n            }]\n          }]\n        };\n        const responseECOESDetails = await fetch('https://cors-anywhere.herokuapp.com/https://www.ecoes.co.uk/WebServices/Trial/ECOESAPI.svc/RESTful/JSON/GetTechnicalDetailsByMpan', {\n          method: 'POST',\n          body: JSON.stringify(detailsParameters),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }).then(function (response) {\n          if (response.status === 200) {\n            return response.json();\n          } else {\n            return console.error('An error ocurred fetching to GetTechnicalDetailsByMpan');\n          }\n        }).then(function (response) {\n          if (response !== undefined) {\n            // Error response\n            const error_response = response.Results[0].Errors.length; // Check values and return \n\n            if (error_response >= 1) {\n              // Electricity Infomartion values\n              const MPANDetails = {\n                mpan_core: '',\n                meter_serial_number: '',\n                meter_type: '',\n                supplier_mpid: ''\n              }; // Update the state\n\n              updateElectricityInformation({ ...electricityInformation,\n                MPANDetails\n              });\n            } else {\n              // Extract the values from the response\n              const meter_serial_number = response.Results[0].UtilityMatches[0].Meters[0].MeterDetails[1].Value;\n              const meter_type = response.Results[0].UtilityMatches[0].Meters[0].MeterDetails[2].Value;\n              const supplier_mpid = response.Results[0].UtilityMatches[0].UtilityDetails[11].Value; // Assign values\n\n              const MPANDetails = {\n                mpan_core,\n                meter_serial_number,\n                meter_type,\n                supplier_mpid\n              }; // Update the state\n\n              updateElectricityInformation({ ...electricityInformation,\n                MPANDetails\n              });\n            }\n          } else {\n            // Electricity Infomartion values\n            const MPANDetails = {\n              mpan_core: '',\n              meter_serial_number: '',\n              meter_type: '',\n              supplier_mpid: ''\n            }; // Update the state\n\n            return updateElectricityInformation({ ...electricityInformation,\n              MPANDetails\n            });\n          }\n        });\n      } else {\n        // Electricity Infomartion values\n        const MPANDetails = {\n          mpan_core: '',\n          meter_serial_number: '',\n          meter_type: '',\n          supplier_mpid: ''\n        }; // Update the state\n\n        updateElectricityInformation({ ...electricityInformation,\n          MPANDetails\n        });\n      }\n      /**--Postcode structure */\n      // Postcode unformatted\n\n\n      let postcode_unformatted = postcode; // Postcode without spaces\n\n      let postcode_unformatted_no_space = postcode_unformatted.replace(/ /g, ''); // Postcode formated\n\n      let postcode_formated = ''; // For a postcode structure AN-NAA\n\n      if (postcode_unformatted_no_space.length === 5) {\n        // First two chars \n        let first_two = postcode_unformatted_no_space.slice(0, 2); // Last three chars\n\n        let last_three = postcode_unformatted_no_space.slice(2, 5); // Formated Postcode\n\n        postcode_formated = first_two + ' ' + last_three;\n      } // For a postcode structure ANN-NAA, AAN-NAA, ANA-NAA\n\n\n      if (postcode_unformatted_no_space.length === 6) {\n        // First three chars \n        let first_three = postcode_unformatted_no_space.slice(0, 3); // Last three chars\n\n        let last_three = postcode_unformatted_no_space.slice(3, 6); // Formated Postcode\n\n        postcode_formated = first_three + ' ' + last_three;\n      } // For a postcode structure AANN-NAA, AANA-NAA\n\n\n      if (postcode_unformatted_no_space.length === 7) {\n        // First three chars \n        let first_four = postcode_unformatted_no_space.slice(0, 4); // Last three chars\n\n        let last_three = postcode_unformatted_no_space.slice(4, 7); // Formated Postcode\n\n        postcode_formated = first_four + ' ' + last_three;\n      }\n      /** -- XOSERVE API -- */\n      // xoserve_api\n\n\n      const xoserve_api = process.env.REACT_APP_XOSERVE_API;\n      const responseXOSERVE = await fetch(`https://cors-anywhere.herokuapp.com/https://xoserve.apimanagement.hana.ondemand.com:443/v1/switchdataTBB.svc?postcode='${postcode_formated}'&house_no='${doornumberValidate}'`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'APIKey': xoserve_api\n        }\n      }).then(function (response) {\n        if (response.status === 200) {\n          return response.json();\n        } else {\n          const mprn_core = '';\n          updateGasInformation({ ...gasInformation,\n            dataGas: {\n              mprn: '',\n              meter_mechanism_code: '',\n              current_supplier_id: '',\n              gas_transport_id: ''\n            }\n          });\n          console.error('An error ocurred fetching to Xoserve switchdataTBB');\n          return mprn_core;\n        }\n      }).then(function (response) {\n        // If exist information about the property \n        const success = response.hasOwnProperty('mprn');\n\n        if (success === true) {\n          const dataGas = response.mprn[0];\n          const mprn_core = response.mprn[0].mprn;\n          updateGasInformation({ ...gasInformation,\n            dataGas\n          });\n          return mprn_core;\n        } else {\n          const mprn_core = '';\n          updateGasInformation({ ...gasInformation,\n            dataGas: {\n              mprn: mprn_core,\n              meter_mechanism_code: '',\n              current_supplier_id: '',\n              gas_transport_id: ''\n            }\n          });\n          return mprn_core;\n        }\n      }).catch(function (error) {\n        return console.error(`Catch an error fetching to Xoserve switchdataTBB: ${error}`);\n      }); // MPRN value\n\n      let mprn_core = responseXOSERVE;\n\n      if (mprn_core === undefined) {\n        mprn_core = '';\n        updateGasInformation({ ...gasInformation,\n          dataGas: {\n            mprn: '',\n            meter_mechanism_code: '',\n            current_supplier_id: '',\n            gas_transport_id: ''\n          }\n        });\n      }\n\n      const postcode_formatted = dataAddress.postcode.replace(/\\s/g, '').trim().toLowerCase();\n      const doornumber_formatted = dataAddress.doornumber.replace(/\\s/g, '').trim().toLowerCase();\n      const uid = `${postcode_formatted}-${doornumber_formatted}`; // Document ref\n\n      let docRef = await db.collection(\"customers\").doc(uid); // // Fetching customer data\n      // const getCustomerData = async () => docRef.get().then((doc) => {\n      //   // If customer exist\n      //   if (doc.exists) {\n      //     return doc.data();\n      //   }\n      //   return;\n      // });\n      // Fetching customer data\n\n      const getCustomerData = async () => docRef.get().then(doc => {\n        // If customer exist\n        if (doc.exists) {\n          return doc.data();\n        }\n\n        return;\n      }).catch(error => {\n        console.log(error);\n        console.log('Fetching customer data failed');\n        return;\n      }); // Execute getCustomerData\n\n\n      let customer = await getCustomerData(); // Validate if customer exists\n\n      if (customer) {\n        // customerData\n        const customerData = customer; // Customer Information\n\n        const {\n          customerAddres,\n          MPANDetails,\n          dataGas\n        } = customerData; // Customer Address\n\n        const {\n          doornumber,\n          addressline1,\n          addressline2,\n          city,\n          postcode\n        } = customerAddres; // MPANDetails\n\n        const {\n          meter_type\n        } = MPANDetails; // dataGas\n\n        const {\n          meter_mechanism_code\n        } = dataGas; // Electricity company name\n\n        const company_name_es = MPANDetails.company_name; // MPAN\n\n        const mpan_fetched = MPANDetails.mpan_core; // Gas company name\n\n        const company_name_gs = dataGas.company_name; // MPRN\n\n        const mprn_fetched = dataGas.mprn; // Customer Information - Sweet alert\n\n        swal({\n          className: 'swal-modal_custom',\n          buttons: {\n            cancel: \"Cancel\",\n            confirm: \"Use this information\"\n          },\n          content: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-compare-details-info-container\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-compare-details-info\",\n                children: [/*#__PURE__*/_jsxDEV(IconContext.Provider, {\n                  value: {\n                    color: '#D338AE',\n                    size: '50px'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(ImProfile, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 608,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 607,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                  style: {\n                    marginBottom: '0'\n                  },\n                  children: \"Data found for this customer\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 611,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-compare-details-container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-compare-single-details\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        display: 'flex',\n                        flexDirection: 'column',\n                        textAlign: 'start'\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                        children: [\"Address:\", /*#__PURE__*/_jsxDEV(\"span\", {\n                          children: `${addressline1.toUpperCase()}${addressline2 === \"N/A\" ? '' : `, ${addressline2.toUpperCase()}`} `\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 617,\n                          columnNumber: 36\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 617,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: [\"Flat number:\", /*#__PURE__*/_jsxDEV(\"span\", {\n                          children: doornumber.toUpperCase()\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 618,\n                          columnNumber: 40\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 618,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: [\"City:\", /*#__PURE__*/_jsxDEV(\"span\", {\n                          children: city.toUpperCase()\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 619,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 619,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: [\"Postcode:\", /*#__PURE__*/_jsxDEV(\"span\", {\n                          children: postcode.toUpperCase()\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 620,\n                          columnNumber: 37\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 620,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 616,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 615,\n                    columnNumber: 21\n                  }, this), !!company_name_es || !!meter_type || !!mpan_fetched ? /*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: \"Electricity Information\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 628,\n                    columnNumber: 24\n                  }, this) : null, !!company_name_es ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-compare-single-details\",\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"Supplier: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: company_name_es\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 636,\n                        columnNumber: 40\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 636,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 635,\n                    columnNumber: 25\n                  }, this) : null, !!meter_type ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-compare-single-details\",\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"Meter Type: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: meter_type\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 647,\n                        columnNumber: 42\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 647,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 646,\n                    columnNumber: 25\n                  }, this) : null, !!mpan_fetched ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-compare-single-details\",\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"MPAN: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: mpan_fetched\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 658,\n                        columnNumber: 36\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 658,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 657,\n                    columnNumber: 25\n                  }, this) : null, !!company_name_gs || !!meter_mechanism_code || !!mprn_fetched ? /*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: \"Gas Information\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 669,\n                    columnNumber: 24\n                  }, this) : null, !!company_name_gs ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-compare-single-details\",\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"Supplier: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: company_name_gs\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 677,\n                        columnNumber: 40\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 677,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 676,\n                    columnNumber: 25\n                  }, this) : null, !!meter_mechanism_code ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-compare-single-details\",\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"Meter Type: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: meter_mechanism_code\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 688,\n                        columnNumber: 42\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 688,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 687,\n                    columnNumber: 25\n                  }, this) : null, !!mprn_fetched ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-compare-single-details\",\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"MPAN: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: mprn_fetched\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 699,\n                        columnNumber: 36\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 699,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 698,\n                    columnNumber: 25\n                  }, this) : null]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 613,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 605,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 604,\n              columnNumber: 15\n            }, this)\n          }, void 0, false)\n        }).then(result => {\n          if (result !== true) {\n            // postcode_formatted\n            const postcode_formatted = dataAddress.postcode.replace(/\\s/g, '').trim().toLowerCase(); // doornumber_formatted\n\n            const doornumber_formatted = dataAddress.doornumber.replace(/\\s/g, '').trim().toLowerCase(); // uid\n\n            const uid = `${postcode_formatted}-${doornumber_formatted}`; // Update firebase customer\n\n            db.collection(\"customers\").doc(uid).set({\n              created: firebase.firestore.FieldValue.serverTimestamp(),\n              step: 1,\n              customerAddres: {\n                doornumber: dataAddress.doornumber ? dataAddress.doornumber : '',\n                addressline1: dataAddress.addressline1 ? dataAddress.addressline1 : '',\n                addressline2: dataAddress.addressline2 ? dataAddress.addressline2 : '',\n                city: dataAddress.city ? dataAddress.city : '',\n                postcode: dataAddress.postcode ? dataAddress.postcode : '',\n                mpan: mpan_core ? mpan_core : '',\n                mprn: mprn_core ? mprn_core : ''\n              },\n              MPANDetails: {\n                mpan_core: '',\n                meter_serial_number: '',\n                meter_type: '',\n                supplier_mpid: '',\n                company_name: ''\n              },\n              dataGas: {\n                mprn: '',\n                meter_mechanism_code: '',\n                current_supplier_id: '',\n                gas_transport_id: '',\n                company_name: ''\n              }\n            }); // Validation successful\n\n            updateError(false); // Update data\n\n            updateCustomerAddress({ ...dataAddress,\n              mpan: mpan_core,\n              mprn: mprn_core\n            }); // Update progress bar\n\n            updateProgressBar({ ...progressBar,\n              step: 2\n            }); // Hidde Form Address\n\n            updateShowFormAddres(false); // Show Form Fuel type\n\n            updateShowFomrFuelType(true); // Hidde Overlay\n\n            updateShowOverlay(false);\n            console.log('Data was sent successfully - From cancel alert');\n            console.log('Update customers in firebse if it is necessary');\n            return;\n          }\n\n          console.log('Data was sent successfully - Using DB');\n          return customerStep(customerData);\n        }).catch(error => {\n          // Update firebase customer\n          db.collection(\"customers\").doc(uid).set({\n            created: firebase.firestore.FieldValue.serverTimestamp(),\n            step: 1,\n            customerAddres: {\n              doornumber: dataAddress.doornumber ? dataAddress.doornumber : '',\n              addressline1: dataAddress.addressline1 ? dataAddress.addressline1 : '',\n              addressline2: dataAddress.addressline2 ? dataAddress.addressline2 : '',\n              city: dataAddress.city ? dataAddress.city : '',\n              postcode: dataAddress.postcode ? dataAddress.postcode : '',\n              mpan: mpan_core ? mpan_core : '',\n              mprn: mprn_core ? mprn_core : ''\n            },\n            MPANDetails: {\n              mpan_core: '',\n              meter_serial_number: '',\n              meter_type: '',\n              supplier_mpid: '',\n              company_name: ''\n            },\n            dataGas: {\n              mprn: '',\n              meter_mechanism_code: '',\n              current_supplier_id: '',\n              gas_transport_id: '',\n              company_name: ''\n            }\n          });\n          console.log(error); // Validation successful\n\n          updateError(false); // Update data\n\n          updateCustomerAddress({ ...dataAddress,\n            mpan: mpan_core,\n            mprn: mprn_core\n          }); // Update progress bar\n\n          updateProgressBar({ ...progressBar,\n            step: 2\n          }); // Hidde Form Address\n\n          updateShowFormAddres(false); // Show Form Fuel type\n\n          updateShowFomrFuelType(true); // Hidde Overlay\n\n          updateShowOverlay(false);\n          console.log('Data was sent successfully - From error');\n          console.log('Update customers in firebse if it is necessary');\n          return;\n        }); // End process\n\n        return;\n      } // Create customer in firebase\n\n\n      updateCreateCustomer(true); // Validation successful\n\n      updateError(false); // Update data\n\n      updateCustomerAddress({ ...dataAddress,\n        mpan: mpan_core,\n        mprn: mprn_core\n      }); // Update progress bar\n\n      updateProgressBar({ ...progressBar,\n        step: 2\n      }); // Hidde Form Address\n\n      updateShowFormAddres(false); // Show Form Fuel type\n\n      updateShowFomrFuelType(true); // Hidde Overlay\n\n      updateShowOverlay(false);\n      console.log('Data was sent successfully - No user found');\n      console.log('Create a new customer in firebase'); // End process\n\n      return;\n    }\n  };\n  /** --  Listener to create a customer in firebase -- */\n\n\n  useEffect(() => {\n    (async () => {\n      // createCustomer\n      if (createCustomer) {\n        // postcode_formatted\n        const postcode_formatted = dataAddress.postcode.replace(/\\s/g, '').trim().toLowerCase(); // doornumber_formatted\n\n        const doornumber_formatted = dataAddress.doornumber.replace(/\\s/g, '').trim().toLowerCase(); // uid\n\n        const uid = `${postcode_formatted}-${doornumber_formatted}`; // Firebase\n\n        await db.collection(\"customers\").doc(uid).set({\n          created: firebase.firestore.FieldValue.serverTimestamp(),\n          step: 1,\n          customerAddres: {\n            doornumber: dataAddress.doornumber ? dataAddress.doornumber : '',\n            addressline1: dataAddress.addressline1 ? dataAddress.addressline1 : '',\n            addressline2: dataAddress.addressline2 ? dataAddress.addressline2 : '',\n            city: dataAddress.city ? dataAddress.city : '',\n            postcode: dataAddress.postcode ? dataAddress.postcode : '',\n            mpan: electricityInformation.MPANDetails.mpan_core ? electricityInformation.MPANDetails.mpan_core : '',\n            mprn: gasInformation.dataGas.mprn ? gasInformation.dataGas.mprn : ''\n          },\n          MPANDetails: {\n            meter_serial_number: electricityInformation.MPANDetails.meter_serial_number ? electricityInformation.MPANDetails.meter_serial_number : '',\n            meter_type: electricityInformation.MPANDetails.meter_type ? electricityInformation.MPANDetails.meter_type : '',\n            mpan_core: electricityInformation.MPANDetails.mpan_core ? electricityInformation.MPANDetails.mpan_core : '',\n            supplier_mpid: electricityInformation.MPANDetails.supplier_mpid ? electricityInformation.MPANDetails.supplier_mpid : ''\n          },\n          dataGas: {\n            mprn: gasInformation.dataGas.mprn ? gasInformation.dataGas.mprn : '',\n            meter_mechanism_code: gasInformation.dataGas.meter_mechanism_code ? gasInformation.dataGas.meter_mechanism_code : '',\n            current_supplier_id: gasInformation.dataGas.current_supplier_id ? gasInformation.dataGas.current_supplier_id : '',\n            gas_transport_id: gasInformation.dataGas.gas_transport_id ? gasInformation.dataGas.gas_transport_id : ''\n          }\n        });\n      }\n    })();\n  }, [createCustomer]); // Go back to postcode\n\n  const goToPostcode = e => {\n    e.preventDefault(); // Hidde Form Address\n\n    updateShowFormAddres(false); // Show Postcode\n\n    updateShowFormPostCode(true); // Update progress bar\n\n    updateProgressBar({ ...progressBar,\n      step: 0\n    });\n  }; // Address is not listed\n\n\n  const type_address = e => {\n    e.preventDefault(); // Update data address \n\n    updateDataAddress({ ...dataAddress,\n      doornumber: '',\n      addressline1: '',\n      addressline2: '',\n      city: '',\n      // postcode: '',\n      mpan: '',\n      mprn: ''\n    }); // Cleaning states\n\n    updateElectricityInformation({});\n    updateGasInformation({});\n    updateAddress('');\n    updateShowTypeAddres(false);\n    updateError(false); // Reset form\n\n    let reset_doornumber = document.getElementById('door-number');\n    let reset_line1 = document.getElementById('line1');\n    let reset_line2 = document.getElementById('line2');\n    let reset_city = document.getElementById('city');\n\n    if (reset_doornumber !== null && reset_line1 !== null && reset_line2 !== null && reset_city !== null) {\n      reset_doornumber.value = '';\n      reset_line1.value = '';\n      reset_line2.value = '';\n      reset_city.value = '';\n    }\n  }; // HandleChangeSelect\n\n\n  const handleChangeSelect = e => {\n    e.preventDefault(); // Update states\n\n    updateShowTypeAddres(true);\n    updateDataAddress({ ...dataAddress,\n      doornumber: '',\n      addressline1: '',\n      addressline2: '',\n      city: '',\n      // postcode: '',\n      mpan: '',\n      mprn: ''\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: showTypeAddress ? address === \"\" ? /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"form-address-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-address-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-address-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-address\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Select your addres from the below\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 974,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Having the correct address is key to ensuring we select the correct MPAN / MRPN for the customer's address. Id the customer's address is not present in the list below, we must enter it manually and request the customers MPAN / MPRN to enable successful switch.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 975,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 973,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(SelectAddress, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 980,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 979,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-address-manually-btn\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              \"data-cy\": \"addr-empty\",\n              onClick: e => type_address(e),\n              children: \"My address isn't listed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 984,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 983,\n            columnNumber: 17\n          }, this), error === true ? /*#__PURE__*/_jsxDEV(Error, {\n            message: 'Please enter an address'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 988,\n            columnNumber: 35\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-address-btn-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"form-address-btn btn-back\",\n              onClick: goToPostcode,\n              children: [/*#__PURE__*/_jsxDEV(IconContext.Provider, {\n                value: {\n                  color: '#D338AE',\n                  size: '35px'\n                },\n                children: /*#__PURE__*/_jsxDEV(IoMdArrowDropleft, {\n                  className: \"icon-back\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 994,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 993,\n                columnNumber: 21\n              }, this), \"Go back\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 992,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              \"data-cy\": \"addr-noselected\",\n              className: \"form-address-btn btn-next\",\n              onClick: () => address === '' ? updateError(true) : null,\n              children: [\"Continue\", /*#__PURE__*/_jsxDEV(IconContext.Provider, {\n                value: {\n                  color: '#FFF',\n                  size: '35px'\n                },\n                children: /*#__PURE__*/_jsxDEV(IoMdArrowDropright, {\n                  className: \"icon-next\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1003,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1002,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 999,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 991,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 972,\n          columnNumber: 15\n        }, this), showScript ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"helper-address\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"script-address\",\n            children: /*#__PURE__*/_jsxDEV(FormScript, {\n              step: 2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1013,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1012,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"assistant-address-custom\",\n            children: /*#__PURE__*/_jsxDEV(FormAssistant, {\n              tips: 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1017,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1016,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1011,\n          columnNumber: 19\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '100%'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"assistant-address\",\n            children: /*#__PURE__*/_jsxDEV(FormAssistant, {\n              tips: 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1024,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1023,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1022,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 971,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 970,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"form-address-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-address-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-address-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-address\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Select your addres from the below\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1036,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Having the correct address is key to ensuring we select the correct MPAN / MRPN for the customer's address. Id the customer's address is not present in the list below, we must enter it manually and request the customers MPAN / MPRN to enable successful switch.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1037,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1035,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(SelectAddress, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1042,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1041,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-address-manually-btn\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => type_address(e),\n              className: focusAnimation ? 'animate__animated animate__headShake' : '',\n              children: \"My address isn't listed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1046,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1045,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"form-address-input-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-address-input-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Address Information\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1052,\n                columnNumber: 21\n              }, this), error === true ? /*#__PURE__*/_jsxDEV(Error, {\n                message: 'Please enter an address'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1055,\n                columnNumber: 39\n              }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-address-input\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Door number\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1058,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  onClick: () => setFocusAnimation(!focusAnimation),\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    id: \"door-number\",\n                    name: \"doornumber\",\n                    type: \"text\",\n                    value: dataAddress.doornumber || '',\n                    disabled: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1060,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1059,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1057,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-address-input\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Address Line 1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1071,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  onClick: () => setFocusAnimation(!focusAnimation),\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    id: \"line1\",\n                    name: \"addressline1\",\n                    type: \"text\",\n                    value: dataAddress.addressline1 || '',\n                    disabled: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1073,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-address-tooltip\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: dataAddress.addressline1\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1080,\n                      columnNumber: 63\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1080,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1072,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1070,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-address-input\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Address line 2 (optional)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1085,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  onClick: () => setFocusAnimation(!focusAnimation),\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    id: \"line2\",\n                    name: \"addressline2\",\n                    type: \"text\",\n                    value: dataAddress.addressline2 || '',\n                    disabled: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1087,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1086,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1084,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-address-input\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"City\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1098,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  onClick: () => setFocusAnimation(!focusAnimation),\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    id: \"city\",\n                    name: \"city\",\n                    type: \"text\",\n                    value: dataAddress.city || '',\n                    disabled: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1100,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1099,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1097,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-address-input\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Postcode\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1111,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  onClick: () => setFocusAnimation(!focusAnimation),\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    id: \"postcode\",\n                    name: \"postcode\",\n                    type: \"text\",\n                    value: dataAddress.postcode || '',\n                    disabled: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1113,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1112,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1110,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1051,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1050,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-address-btn-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"form-address-btn btn-back\",\n              onClick: goToPostcode,\n              children: [/*#__PURE__*/_jsxDEV(IconContext.Provider, {\n                value: {\n                  color: '#D338AE',\n                  size: '35px'\n                },\n                children: /*#__PURE__*/_jsxDEV(IoMdArrowDropleft, {\n                  className: \"icon-back\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1129,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1128,\n                columnNumber: 21\n              }, this), \"Go back\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1127,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"form-address-btn btn-next\",\n              onClick: e => e.preventDefault(sendAddress(dataAddress)),\n              children: [\"Continue\", /*#__PURE__*/_jsxDEV(IconContext.Provider, {\n                value: {\n                  color: '#FFF',\n                  size: '35px'\n                },\n                children: /*#__PURE__*/_jsxDEV(IoMdArrowDropright, {\n                  className: \"icon-next\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1138,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1137,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1134,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1126,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1034,\n          columnNumber: 15\n        }, this), showScript ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"helper-address\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"script-address\",\n            children: /*#__PURE__*/_jsxDEV(FormScript, {\n              step: 2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1148,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1147,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"assistant-address-custom\",\n            children: /*#__PURE__*/_jsxDEV(FormAssistant, {\n              tips: 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1152,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1151,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1146,\n          columnNumber: 19\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '100%'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"assistant-address\",\n            children: /*#__PURE__*/_jsxDEV(FormAssistant, {\n              tips: 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1159,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1158,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1157,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1033,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1032,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"form-address-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-address-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-address-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-address\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Select your addres from the below\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1173,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Having the correct address is key to ensuring we select the correct MPAN / MRPN for the customer's address. Id the customer's address is not present in the list below, we must enter it manually and request the customers MPAN / MPRN to enable successful switch.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1174,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1172,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onChange: e => handleChangeSelect(e),\n            children: /*#__PURE__*/_jsxDEV(SelectAddress, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1179,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1178,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-address-manually-btn\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => type_address(e),\n              children: \"My address isn't listed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1183,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1182,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"form-address-input-container\",\n            onChange: () => handleChangeTypeAddress(),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-address-input-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Type address manually\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1189,\n                columnNumber: 21\n              }, this), error === true ? /*#__PURE__*/_jsxDEV(Error, {\n                message: 'Please enter an address'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1192,\n                columnNumber: 39\n              }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-address-input\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Door number\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1195,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"door-number\",\n                  type: \"text\",\n                  value: dataAddress.doornumber || '',\n                  onChange: e => handleChange(e),\n                  name: \"doornumber\",\n                  \"data-cy\": \"door-input\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1196,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1194,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-address-input\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Address Line 1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1207,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"line1\",\n                  type: \"text\",\n                  value: dataAddress.addressline1 || '',\n                  onChange: e => handleChange(e),\n                  name: \"addressline1\",\n                  \"data-cy\": \"addr1-input\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1208,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-address-tooltip\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: dataAddress.addressline1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1216,\n                    columnNumber: 61\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1216,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1206,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-address-input\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Address line 2 (optional)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1220,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"line2\",\n                  type: \"text\",\n                  value: dataAddress.addressline2 || '',\n                  onChange: e => handleChange(e),\n                  name: \"addressline2\",\n                  \"data-cy\": \"addr2-input\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1221,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1219,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-address-input\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"City\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1232,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"city\",\n                  type: \"text\",\n                  value: dataAddress.city || '',\n                  onChange: e => handleChange(e),\n                  name: \"city\",\n                  \"data-cy\": \"city-input\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1233,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1231,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-address-input\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Postcode\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1244,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"postcode\",\n                  type: \"text\",\n                  value: postcodeValue,\n                  onChange: e => handleChange(e),\n                  name: \"postcode\",\n                  disabled: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1245,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1243,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1188,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1187,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-address-btn-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"form-address-btn btn-back\",\n              onClick: goToPostcode,\n              children: [/*#__PURE__*/_jsxDEV(IconContext.Provider, {\n                value: {\n                  color: '#D338AE',\n                  size: '35px'\n                },\n                children: /*#__PURE__*/_jsxDEV(IoMdArrowDropleft, {\n                  className: \"icon-back\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1262,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1261,\n                columnNumber: 21\n              }, this), \"Go back\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1260,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              \"data-cy\": \"addrtyped-continue\",\n              className: \"form-address-btn btn-next\",\n              onClick: e => e.preventDefault(sendAddress(dataAddress)),\n              children: [\"Continue\", /*#__PURE__*/_jsxDEV(IconContext.Provider, {\n                value: {\n                  color: '#FFF',\n                  size: '35px'\n                },\n                children: /*#__PURE__*/_jsxDEV(IoMdArrowDropright, {\n                  className: \"icon-next\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1271,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1270,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1267,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1259,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1171,\n          columnNumber: 15\n        }, this), showScript ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"helper-address\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"script-address\",\n            children: /*#__PURE__*/_jsxDEV(FormScript, {\n              step: 2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1281,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1280,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"assistant-address-custom\",\n            children: /*#__PURE__*/_jsxDEV(FormAssistant, {\n              tips: 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1285,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1284,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1279,\n          columnNumber: 19\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '100%'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"assistant-address\",\n            children: /*#__PURE__*/_jsxDEV(FormAssistant, {\n              tips: 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1292,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1291,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1290,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1170,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1169,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n}\n\n_s(FormAddress, \"/hmGGrop2Y8hdr1qZiMw9+Swuzk=\", false, function () {\n  return [useAddress];\n});\n\n_c = FormAddress;\nexport default FormAddress;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormAddress\");","map":{"version":3,"sources":["/Users/juanlugo/Desktop/sp-firebase/src/components/FormCards/FormAddress/FormAddress.jsx"],"names":["React","useState","useEffect","db","firebase","swal","IconContext","IoMdArrowDropleft","IoMdArrowDropright","ImProfile","useAddress","FormScript","Error","FormAssistant","FormAddress","postcodeValue","gasInformation","electricityInformation","progressBar","showScript","customerStep","updateCustomerAddress","updateGasInformation","updateElectricityInformation","updateShowFormPostCode","updateShowFormAddres","updateShowOverlay","updateProgressBar","updateShowFomrFuelType","dataAddress","updateDataAddress","doornumber","addressline1","addressline2","city","postcode","mpan","mprn","addressList","updateAddressList","address","SelectAddress","updateAddress","showTypeAddress","updateShowTypeAddres","error","updateError","createCustomer","updateCreateCustomer","focusAnimation","setFocusAnimation","scroll_to","element","document","querySelector","scrollIntoView","behavior","block","inline","window","scrollTo","top","fetchAPI","key","process","env","REACT_APP_ADDRESS_API","url","replace","toLowerCase","response_postcode","fetch","method","then","response","status","json","button","icon","content","catch","console","undefined","data","addresses","forEach","item","i","id","selectedValue","log","doornumberValue","formatted_address","addressline1Value","toString","addressline2Value","cityValue","town_or_city","mpanValue","mprnValue","handleChange","e","target","name","value","trim","handleChangeTypeAddress","door_typed","getElementById","addres_line1_typed","city_typed","sendAddress","doornumberValidate","addressValidate","cityValidate","ecoes_api","REACT_APP_ECOES_API","postcodeParameters","responseECOESMPAN","body","JSON","stringify","headers","error_response","Results","Errors","length","NA","successful_response","UtilityAddressMatches","AddressDetails","Value","mpan_core","detailsParameters","responseECOESDetails","MPANDetails","meter_serial_number","meter_type","supplier_mpid","UtilityMatches","Meters","MeterDetails","UtilityDetails","postcode_unformatted","postcode_unformatted_no_space","postcode_formated","first_two","slice","last_three","first_three","first_four","xoserve_api","REACT_APP_XOSERVE_API","responseXOSERVE","mprn_core","dataGas","meter_mechanism_code","current_supplier_id","gas_transport_id","success","hasOwnProperty","postcode_formatted","doornumber_formatted","uid","docRef","collection","doc","getCustomerData","get","exists","customer","customerData","customerAddres","company_name_es","company_name","mpan_fetched","company_name_gs","mprn_fetched","className","buttons","cancel","confirm","color","size","marginBottom","display","flexDirection","textAlign","toUpperCase","result","set","created","firestore","FieldValue","serverTimestamp","step","goToPostcode","preventDefault","type_address","reset_doornumber","reset_line1","reset_line2","reset_city","handleChangeSelect","width"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CACA;;AACA,OAAO,mBAAP,C,CACA;;AACA,SAASC,EAAT,QAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,cAArB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,wBAAjB,C,CACA;;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,iBAAT,EAA4BC,kBAA5B,QAAsD,gBAAtD;AACA,SAASC,SAAT,QAA0B,gBAA1B,C,CAEA;;AACA,OAAOC,UAAP,MAAuB,sCAAvB,C,CAEA;;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;;;;AAEA,SAASC,WAAT,CAAqB;AAAEC,EAAAA,aAAF;AAAiBC,EAAAA,cAAjB;AAAiCC,EAAAA,sBAAjC;AAAyDC,EAAAA,WAAzD;AAAsEC,EAAAA,UAAtE;AAAkFC,EAAAA,YAAlF;AAAgGC,EAAAA,qBAAhG;AAAuHC,EAAAA,oBAAvH;AAA6IC,EAAAA,4BAA7I;AAA2KC,EAAAA,sBAA3K;AAAmMC,EAAAA,oBAAnM;AAAyNC,EAAAA,iBAAzN;AAA4OC,EAAAA,iBAA5O;AAA+PC,EAAAA;AAA/P,CAArB,EAA8S;AAAA;;AAC5S;AACA;AACA,QAAM,CAACC,WAAD,EAAcC,iBAAd,IAAmC7B,QAAQ,CAAC;AAChD8B,IAAAA,UAAU,EAAE,EADoC;AAEhDC,IAAAA,YAAY,EAAE,EAFkC;AAGhDC,IAAAA,YAAY,EAAE,EAHkC;AAIhDC,IAAAA,IAAI,EAAE,EAJ0C;AAKhDC,IAAAA,QAAQ,EAAE,EALsC;AAMhDC,IAAAA,IAAI,EAAE,EAN0C;AAOhDC,IAAAA,IAAI,EAAE;AAP0C,GAAD,CAAjD,CAH4S,CAa5S;;AACA,QAAM,CAACC,WAAD,EAAcC,iBAAd,IAAmCtC,QAAQ,CAAC,EAAD,CAAjD,CAd4S,CAgB5S;;AACA,QAAM,CAACuC,OAAD,EAAUC,aAAV,EAAyBC,aAAzB,IAA0ChC,UAAU,CACxD,EADwD,EACpD;AACJ,IAFwD,EAEpD;AACJ4B,EAAAA,WAHwD,CAG5C;AAH4C,GAA1D,CAjB4S,CAuB5S;;AACA,QAAM,CAACK,eAAD,EAAkBC,oBAAlB,IAA0C3C,QAAQ,CAAC,IAAD,CAAxD,CAxB4S,CA0B5S;;AACA,QAAM,CAAC4C,KAAD,EAAQC,WAAR,IAAuB7C,QAAQ,CAAC,KAAD,CAArC,CA3B4S,CA6B5S;;AACA,QAAM,CAAC8C,cAAD,EAAiBC,oBAAjB,IAAyC/C,QAAQ,CAAC,KAAD,CAAvD,CA9B4S,CAgC5S;;AACA,QAAM,CAACgD,cAAD,EAAiBC,iBAAjB,IAAsCjD,QAAQ,CAAC,KAAD,CAApD;AAEA;AAEA;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI2C,KAAJ,EAAW;AACT,YAAMM,SAAS,GAAG,MAAM;AACtB,YAAIC,OAAO,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAd,CADsB,CAEtB;;AACAF,QAAAA,OAAO,CAACG,cAAR,CAAuB;AAAEC,UAAAA,QAAQ,EAAE,QAAZ;AAAsBC,UAAAA,KAAK,EAAE,KAA7B;AAAoCC,UAAAA,MAAM,EAAE;AAA5C,SAAvB;AACD,OAJD;;AAMAP,MAAAA,SAAS;AACV;AACF,GAVQ,EAUN,CAACN,KAAD,CAVM,CAAT,CAtC4S,CAkD5S;;AACA3C,EAAAA,SAAS,CAAC,MAAM;AACdyD,IAAAA,MAAM,CAACC,QAAP,CAAgB;AAAEC,MAAAA,GAAG,EAAE,CAAP;AAAUL,MAAAA,QAAQ,EAAE;AAApB,KAAhB;AACD,GAFQ,EAEN,EAFM,CAAT,CAnD4S,CAuD5S;;AACAtD,EAAAA,SAAS,CAAC,MAAM;AAEd;AAEA;AACA,UAAM4D,QAAQ,GAAG,YAAY;AAC3B;AACA,YAAMC,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,qBAAxB;AACA,YAAMC,GAAG,GAAI,kCAAiCpD,aAAa,CAACqD,OAAd,CAAsB,IAAtB,EAA4B,EAA5B,EAAgCC,WAAhC,EAA8C,YAAWN,GAAI,cAA3G;AACA,YAAMO,iBAAiB,GAAG,MAAMC,KAAK,CAACJ,GAAD,EAAM;AACzCK,QAAAA,MAAM,EAAE;AADiC,OAAN,CAAL,CAE7BC,IAF6B,CAExB,UAAUC,QAAV,EAAoB;AAC1B,YAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,iBAAOD,QAAQ,CAACE,IAAT,EAAP;AACD,SAFD,MAEO;AACLvE,UAAAA,IAAI,CAAC;AACHwE,YAAAA,MAAM,EAAE,IADL;AAEHC,YAAAA,IAAI,EAAE,MAFH;AAGHC,YAAAA,OAAO,eACL;AAAK,cAAA,SAAS,EAAC,kBAAf;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJC,WAAD,CAAJ;AAYA;AACD;AACF,OApB+B,EAoB7BN,IApB6B,CAoBxB,UAAUC,QAAV,EAAoB;AAC1B,eAAOA,QAAP;AACD,OAtB+B,EAsB7BM,KAtB6B,CAsBvB,UAAUnC,KAAV,EAAiB;AACxBoC,QAAAA,OAAO,CAACpC,KAAR,CAAe,wCAAuCA,KAAM,EAA5D;AACAxC,QAAAA,IAAI,CAAC;AACHwE,UAAAA,MAAM,EAAE,IADL;AAEHC,UAAAA,IAAI,EAAE,MAFH;AAGHC,UAAAA,OAAO,eACL;AAAK,YAAA,SAAS,EAAC,kBAAf;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJC,SAAD,CAAJ;AAYA;AACD,OArC+B,CAAhC;;AAuCA,UAAIT,iBAAiB,KAAKY,SAA1B,EAAqC;AAEnC,cAAMC,IAAI,GAAGb,iBAAiB,CAACc,SAA/B,CAFmC,CAInC;;AACAD,QAAAA,IAAI,CAACE,OAAL,CAAa,CAACC,IAAD,EAAOC,CAAP,KAAa;AACxBD,UAAAA,IAAI,CAACE,EAAL,GAAUD,CAAC,GAAG,CAAd;AACD,SAFD;;AAIA,YAAIjD,WAAW,KAAK,EAApB,EAAwB;AACtB;AACD,SAFD,MAEO;AACLC,UAAAA,iBAAiB,CAAC4C,IAAD,CAAjB;AACD;AACF,OAdD,MAcO;AACL;AACD;AACF,KA5DD,CALc,CAkEd;;;AACArB,IAAAA,QAAQ;AACT,GApEQ,EAoEN,EApEM,CAAT,CAxD4S,CA8H5S;;AACA,MAAItB,OAAO,KAAK,EAAhB,EAAoB;AAClB;AACA,UAAMiD,aAAa,GAAGnD,WAAW,CAACE,OAAO,GAAG,CAAX,CAAjC;AAEAyC,IAAAA,OAAO,CAACS,GAAR,CAAYD,aAAZ,EAJkB,CAMlB;;AACA,QAAIE,eAAe,GAAGF,aAAa,CAACG,iBAAd,CAAgC,CAAhC,EAAmCxB,OAAnC,CAA2C,UAA3C,EAAuD,EAAvD,CAAtB;AACA,QAAIyB,iBAAiB,GAAGJ,aAAa,CAACG,iBAAd,CAAgCE,QAAhC,GAA2C1B,OAA3C,CAAmD,MAAnD,EAA0D,GAA1D,EAA+DA,OAA/D,CAAuE,IAAvE,EAA6E,IAA7E,CAAxB;AACA,QAAI2B,iBAAiB,GAAG,EAAxB;AACA,QAAIC,SAAS,GAAGP,aAAa,CAACQ,YAA9B;AACA,QAAIC,SAAS,GAAG,EAAhB;AACA,QAAIC,SAAS,GAAG,EAAhB;;AAEA,QAAIR,eAAe,KAAKT,SAApB,IAAiCS,eAAe,KAAK,EAAzD,EAA6D;AAC3DA,MAAAA,eAAe,GAAG,KAAlB;AACD,KAFD,MAEO;AACLA,MAAAA,eAAe,GAAGF,aAAa,CAACG,iBAAd,CAAgC,CAAhC,EAAmCxB,OAAnC,CAA2C,UAA3C,EAAuD,EAAvD,CAAlB;AACD;;AAED,QAAIyB,iBAAiB,KAAKX,SAAtB,IAAmCW,iBAAiB,KAAK,EAA7D,EAAiE;AAC/DA,MAAAA,iBAAiB,GAAG,KAApB;AACD,KAFD,MAEO;AACLA,MAAAA,iBAAiB,GAAGJ,aAAa,CAACG,iBAAd,CAAgCE,QAAhC,GAA2C1B,OAA3C,CAAmD,MAAnD,EAA0D,GAA1D,EAA+DA,OAA/D,CAAuE,IAAvE,EAA6E,IAA7E,CAApB;AACD;;AAED,QAAI2B,iBAAiB,KAAKb,SAAtB,IAAmCa,iBAAiB,KAAK,EAA7D,EAAiE;AAC/DA,MAAAA,iBAAiB,GAAG,KAApB;AACD,KAFD,MAEO;AACLA,MAAAA,iBAAiB,GAAG,EAApB;AACD;;AAED,QAAIC,SAAS,KAAKd,SAAd,IAA2Bc,SAAS,KAAK,EAA7C,EAAiD;AAC/CA,MAAAA,SAAS,GAAG,KAAZ;AACD,KAFD,MAEO;AACLA,MAAAA,SAAS,GAAGP,aAAa,CAACQ,YAA1B;AACD;;AAED,QAAIC,SAAS,KAAKhB,SAAd,IAA2BgB,SAAS,KAAK,EAA7C,EAAiD;AAC/CA,MAAAA,SAAS,GAAG,EAAZ;AACD,KAFD,MAEO;AACLA,MAAAA,SAAS,GAAG,EAAZ;AACD;;AAED,QAAIC,SAAS,KAAKjB,SAAd,IAA2BiB,SAAS,KAAK,EAA7C,EAAiD;AAC/CA,MAAAA,SAAS,GAAG,EAAZ;AACD,KAFD,MAEO;AACLA,MAAAA,SAAS,GAAG,EAAZ;AACD;AACF;;AAED,QAAMpE,UAAU,GAAG4D,eAAnB;AACA,QAAM3D,YAAY,GAAG6D,iBAArB;AACA,QAAM5D,YAAY,GAAG8D,iBAArB;AACA,QAAM7D,IAAI,GAAG8D,SAAb;AACA,QAAM7D,QAAQ,GAAGpB,aAAjB;AACA,QAAMqB,IAAI,GAAG8D,SAAb;AACA,QAAM7D,IAAI,GAAG8D,SAAb,CAxL4S,CA0L5S;;AACAjG,EAAAA,SAAS,CAAC,MAAM;AACd4B,IAAAA,iBAAiB,CAAC,EAChB,GAAGD,WADa;AAEhBE,MAAAA,UAAU,EAAEA,UAFI;AAGhBC,MAAAA,YAAY,EAAEA,YAHE;AAIhBC,MAAAA,YAAY,EAAEA,YAJE;AAKhBC,MAAAA,IAAI,EAAEA,IALU;AAMhBC,MAAAA,QAAQ,EAAEA,QANM;AAOhBC,MAAAA,IAAI,EAAEA,IAPU;AAQhBC,MAAAA,IAAI,EAAEA;AARU,KAAD,CAAjB;AAWAS,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD,GAbQ,EAaN,CAACN,OAAD,CAbM,CAAT,CA3L4S,CA0M5S;;AACA,QAAM4D,YAAY,GAAIC,CAAD,IAAO;AAC1BvE,IAAAA,iBAAiB,CAAC,EAChB,GAAGD,WADa;AAEhB,OAACwE,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE,KAAT,CAAepC,OAAf,CAAuB,WAAvB,EAAoC,EAApC,EAAwCqC,IAAxC,EAFD;AAGhBrE,MAAAA,IAAI,EAAE,EAHU;AAIhBC,MAAAA,IAAI,EAAE;AAJU,KAAD,CAAjB;AAMD,GAPD;;AASA,QAAMqE,uBAAuB,GAAG,MAAM;AACpC,UAAMC,UAAU,GAAGtD,QAAQ,CAACuD,cAAT,CAAwB,aAAxB,EAAuCJ,KAA1D;AACA,UAAMK,kBAAkB,GAAGxD,QAAQ,CAACuD,cAAT,CAAwB,OAAxB,EAAiCJ,KAA5D;AACA,UAAMM,UAAU,GAAGzD,QAAQ,CAACuD,cAAT,CAAwB,MAAxB,EAAgCJ,KAAnD,CAHoC,CAKpC;;AACA,QAAKG,UAAU,KAAK,EAAhB,IAAwBE,kBAAkB,KAAK,EAA/C,IAAuDC,UAAU,KAAK,EAA1E,EAA+E;AAC7E;AACAhE,MAAAA,WAAW,CAAC,KAAD,CAAX;AACD;AACF,GAVD,CApN4S,CAgO5S;;;AACA,QAAMiE,WAAW,GAAG,MAAOlF,WAAP,IAAuB;AAEzC,UAAM8E,UAAU,GAAGtD,QAAQ,CAACuD,cAAT,CAAwB,aAAxB,EAAuCJ,KAA1D;AACA,UAAMK,kBAAkB,GAAGxD,QAAQ,CAACuD,cAAT,CAAwB,OAAxB,EAAiCJ,KAA5D;AACA,UAAMM,UAAU,GAAGzD,QAAQ,CAACuD,cAAT,CAAwB,MAAxB,EAAgCJ,KAAnD,CAJyC,CAMzC;;AACA,QAAMG,UAAU,KAAK,EAAhB,IAAwBA,UAAU,KAAKzB,SAAxC,IAAyD2B,kBAAkB,KAAK,EAAxB,IAAgCA,kBAAkB,KAAK3B,SAA/G,IAAgI4B,UAAU,KAAK,EAAhB,IAAwBA,UAAU,KAAK5B,SAA1K,EAAuL;AACrLpC,MAAAA,WAAW,CAAC,IAAD,CAAX;AACA;AACD,KAHD,MAGO;AACLA,MAAAA,WAAW,CAAC,KAAD,CAAX;AACD,KAZwC,CAczC;;;AACApB,IAAAA,iBAAiB,CAAC,IAAD,CAAjB,CAfyC,CAiBzC;;AACA,UAAMsF,kBAAkB,GAAGnF,WAAW,CAACE,UAAZ,CAAuBqC,OAAvB,CAA+B,WAA/B,EAA4C,EAA5C,EAAgDqC,IAAhD,EAA3B;AACA,UAAMQ,eAAe,GAAGpF,WAAW,CAACG,YAAZ,CAAyBoC,OAAzB,CAAiC,WAAjC,EAA8C,EAA9C,EAAkDqC,IAAlD,EAAxB;AACA,UAAMS,YAAY,GAAGrF,WAAW,CAACK,IAAZ,CAAiBkC,OAAjB,CAAyB,WAAzB,EAAsC,EAAtC,EAA0CqC,IAA1C,EAArB;;AAEA,QAAIO,kBAAkB,KAAK,EAAvB,IAA6BA,kBAAkB,KAAK9B,SAApD,IAAiE+B,eAAe,KAAK,EAArF,IAA2FA,eAAe,KAAK/B,SAA/G,IAA4HgC,YAAY,KAAK,EAA7I,IAAmJA,YAAY,KAAKhC,SAAxK,EAAmL;AACjL;AACApC,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD,KAHD,MAGO;AACL;AAEA;AACA,YAAMqE,SAAS,GAAGnD,OAAO,CAACC,GAAR,CAAYmD,mBAA9B,CAJK,CAML;;AACA,YAAMC,kBAAkB,GAAG;AACzB,0BAAkB;AAChB,iBAAOF;AADS,SADO;AAIzB,yBAAiB,CAAC;AAChB,wBAAc,CACZ;AACE,mBAAO,UADT;AAEE,qBAASpG,aAAa,CAACqD,OAAd,CAAsB,WAAtB,EAAmC,EAAnC,EAAuCqC,IAAvC;AAFX,WADY,EAKZ;AACE,mBAAO,gBADT;AAEE,qBAASO;AAFX,WALY;AADE,SAAD;AAJQ,OAA3B,CAPK,CAyBL;;AACA,YAAMM,iBAAiB,GAAG,MAAM/C,KAAK,CAAC,8HAAD,EAAiI;AACpKC,QAAAA,MAAM,EAAE,MAD4J;AAEpK+C,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,kBAAf,CAF8J;AAGpKK,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AAH2J,OAAjI,CAAL,CAM7BjD,IAN6B,CAMxB,UAAUC,QAAV,EAAoB;AAC1B,YAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,iBAAOD,QAAQ,CAACE,IAAT,EAAP;AACD,SAFD,MAEO;AACL,iBAAOK,OAAO,CAACpC,KAAR,CAAc,yDAAd,CAAP;AACD;AACF,OAZ+B,EAY7B4B,IAZ6B,CAYxB,UAAUC,QAAV,EAAoB;AAC1B;AACA,cAAMiD,cAAc,GAAGjD,QAAQ,CAACkD,OAAT,CAAiB,CAAjB,EAAoBC,MAApB,CAA2BC,MAAlD,CAF0B,CAI1B;;AACA,YAAIH,cAAc,IAAI,CAAtB,EAAyB;AACvB,gBAAMI,EAAE,GAAG,IAAX;AACA,iBAAOA,EAAP;AACD,SAHD,MAGO;AACL;AACA,gBAAMC,mBAAmB,GAAGtD,QAAQ,CAACkD,OAAT,CAAiB,CAAjB,EAAoBK,qBAApB,CAA0C,CAA1C,EAA6CC,cAA7C,CAA4D,CAA5D,EAA+DC,KAA3F;AACA,iBAAOH,mBAAP;AACD;AACF,OAzB+B,EAyB7BhD,KAzB6B,CAyBvB,UAAUnC,KAAV,EAAiB;AAExB,eAAOoC,OAAO,CAACpC,KAAR,CAAe,yDAAwDA,KAAM,EAA7E,CAAP;AACD,OA5B+B,CAAhC,CA1BK,CAwDL;;AACA,UAAIuF,SAAS,GAAG,EAAhB;;AAEA,UAAId,iBAAiB,KAAK,IAAtB,IAA8BA,iBAAiB,KAAKpC,SAAxD,EAAmE;AACjEkD,QAAAA,SAAS,GAAGd,iBAAiB,CAAClD,OAAlB,CAA0B,WAA1B,EAAuC,EAAvC,EAA2CqC,IAA3C,EAAZ;AACD,OAFD,MAEO;AACL2B,QAAAA,SAAS,GAAG,EAAZ;AACD,OA/DI,CAiEL;;;AACA,UAAIA,SAAS,KAAK,EAAlB,EAAsB;AACpB;AACA;AACA,cAAMC,iBAAiB,GAAG;AACxB,4BAAkB;AAChB,mBAAOlB;AADS,WADM;AAIxB,2BAAiB,CAAC;AAChB,0BAAc,CAAC;AACb,qBAAO,MADM;AAEb,uBAASiB;AAFI,aAAD;AADE,WAAD;AAJO,SAA1B;AAYA,cAAME,oBAAoB,GAAG,MAAM/D,KAAK,CAAC,mIAAD,EAAsI;AAC5KC,UAAAA,MAAM,EAAE,MADoK;AAE5K+C,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeY,iBAAf,CAFsK;AAG5KX,UAAAA,OAAO,EAAE;AACP,4BAAgB;AADT;AAHmK,SAAtI,CAAL,CAMhCjD,IANgC,CAM3B,UAAUC,QAAV,EAAoB;AAC1B,cAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,mBAAOD,QAAQ,CAACE,IAAT,EAAP;AACD,WAFD,MAEO;AACL,mBAAOK,OAAO,CAACpC,KAAR,CAAc,wDAAd,CAAP;AACD;AACF,SAZkC,EAYhC4B,IAZgC,CAY3B,UAAUC,QAAV,EAAoB;AAC1B,cAAIA,QAAQ,KAAKQ,SAAjB,EAA4B;AAC1B;AACA,kBAAMyC,cAAc,GAAGjD,QAAQ,CAACkD,OAAT,CAAiB,CAAjB,EAAoBC,MAApB,CAA2BC,MAAlD,CAF0B,CAG1B;;AACA,gBAAIH,cAAc,IAAI,CAAtB,EAAyB;AACvB;AACA,oBAAMY,WAAW,GAAG;AAClBH,gBAAAA,SAAS,EAAE,EADO;AAElBI,gBAAAA,mBAAmB,EAAE,EAFH;AAGlBC,gBAAAA,UAAU,EAAE,EAHM;AAIlBC,gBAAAA,aAAa,EAAE;AAJG,eAApB,CAFuB,CASvB;;AACAnH,cAAAA,4BAA4B,CAAC,EAAE,GAAGN,sBAAL;AAA6BsH,gBAAAA;AAA7B,eAAD,CAA5B;AACD,aAXD,MAWO;AACL;AACA,oBAAMC,mBAAmB,GAAG9D,QAAQ,CAACkD,OAAT,CAAiB,CAAjB,EAAoBe,cAApB,CAAmC,CAAnC,EAAsCC,MAAtC,CAA6C,CAA7C,EAAgDC,YAAhD,CAA6D,CAA7D,EAAgEV,KAA5F;AACA,oBAAMM,UAAU,GAAG/D,QAAQ,CAACkD,OAAT,CAAiB,CAAjB,EAAoBe,cAApB,CAAmC,CAAnC,EAAsCC,MAAtC,CAA6C,CAA7C,EAAgDC,YAAhD,CAA6D,CAA7D,EAAgEV,KAAnF;AACA,oBAAMO,aAAa,GAAGhE,QAAQ,CAACkD,OAAT,CAAiB,CAAjB,EAAoBe,cAApB,CAAmC,CAAnC,EAAsCG,cAAtC,CAAqD,EAArD,EAAyDX,KAA/E,CAJK,CAKL;;AACA,oBAAMI,WAAW,GAAG;AAClBH,gBAAAA,SADkB;AAElBI,gBAAAA,mBAFkB;AAGlBC,gBAAAA,UAHkB;AAIlBC,gBAAAA;AAJkB,eAApB,CANK,CAaL;;AACAnH,cAAAA,4BAA4B,CAAC,EAAE,GAAGN,sBAAL;AAA6BsH,gBAAAA;AAA7B,eAAD,CAA5B;AACD;AACF,WA/BD,MA+BO;AACL;AACA,kBAAMA,WAAW,GAAG;AAClBH,cAAAA,SAAS,EAAE,EADO;AAElBI,cAAAA,mBAAmB,EAAE,EAFH;AAGlBC,cAAAA,UAAU,EAAE,EAHM;AAIlBC,cAAAA,aAAa,EAAE;AAJG,aAApB,CAFK,CAQL;;AACA,mBAAOnH,4BAA4B,CAAC,EAAE,GAAGN,sBAAL;AAA6BsH,cAAAA;AAA7B,aAAD,CAAnC;AACD;AACF,SAvDkC,CAAnC;AAwDD,OAvED,MAuEO;AACL;AACA,cAAMA,WAAW,GAAG;AAClBH,UAAAA,SAAS,EAAE,EADO;AAElBI,UAAAA,mBAAmB,EAAE,EAFH;AAGlBC,UAAAA,UAAU,EAAE,EAHM;AAIlBC,UAAAA,aAAa,EAAE;AAJG,SAApB,CAFK,CAQL;;AACAnH,QAAAA,4BAA4B,CAAC,EAAE,GAAGN,sBAAL;AAA6BsH,UAAAA;AAA7B,SAAD,CAA5B;AACD;AAED;AAEA;;;AACA,UAAIQ,oBAAoB,GAAG5G,QAA3B,CAxJK,CAyJL;;AACA,UAAI6G,6BAA6B,GAAGD,oBAAoB,CAAC3E,OAArB,CAA6B,IAA7B,EAAmC,EAAnC,CAApC,CA1JK,CA2JL;;AACA,UAAI6E,iBAAiB,GAAG,EAAxB,CA5JK,CA8JL;;AACA,UAAID,6BAA6B,CAAClB,MAA9B,KAAyC,CAA7C,EAAgD;AAC9C;AACA,YAAIoB,SAAS,GAAGF,6BAA6B,CAACG,KAA9B,CAAoC,CAApC,EAAuC,CAAvC,CAAhB,CAF8C,CAG9C;;AACA,YAAIC,UAAU,GAAGJ,6BAA6B,CAACG,KAA9B,CAAoC,CAApC,EAAuC,CAAvC,CAAjB,CAJ8C,CAK9C;;AACAF,QAAAA,iBAAiB,GAAGC,SAAS,GAAG,GAAZ,GAAkBE,UAAtC;AACD,OAtKI,CAwKL;;;AACA,UAAIJ,6BAA6B,CAAClB,MAA9B,KAAyC,CAA7C,EAAgD;AAC9C;AACA,YAAIuB,WAAW,GAAGL,6BAA6B,CAACG,KAA9B,CAAoC,CAApC,EAAuC,CAAvC,CAAlB,CAF8C,CAG9C;;AACA,YAAIC,UAAU,GAAGJ,6BAA6B,CAACG,KAA9B,CAAoC,CAApC,EAAuC,CAAvC,CAAjB,CAJ8C,CAK9C;;AACAF,QAAAA,iBAAiB,GAAGI,WAAW,GAAG,GAAd,GAAoBD,UAAxC;AACD,OAhLI,CAkLL;;;AACA,UAAIJ,6BAA6B,CAAClB,MAA9B,KAAyC,CAA7C,EAAgD;AAC9C;AACA,YAAIwB,UAAU,GAAGN,6BAA6B,CAACG,KAA9B,CAAoC,CAApC,EAAuC,CAAvC,CAAjB,CAF8C,CAG9C;;AACA,YAAIC,UAAU,GAAGJ,6BAA6B,CAACG,KAA9B,CAAoC,CAApC,EAAuC,CAAvC,CAAjB,CAJ8C,CAK9C;;AACAF,QAAAA,iBAAiB,GAAGK,UAAU,GAAG,GAAb,GAAmBF,UAAvC;AACD;AAED;AAEA;;;AACA,YAAMG,WAAW,GAAGvF,OAAO,CAACC,GAAR,CAAYuF,qBAAhC;AAEA,YAAMC,eAAe,GAAG,MAAMlF,KAAK,CAAE,0HAAyH0E,iBAAkB,eAAcjC,kBAAmB,GAA9K,EAAkL;AACnNxC,QAAAA,MAAM,EAAE,KAD2M;AAEnNkD,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEP,oBAAU6B;AAFH;AAF0M,OAAlL,CAAL,CAM3B9E,IAN2B,CAMtB,UAAUC,QAAV,EAAoB;AAC1B,YAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,iBAAOD,QAAQ,CAACE,IAAT,EAAP;AACD,SAFD,MAEO;AACL,gBAAM8E,SAAS,GAAG,EAAlB;AACApI,UAAAA,oBAAoB,CAAC,EACnB,GAAGN,cADgB;AAEnB2I,YAAAA,OAAO,EAAE;AACPtH,cAAAA,IAAI,EAAE,EADC;AAEPuH,cAAAA,oBAAoB,EAAE,EAFf;AAGPC,cAAAA,mBAAmB,EAAE,EAHd;AAIPC,cAAAA,gBAAgB,EAAE;AAJX;AAFU,WAAD,CAApB;AAUA7E,UAAAA,OAAO,CAACpC,KAAR,CAAc,oDAAd;AAEA,iBAAO6G,SAAP;AAED;AACF,OA1B6B,EA0B3BjF,IA1B2B,CA0BtB,UAAUC,QAAV,EAAoB;AAC1B;AACA,cAAMqF,OAAO,GAAGrF,QAAQ,CAACsF,cAAT,CAAwB,MAAxB,CAAhB;;AAEA,YAAID,OAAO,KAAK,IAAhB,EAAsB;AACpB,gBAAMJ,OAAO,GAAGjF,QAAQ,CAACrC,IAAT,CAAc,CAAd,CAAhB;AACA,gBAAMqH,SAAS,GAAGhF,QAAQ,CAACrC,IAAT,CAAc,CAAd,EAAiBA,IAAnC;AACAf,UAAAA,oBAAoB,CAAC,EAAE,GAAGN,cAAL;AAAqB2I,YAAAA;AAArB,WAAD,CAApB;AACA,iBAAOD,SAAP;AACD,SALD,MAKO;AACL,gBAAMA,SAAS,GAAG,EAAlB;AACApI,UAAAA,oBAAoB,CAAC,EACnB,GAAGN,cADgB;AAEnB2I,YAAAA,OAAO,EAAE;AACPtH,cAAAA,IAAI,EAAEqH,SADC;AAEPE,cAAAA,oBAAoB,EAAE,EAFf;AAGPC,cAAAA,mBAAmB,EAAE,EAHd;AAIPC,cAAAA,gBAAgB,EAAE;AAJX;AAFU,WAAD,CAApB;AASA,iBAAOJ,SAAP;AACD;AACF,OAhD6B,EAgD3B1E,KAhD2B,CAgDrB,UAAUnC,KAAV,EAAiB;AAExB,eAAOoC,OAAO,CAACpC,KAAR,CAAe,qDAAoDA,KAAM,EAAzE,CAAP;AACD,OAnD6B,CAA9B,CAjMK,CAsPL;;AACA,UAAI6G,SAAS,GAAGD,eAAhB;;AAEA,UAAIC,SAAS,KAAKxE,SAAlB,EAA6B;AAC3BwE,QAAAA,SAAS,GAAG,EAAZ;AACApI,QAAAA,oBAAoB,CAAC,EACnB,GAAGN,cADgB;AAEnB2I,UAAAA,OAAO,EAAE;AACPtH,YAAAA,IAAI,EAAE,EADC;AAEPuH,YAAAA,oBAAoB,EAAE,EAFf;AAGPC,YAAAA,mBAAmB,EAAE,EAHd;AAIPC,YAAAA,gBAAgB,EAAE;AAJX;AAFU,SAAD,CAApB;AASD;;AAED,YAAMG,kBAAkB,GAAGpI,WAAW,CAACM,QAAZ,CAAqBiC,OAArB,CAA6B,KAA7B,EAAoC,EAApC,EAAwCqC,IAAxC,GAA+CpC,WAA/C,EAA3B;AACA,YAAM6F,oBAAoB,GAAGrI,WAAW,CAACE,UAAZ,CAAuBqC,OAAvB,CAA+B,KAA/B,EAAsC,EAAtC,EAA0CqC,IAA1C,GAAiDpC,WAAjD,EAA7B;AAEA,YAAM8F,GAAG,GAAI,GAAEF,kBAAmB,IAAGC,oBAAqB,EAA1D,CAzQK,CA2QL;;AACA,UAAIE,MAAM,GAAG,MAAMjK,EAAE,CAACkK,UAAH,CAAc,WAAd,EAA2BC,GAA3B,CAA+BH,GAA/B,CAAnB,CA5QK,CA8QL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,YAAMI,eAAe,GAAG,YAAYH,MAAM,CAACI,GAAP,GAAa/F,IAAb,CAAmB6F,GAAD,IAAS;AAC7D;AACA,YAAIA,GAAG,CAACG,MAAR,EAAgB;AACd,iBAAOH,GAAG,CAACnF,IAAJ,EAAP;AACD;;AACD;AACD,OANmC,EAMjCH,KANiC,CAM1BnC,KAAD,IAAW;AAClBoC,QAAAA,OAAO,CAACS,GAAR,CAAY7C,KAAZ;AACAoC,QAAAA,OAAO,CAACS,GAAR,CAAY,+BAAZ;AACA;AACD,OAVmC,CAApC,CAxRK,CAoSL;;;AACA,UAAIgF,QAAQ,GAAG,MAAMH,eAAe,EAApC,CArSK,CAuSL;;AACA,UAAIG,QAAJ,EAAc;AAEZ;AACA,cAAMC,YAAY,GAAGD,QAArB,CAHY,CAKZ;;AACA,cAAM;AAAEE,UAAAA,cAAF;AAAkBrC,UAAAA,WAAlB;AAA+BoB,UAAAA;AAA/B,YAA2CgB,YAAjD,CANY,CAQZ;;AACA,cAAM;AAAE5I,UAAAA,UAAF;AAAcC,UAAAA,YAAd;AAA4BC,UAAAA,YAA5B;AAA0CC,UAAAA,IAA1C;AAAgDC,UAAAA;AAAhD,YAA6DyI,cAAnE,CATY,CAWZ;;AACA,cAAM;AAAEnC,UAAAA;AAAF,YAAiBF,WAAvB,CAZY,CAcZ;;AACA,cAAM;AAAEqB,UAAAA;AAAF,YAA2BD,OAAjC,CAfY,CAiBZ;;AACA,cAAMkB,eAAe,GAAGtC,WAAW,CAACuC,YAApC,CAlBY,CAmBZ;;AACA,cAAMC,YAAY,GAAGxC,WAAW,CAACH,SAAjC,CApBY,CAsBZ;;AACA,cAAM4C,eAAe,GAAGrB,OAAO,CAACmB,YAAhC,CAvBY,CAwBZ;;AACA,cAAMG,YAAY,GAAGtB,OAAO,CAACtH,IAA7B,CAzBY,CA2BZ;;AACAhC,QAAAA,IAAI,CAAC;AACH6K,UAAAA,SAAS,EAAE,mBADR;AAEHC,UAAAA,OAAO,EAAE;AACPC,YAAAA,MAAM,EAAE,QADD;AAEPC,YAAAA,OAAO,EAAE;AAFF,WAFN;AAMHtG,UAAAA,OAAO,eACL;AAAA,mCACE;AAAK,cAAA,SAAS,EAAC,qCAAf;AAAA,qCACE;AAAK,gBAAA,SAAS,EAAC,2BAAf;AAAA,wCAEE,QAAC,WAAD,CAAa,QAAb;AAAsB,kBAAA,KAAK,EAAE;AAAEuG,oBAAAA,KAAK,EAAE,SAAT;AAAoBC,oBAAAA,IAAI,EAAE;AAA1B,mBAA7B;AAAA,yCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBAFF,eAME;AAAI,kBAAA,KAAK,EAAE;AAAEC,oBAAAA,YAAY,EAAE;AAAhB,mBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBANF,eAQE;AAAK,kBAAA,SAAS,EAAC,gCAAf;AAAA,0CAEE;AAAK,oBAAA,SAAS,EAAC,6BAAf;AAAA,2CACE;AAAK,sBAAA,KAAK,EAAE;AAAEC,wBAAAA,OAAO,EAAE,MAAX;AAAmBC,wBAAAA,aAAa,EAAE,QAAlC;AAA4CC,wBAAAA,SAAS,EAAE;AAAvD,uBAAZ;AAAA,8CACE;AAAA,4DAAW;AAAA,oCAAQ,GAAE3J,YAAY,CAAC4J,WAAb,EAA2B,GAAE3J,YAAY,KAAK,KAAjB,GAAyB,EAAzB,GAA+B,KAAIA,YAAY,CAAC2J,WAAb,EAA2B,EAAE;AAAvG;AAAA;AAAA;AAAA;AAAA,gCAAX;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,eAEE;AAAA,gEAAe;AAAA,oCAAO7J,UAAU,CAAC6J,WAAX;AAAP;AAAA;AAAA;AAAA;AAAA,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA,8BAFF,eAGE;AAAA,yDAAQ;AAAA,oCAAO1J,IAAI,CAAC0J,WAAL;AAAP;AAAA;AAAA;AAAA;AAAA,gCAAR;AAAA;AAAA;AAAA;AAAA;AAAA,8BAHF,eAIE;AAAA,6DAAY;AAAA,oCAAOzJ,QAAQ,CAACyJ,WAAT;AAAP;AAAA;AAAA;AAAA;AAAA,gCAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,8BAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,0BAFF,EAcI,CAAC,CAACf,eAAH,IAAwB,CAAC,CAACpC,UAA1B,IAA0C,CAAC,CAACsC,YAA5C,gBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,GAGC,IAjBJ,EAoBG,CAAC,CAACF,eAAF,gBAEG;AAAK,oBAAA,SAAS,EAAC,6BAAf;AAAA,2CACE;AAAA,4DAAa;AAAA,kCAAOA;AAAP;AAAA;AAAA;AAAA;AAAA,8BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,0BAFH,GAOC,IA3BJ,EA+BG,CAAC,CAACpC,UAAF,gBAEG;AAAK,oBAAA,SAAS,EAAC,6BAAf;AAAA,2CACE;AAAA,8DAAe;AAAA,kCAAOA;AAAP;AAAA;AAAA;AAAA;AAAA,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,0BAFH,GAOC,IAtCJ,EA0CG,CAAC,CAACsC,YAAF,gBAEG;AAAK,oBAAA,SAAS,EAAC,6BAAf;AAAA,2CACE;AAAA,wDAAS;AAAA,kCAAOA;AAAP;AAAA;AAAA;AAAA;AAAA,8BAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,0BAFH,GAOC,IAjDJ,EAuDI,CAAC,CAACC,eAAH,IAAwB,CAAC,CAACpB,oBAA1B,IAAoD,CAAC,CAACqB,YAAtD,gBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,GAGC,IA1DJ,EA6DG,CAAC,CAACD,eAAF,gBAEG;AAAK,oBAAA,SAAS,EAAC,6BAAf;AAAA,2CACE;AAAA,4DAAa;AAAA,kCAAOA;AAAP;AAAA;AAAA;AAAA;AAAA,8BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,0BAFH,GAOC,IApEJ,EAwEG,CAAC,CAACpB,oBAAF,gBAEG;AAAK,oBAAA,SAAS,EAAC,6BAAf;AAAA,2CACE;AAAA,8DAAe;AAAA,kCAAOA;AAAP;AAAA;AAAA;AAAA;AAAA,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,0BAFH,GAOC,IA/EJ,EAmFG,CAAC,CAACqB,YAAF,gBAEG;AAAK,oBAAA,SAAS,EAAC,6BAAf;AAAA,2CACE;AAAA,wDAAS;AAAA,kCAAOA;AAAP;AAAA;AAAA;AAAA;AAAA,8BAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,0BAFH,GAOC,IA1FJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAPC,SAAD,CAAJ,CAmHGxG,IAnHH,CAmHSoH,MAAD,IAAY;AAElB,cAAIA,MAAM,KAAK,IAAf,EAAqB;AAEnB;AACA,kBAAM5B,kBAAkB,GAAGpI,WAAW,CAACM,QAAZ,CAAqBiC,OAArB,CAA6B,KAA7B,EAAoC,EAApC,EAAwCqC,IAAxC,GAA+CpC,WAA/C,EAA3B,CAHmB,CAInB;;AACA,kBAAM6F,oBAAoB,GAAGrI,WAAW,CAACE,UAAZ,CAAuBqC,OAAvB,CAA+B,KAA/B,EAAsC,EAAtC,EAA0CqC,IAA1C,GAAiDpC,WAAjD,EAA7B,CALmB,CAMnB;;AACA,kBAAM8F,GAAG,GAAI,GAAEF,kBAAmB,IAAGC,oBAAqB,EAA1D,CAPmB,CASnB;;AACA/J,YAAAA,EAAE,CAACkK,UAAH,CAAc,WAAd,EAA2BC,GAA3B,CAA+BH,GAA/B,EAAoC2B,GAApC,CAAwC;AACtCC,cAAAA,OAAO,EAAE3L,QAAQ,CAAC4L,SAAT,CAAmBC,UAAnB,CAA8BC,eAA9B,EAD6B;AAEtCC,cAAAA,IAAI,EAAE,CAFgC;AAGtCvB,cAAAA,cAAc,EAAE;AACd7I,gBAAAA,UAAU,EAAEF,WAAW,CAACE,UAAZ,GAAyBF,WAAW,CAACE,UAArC,GAAkD,EADhD;AAEdC,gBAAAA,YAAY,EAAEH,WAAW,CAACG,YAAZ,GAA2BH,WAAW,CAACG,YAAvC,GAAsD,EAFtD;AAGdC,gBAAAA,YAAY,EAAEJ,WAAW,CAACI,YAAZ,GAA2BJ,WAAW,CAACI,YAAvC,GAAsD,EAHtD;AAIdC,gBAAAA,IAAI,EAAEL,WAAW,CAACK,IAAZ,GAAmBL,WAAW,CAACK,IAA/B,GAAsC,EAJ9B;AAKdC,gBAAAA,QAAQ,EAAEN,WAAW,CAACM,QAAZ,GAAuBN,WAAW,CAACM,QAAnC,GAA8C,EAL1C;AAMdC,gBAAAA,IAAI,EAAEgG,SAAS,GAAGA,SAAH,GAAe,EANhB;AAOd/F,gBAAAA,IAAI,EAAEqH,SAAS,GAAGA,SAAH,GAAe;AAPhB,eAHsB;AAYtCnB,cAAAA,WAAW,EAAE;AACXH,gBAAAA,SAAS,EAAE,EADA;AAEXI,gBAAAA,mBAAmB,EAAE,EAFV;AAGXC,gBAAAA,UAAU,EAAE,EAHD;AAIXC,gBAAAA,aAAa,EAAE,EAJJ;AAKXoC,gBAAAA,YAAY,EAAE;AALH,eAZyB;AAmBtCnB,cAAAA,OAAO,EAAE;AACPtH,gBAAAA,IAAI,EAAE,EADC;AAEPuH,gBAAAA,oBAAoB,EAAE,EAFf;AAGPC,gBAAAA,mBAAmB,EAAE,EAHd;AAIPC,gBAAAA,gBAAgB,EAAE,EAJX;AAKPgB,gBAAAA,YAAY,EAAE;AALP;AAnB6B,aAAxC,EAVmB,CAsCnB;;AACAhI,YAAAA,WAAW,CAAC,KAAD,CAAX,CAvCmB,CAwCnB;;AACAzB,YAAAA,qBAAqB,CAAC,EACpB,GAAGQ,WADiB;AAEpBO,cAAAA,IAAI,EAAEgG,SAFc;AAGpB/F,cAAAA,IAAI,EAAEqH;AAHc,aAAD,CAArB,CAzCmB,CA8CnB;;AACA/H,YAAAA,iBAAiB,CAAC,EAAE,GAAGT,WAAL;AAAkBiL,cAAAA,IAAI,EAAE;AAAxB,aAAD,CAAjB,CA/CmB,CAgDnB;;AACA1K,YAAAA,oBAAoB,CAAC,KAAD,CAApB,CAjDmB,CAkDnB;;AACAG,YAAAA,sBAAsB,CAAC,IAAD,CAAtB,CAnDmB,CAoDnB;;AACAF,YAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAuD,YAAAA,OAAO,CAACS,GAAR,CAAY,gDAAZ;AACAT,YAAAA,OAAO,CAACS,GAAR,CAAY,gDAAZ;AAEA;AACD;;AAEDT,UAAAA,OAAO,CAACS,GAAR,CAAY,uCAAZ;AACA,iBAAOtE,YAAY,CAACuJ,YAAD,CAAnB;AAED,SApLD,EAoLG3F,KApLH,CAoLUnC,KAAD,IAAW;AAElB;AACA1C,UAAAA,EAAE,CAACkK,UAAH,CAAc,WAAd,EAA2BC,GAA3B,CAA+BH,GAA/B,EAAoC2B,GAApC,CAAwC;AACtCC,YAAAA,OAAO,EAAE3L,QAAQ,CAAC4L,SAAT,CAAmBC,UAAnB,CAA8BC,eAA9B,EAD6B;AAEtCC,YAAAA,IAAI,EAAE,CAFgC;AAGtCvB,YAAAA,cAAc,EAAE;AACd7I,cAAAA,UAAU,EAAEF,WAAW,CAACE,UAAZ,GAAyBF,WAAW,CAACE,UAArC,GAAkD,EADhD;AAEdC,cAAAA,YAAY,EAAEH,WAAW,CAACG,YAAZ,GAA2BH,WAAW,CAACG,YAAvC,GAAsD,EAFtD;AAGdC,cAAAA,YAAY,EAAEJ,WAAW,CAACI,YAAZ,GAA2BJ,WAAW,CAACI,YAAvC,GAAsD,EAHtD;AAIdC,cAAAA,IAAI,EAAEL,WAAW,CAACK,IAAZ,GAAmBL,WAAW,CAACK,IAA/B,GAAsC,EAJ9B;AAKdC,cAAAA,QAAQ,EAAEN,WAAW,CAACM,QAAZ,GAAuBN,WAAW,CAACM,QAAnC,GAA8C,EAL1C;AAMdC,cAAAA,IAAI,EAAEgG,SAAS,GAAGA,SAAH,GAAe,EANhB;AAOd/F,cAAAA,IAAI,EAAEqH,SAAS,GAAGA,SAAH,GAAe;AAPhB,aAHsB;AAYtCnB,YAAAA,WAAW,EAAE;AACXH,cAAAA,SAAS,EAAE,EADA;AAEXI,cAAAA,mBAAmB,EAAE,EAFV;AAGXC,cAAAA,UAAU,EAAE,EAHD;AAIXC,cAAAA,aAAa,EAAE,EAJJ;AAKXoC,cAAAA,YAAY,EAAE;AALH,aAZyB;AAmBtCnB,YAAAA,OAAO,EAAE;AACPtH,cAAAA,IAAI,EAAE,EADC;AAEPuH,cAAAA,oBAAoB,EAAE,EAFf;AAGPC,cAAAA,mBAAmB,EAAE,EAHd;AAIPC,cAAAA,gBAAgB,EAAE,EAJX;AAKPgB,cAAAA,YAAY,EAAE;AALP;AAnB6B,WAAxC;AA4BA7F,UAAAA,OAAO,CAACS,GAAR,CAAY7C,KAAZ,EA/BkB,CAiClB;;AACAC,UAAAA,WAAW,CAAC,KAAD,CAAX,CAlCkB,CAmClB;;AACAzB,UAAAA,qBAAqB,CAAC,EACpB,GAAGQ,WADiB;AAEpBO,YAAAA,IAAI,EAAEgG,SAFc;AAGpB/F,YAAAA,IAAI,EAAEqH;AAHc,WAAD,CAArB,CApCkB,CAyClB;;AACA/H,UAAAA,iBAAiB,CAAC,EAAE,GAAGT,WAAL;AAAkBiL,YAAAA,IAAI,EAAE;AAAxB,WAAD,CAAjB,CA1CkB,CA2ClB;;AACA1K,UAAAA,oBAAoB,CAAC,KAAD,CAApB,CA5CkB,CA6ClB;;AACAG,UAAAA,sBAAsB,CAAC,IAAD,CAAtB,CA9CkB,CA+ClB;;AACAF,UAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAuD,UAAAA,OAAO,CAACS,GAAR,CAAY,yCAAZ;AACAT,UAAAA,OAAO,CAACS,GAAR,CAAY,gDAAZ;AACA;AACD,SAxOD,EA5BY,CAsQZ;;AACA;AACD,OAhjBI,CAkjBL;;;AACA1C,MAAAA,oBAAoB,CAAC,IAAD,CAApB,CAnjBK,CAqjBL;;AACAF,MAAAA,WAAW,CAAC,KAAD,CAAX,CAtjBK,CAujBL;;AACAzB,MAAAA,qBAAqB,CAAC,EACpB,GAAGQ,WADiB;AAEpBO,QAAAA,IAAI,EAAEgG,SAFc;AAGpB/F,QAAAA,IAAI,EAAEqH;AAHc,OAAD,CAArB,CAxjBK,CA6jBL;;AACA/H,MAAAA,iBAAiB,CAAC,EAAE,GAAGT,WAAL;AAAkBiL,QAAAA,IAAI,EAAE;AAAxB,OAAD,CAAjB,CA9jBK,CA+jBL;;AACA1K,MAAAA,oBAAoB,CAAC,KAAD,CAApB,CAhkBK,CAikBL;;AACAG,MAAAA,sBAAsB,CAAC,IAAD,CAAtB,CAlkBK,CAmkBL;;AACAF,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAuD,MAAAA,OAAO,CAACS,GAAR,CAAY,4CAAZ;AACAT,MAAAA,OAAO,CAACS,GAAR,CAAY,mCAAZ,EAtkBK,CAwkBL;;AACA;AACD;AACF,GApmBD;AAsmBA;;;AACAxF,EAAAA,SAAS,CAAC,MAAM;AACd,KAAC,YAAY;AACX;AACA,UAAI6C,cAAJ,EAAoB;AAClB;AACA,cAAMkH,kBAAkB,GAAGpI,WAAW,CAACM,QAAZ,CAAqBiC,OAArB,CAA6B,KAA7B,EAAoC,EAApC,EAAwCqC,IAAxC,GAA+CpC,WAA/C,EAA3B,CAFkB,CAGlB;;AACA,cAAM6F,oBAAoB,GAAGrI,WAAW,CAACE,UAAZ,CAAuBqC,OAAvB,CAA+B,KAA/B,EAAsC,EAAtC,EAA0CqC,IAA1C,GAAiDpC,WAAjD,EAA7B,CAJkB,CAKlB;;AACA,cAAM8F,GAAG,GAAI,GAAEF,kBAAmB,IAAGC,oBAAqB,EAA1D,CANkB,CAQlB;;AACA,cAAM/J,EAAE,CAACkK,UAAH,CAAc,WAAd,EAA2BC,GAA3B,CAA+BH,GAA/B,EAAoC2B,GAApC,CAAwC;AAC5CC,UAAAA,OAAO,EAAE3L,QAAQ,CAAC4L,SAAT,CAAmBC,UAAnB,CAA8BC,eAA9B,EADmC;AAE5CC,UAAAA,IAAI,EAAE,CAFsC;AAG5CvB,UAAAA,cAAc,EAAE;AACd7I,YAAAA,UAAU,EAAEF,WAAW,CAACE,UAAZ,GAAyBF,WAAW,CAACE,UAArC,GAAkD,EADhD;AAEdC,YAAAA,YAAY,EAAEH,WAAW,CAACG,YAAZ,GAA2BH,WAAW,CAACG,YAAvC,GAAsD,EAFtD;AAGdC,YAAAA,YAAY,EAAEJ,WAAW,CAACI,YAAZ,GAA2BJ,WAAW,CAACI,YAAvC,GAAsD,EAHtD;AAIdC,YAAAA,IAAI,EAAEL,WAAW,CAACK,IAAZ,GAAmBL,WAAW,CAACK,IAA/B,GAAsC,EAJ9B;AAKdC,YAAAA,QAAQ,EAAEN,WAAW,CAACM,QAAZ,GAAuBN,WAAW,CAACM,QAAnC,GAA8C,EAL1C;AAMdC,YAAAA,IAAI,EAAEnB,sBAAsB,CAACsH,WAAvB,CAAmCH,SAAnC,GAA+CnH,sBAAsB,CAACsH,WAAvB,CAAmCH,SAAlF,GAA8F,EANtF;AAOd/F,YAAAA,IAAI,EAAErB,cAAc,CAAC2I,OAAf,CAAuBtH,IAAvB,GAA8BrB,cAAc,CAAC2I,OAAf,CAAuBtH,IAArD,GAA4D;AAPpD,WAH4B;AAY5CkG,UAAAA,WAAW,EAAE;AACXC,YAAAA,mBAAmB,EAAEvH,sBAAsB,CAACsH,WAAvB,CAAmCC,mBAAnC,GAAyDvH,sBAAsB,CAACsH,WAAvB,CAAmCC,mBAA5F,GAAkH,EAD5H;AAEXC,YAAAA,UAAU,EAAExH,sBAAsB,CAACsH,WAAvB,CAAmCE,UAAnC,GAAgDxH,sBAAsB,CAACsH,WAAvB,CAAmCE,UAAnF,GAAgG,EAFjG;AAGXL,YAAAA,SAAS,EAAEnH,sBAAsB,CAACsH,WAAvB,CAAmCH,SAAnC,GAA+CnH,sBAAsB,CAACsH,WAAvB,CAAmCH,SAAlF,GAA8F,EAH9F;AAIXM,YAAAA,aAAa,EAAEzH,sBAAsB,CAACsH,WAAvB,CAAmCG,aAAnC,GAAmDzH,sBAAsB,CAACsH,WAAvB,CAAmCG,aAAtF,GAAsG;AAJ1G,WAZ+B;AAkB5CiB,UAAAA,OAAO,EAAE;AACPtH,YAAAA,IAAI,EAAErB,cAAc,CAAC2I,OAAf,CAAuBtH,IAAvB,GAA8BrB,cAAc,CAAC2I,OAAf,CAAuBtH,IAArD,GAA4D,EAD3D;AAEPuH,YAAAA,oBAAoB,EAAE5I,cAAc,CAAC2I,OAAf,CAAuBC,oBAAvB,GAA8C5I,cAAc,CAAC2I,OAAf,CAAuBC,oBAArE,GAA4F,EAF3G;AAGPC,YAAAA,mBAAmB,EAAE7I,cAAc,CAAC2I,OAAf,CAAuBE,mBAAvB,GAA6C7I,cAAc,CAAC2I,OAAf,CAAuBE,mBAApE,GAA0F,EAHxG;AAIPC,YAAAA,gBAAgB,EAAE9I,cAAc,CAAC2I,OAAf,CAAuBG,gBAAvB,GAA0C9I,cAAc,CAAC2I,OAAf,CAAuBG,gBAAjE,GAAoF;AAJ/F;AAlBmC,SAAxC,CAAN;AAyBD;AACF,KArCD;AAuCD,GAxCQ,EAwCN,CAAC/G,cAAD,CAxCM,CAAT,CAx0B4S,CAk3B5S;;AACA,QAAMqJ,YAAY,GAAI/F,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACgG,cAAF,GAD0B,CAE1B;;AACA5K,IAAAA,oBAAoB,CAAC,KAAD,CAApB,CAH0B,CAI1B;;AACAD,IAAAA,sBAAsB,CAAC,IAAD,CAAtB,CAL0B,CAM1B;;AACAG,IAAAA,iBAAiB,CAAC,EAAE,GAAGT,WAAL;AAAkBiL,MAAAA,IAAI,EAAE;AAAxB,KAAD,CAAjB;AACD,GARD,CAn3B4S,CA63B5S;;;AACA,QAAMG,YAAY,GAAIjG,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACgG,cAAF,GAD0B,CAE1B;;AACAvK,IAAAA,iBAAiB,CAAC,EAChB,GAAGD,WADa;AAEhBE,MAAAA,UAAU,EAAE,EAFI;AAGhBC,MAAAA,YAAY,EAAE,EAHE;AAIhBC,MAAAA,YAAY,EAAE,EAJE;AAKhBC,MAAAA,IAAI,EAAE,EALU;AAMhB;AACAE,MAAAA,IAAI,EAAE,EAPU;AAQhBC,MAAAA,IAAI,EAAE;AARU,KAAD,CAAjB,CAH0B,CAa1B;;AACAd,IAAAA,4BAA4B,CAAC,EAAD,CAA5B;AACAD,IAAAA,oBAAoB,CAAC,EAAD,CAApB;AACAoB,IAAAA,aAAa,CAAC,EAAD,CAAb;AACAE,IAAAA,oBAAoB,CAAC,KAAD,CAApB;AACAE,IAAAA,WAAW,CAAC,KAAD,CAAX,CAlB0B,CAoB1B;;AACA,QAAIyJ,gBAAgB,GAAGlJ,QAAQ,CAACuD,cAAT,CAAwB,aAAxB,CAAvB;AACA,QAAI4F,WAAW,GAAGnJ,QAAQ,CAACuD,cAAT,CAAwB,OAAxB,CAAlB;AACA,QAAI6F,WAAW,GAAGpJ,QAAQ,CAACuD,cAAT,CAAwB,OAAxB,CAAlB;AACA,QAAI8F,UAAU,GAAGrJ,QAAQ,CAACuD,cAAT,CAAwB,MAAxB,CAAjB;;AACA,QAAK2F,gBAAgB,KAAK,IAAtB,IAAgCC,WAAW,KAAK,IAAhD,IAA0DC,WAAW,KAAK,IAA1E,IAAoFC,UAAU,KAAK,IAAvG,EAA8G;AAC5GH,MAAAA,gBAAgB,CAAC/F,KAAjB,GAAyB,EAAzB;AACAgG,MAAAA,WAAW,CAAChG,KAAZ,GAAoB,EAApB;AACAiG,MAAAA,WAAW,CAACjG,KAAZ,GAAoB,EAApB;AACAkG,MAAAA,UAAU,CAAClG,KAAX,GAAmB,EAAnB;AACD;AACF,GA/BD,CA93B4S,CA+5B5S;;;AACA,QAAMmG,kBAAkB,GAAItG,CAAD,IAAO;AAChCA,IAAAA,CAAC,CAACgG,cAAF,GADgC,CAEhC;;AACAzJ,IAAAA,oBAAoB,CAAC,IAAD,CAApB;AACAd,IAAAA,iBAAiB,CAAC,EAChB,GAAGD,WADa;AAEhBE,MAAAA,UAAU,EAAE,EAFI;AAGhBC,MAAAA,YAAY,EAAE,EAHE;AAIhBC,MAAAA,YAAY,EAAE,EAJE;AAKhBC,MAAAA,IAAI,EAAE,EALU;AAMhB;AACAE,MAAAA,IAAI,EAAE,EAPU;AAQhBC,MAAAA,IAAI,EAAE;AARU,KAAD,CAAjB;AAUD,GAdD;;AAgBA,sBACE;AAAA,cACGM,eAAe,GACdH,OAAO,KAAK,EAAZ,gBACE;AAAS,MAAA,SAAS,EAAC,sBAAnB;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,sBAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,cAAf;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAOE;AAAA,mCACE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAPF,eAWE;AAAK,YAAA,SAAS,EAAC,2BAAf;AAAA,mCACE;AAAQ,yBAAQ,YAAhB;AAA6B,cAAA,OAAO,EAAG6D,CAAD,IAAOiG,YAAY,CAACjG,CAAD,CAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAXF,EAgBGxD,KAAK,KAAK,IAAV,gBAAiB,QAAC,KAAD;AAAO,YAAA,OAAO,EAAE;AAAhB;AAAA;AAAA;AAAA;AAAA,kBAAjB,GAAiE,IAhBpE,eAmBE;AAAK,YAAA,SAAS,EAAC,4BAAf;AAAA,oCACE;AAAQ,cAAA,SAAS,EAAC,2BAAlB;AAA8C,cAAA,OAAO,EAAEuJ,YAAvD;AAAA,sCACE,QAAC,WAAD,CAAa,QAAb;AAAsB,gBAAA,KAAK,EAAE;AAAEd,kBAAAA,KAAK,EAAE,SAAT;AAAoBC,kBAAAA,IAAI,EAAE;AAA1B,iBAA7B;AAAA,uCACE,QAAC,iBAAD;AAAmB,kBAAA,SAAS,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBADF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAQE;AAAQ,yBAAQ,iBAAhB;AAAkC,cAAA,SAAS,EAAC,2BAA5C;AAAwE,cAAA,OAAO,EAAE,MAAM/I,OAAO,KAAK,EAAZ,GAAiBM,WAAW,CAAC,IAAD,CAA5B,GAAqC,IAA5H;AAAA,kDAGE,QAAC,WAAD,CAAa,QAAb;AAAsB,gBAAA,KAAK,EAAE;AAAEwI,kBAAAA,KAAK,EAAE,MAAT;AAAiBC,kBAAAA,IAAI,EAAE;AAAvB,iBAA7B;AAAA,uCACE,QAAC,kBAAD;AAAoB,kBAAA,SAAS,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,oBARF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAsCGpK,UAAU,gBAEP;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,gBAAf;AAAA,mCACE,QAAC,UAAD;AAAY,cAAA,IAAI,EAAE;AAAlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAKE;AAAK,YAAA,SAAS,EAAC,0BAAf;AAAA,mCACE,QAAC,aAAD;AAAe,cAAA,IAAI,EAAE;AAArB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFO,gBAaT;AAAK,UAAA,KAAK,EAAE;AAAEyL,YAAAA,KAAK,EAAE;AAAT,WAAZ;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,mBAAf;AAAA,mCACE,QAAC,aAAD;AAAe,cAAA,IAAI,EAAE;AAArB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAnDJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,gBA+DE;AAAS,MAAA,SAAS,EAAC,sBAAnB;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,sBAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,cAAf;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAOE;AAAA,mCACE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAPF,eAWE;AAAK,YAAA,SAAS,EAAC,2BAAf;AAAA,mCACE;AAAQ,cAAA,OAAO,EAAGvG,CAAD,IAAOiG,YAAY,CAACjG,CAAD,CAApC;AAAyC,cAAA,SAAS,EAAEpD,cAAc,GAAG,sCAAH,GAA4C,EAA9G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAXF,eAgBE;AAAM,YAAA,SAAS,EAAC,8BAAhB;AAAA,mCACE;AAAK,cAAA,SAAS,EAAC,4BAAf;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAIGJ,KAAK,KAAK,IAAV,gBAAiB,QAAC,KAAD;AAAO,gBAAA,OAAO,EAAE;AAAhB;AAAA;AAAA;AAAA;AAAA,sBAAjB,GAAiE,IAJpE,eAME;AAAK,gBAAA,SAAS,EAAC,oBAAf;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAK,kBAAA,OAAO,EAAE,MAAMK,iBAAiB,CAAC,CAACD,cAAF,CAArC;AAAA,yCACE;AACE,oBAAA,EAAE,EAAC,aADL;AAEE,oBAAA,IAAI,EAAC,YAFP;AAGE,oBAAA,IAAI,EAAC,MAHP;AAIE,oBAAA,KAAK,EAAEpB,WAAW,CAACE,UAAZ,IAA0B,EAJnC;AAKE,oBAAA,QAAQ,EAAE;AALZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBANF,eAmBE;AAAK,gBAAA,SAAS,EAAC,oBAAf;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAK,kBAAA,OAAO,EAAE,MAAMmB,iBAAiB,CAAC,CAACD,cAAF,CAArC;AAAA,0CACE;AACE,oBAAA,EAAE,EAAC,OADL;AAEE,oBAAA,IAAI,EAAC,cAFP;AAGE,oBAAA,IAAI,EAAC,MAHP;AAIE,oBAAA,KAAK,EAAEpB,WAAW,CAACG,YAAZ,IAA4B,EAJrC;AAKE,oBAAA,QAAQ,EAAE;AALZ;AAAA;AAAA;AAAA;AAAA,0BADF,eAQE;AAAK,oBAAA,SAAS,EAAC,sBAAf;AAAA,2CAAsC;AAAA,gCAAOH,WAAW,CAACG;AAAnB;AAAA;AAAA;AAAA;AAAA;AAAtC;AAAA;AAAA;AAAA;AAAA,0BARF;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAnBF,eAiCE;AAAK,gBAAA,SAAS,EAAC,oBAAf;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAK,kBAAA,OAAO,EAAE,MAAMkB,iBAAiB,CAAC,CAACD,cAAF,CAArC;AAAA,yCACE;AACE,oBAAA,EAAE,EAAC,OADL;AAEE,oBAAA,IAAI,EAAC,cAFP;AAGE,oBAAA,IAAI,EAAC,MAHP;AAIE,oBAAA,KAAK,EAAEpB,WAAW,CAACI,YAAZ,IAA4B,EAJrC;AAKE,oBAAA,QAAQ,EAAE;AALZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAjCF,eA8CE;AAAK,gBAAA,SAAS,EAAC,oBAAf;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAK,kBAAA,OAAO,EAAE,MAAMiB,iBAAiB,CAAC,CAACD,cAAF,CAArC;AAAA,yCACE;AACE,oBAAA,EAAE,EAAC,MADL;AAEE,oBAAA,IAAI,EAAC,MAFP;AAGE,oBAAA,IAAI,EAAC,MAHP;AAIE,oBAAA,KAAK,EAAEpB,WAAW,CAACK,IAAZ,IAAoB,EAJ7B;AAKE,oBAAA,QAAQ,EAAE;AALZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBA9CF,eA2DE;AAAK,gBAAA,SAAS,EAAC,oBAAf;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAK,kBAAA,OAAO,EAAE,MAAMgB,iBAAiB,CAAC,CAACD,cAAF,CAArC;AAAA,yCACE;AACE,oBAAA,EAAE,EAAC,UADL;AAEE,oBAAA,IAAI,EAAC,UAFP;AAGE,oBAAA,IAAI,EAAC,MAHP;AAIE,oBAAA,KAAK,EAAEpB,WAAW,CAACM,QAAZ,IAAwB,EAJjC;AAKE,oBAAA,QAAQ,EAAE;AALZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBA3DF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAhBF,eA4FE;AAAK,YAAA,SAAS,EAAC,4BAAf;AAAA,oCACE;AAAQ,cAAA,SAAS,EAAC,2BAAlB;AAA8C,cAAA,OAAO,EAAEiK,YAAvD;AAAA,sCACE,QAAC,WAAD,CAAa,QAAb;AAAsB,gBAAA,KAAK,EAAE;AAAEd,kBAAAA,KAAK,EAAE,SAAT;AAAoBC,kBAAAA,IAAI,EAAE;AAA1B,iBAA7B;AAAA,uCACE,QAAC,iBAAD;AAAmB,kBAAA,SAAS,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBADF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAQE;AAAQ,cAAA,SAAS,EAAC,2BAAlB;AAA8C,cAAA,OAAO,EAAGlF,CAAD,IAAOA,CAAC,CAACgG,cAAF,CAAiBtF,WAAW,CAAClF,WAAD,CAA5B,CAA9D;AAAA,kDAGE,QAAC,WAAD,CAAa,QAAb;AAAsB,gBAAA,KAAK,EAAE;AAAEyJ,kBAAAA,KAAK,EAAE,MAAT;AAAiBC,kBAAAA,IAAI,EAAE;AAAvB,iBAA7B;AAAA,uCACE,QAAC,kBAAD;AAAoB,kBAAA,SAAS,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,oBARF;AAAA;AAAA;AAAA;AAAA;AAAA,kBA5FF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EA+GGpK,UAAU,gBAEP;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,gBAAf;AAAA,mCACE,QAAC,UAAD;AAAY,cAAA,IAAI,EAAE;AAAlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAKE;AAAK,YAAA,SAAS,EAAC,0BAAf;AAAA,mCACE,QAAC,aAAD;AAAe,cAAA,IAAI,EAAE;AAArB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFO,gBAaT;AAAK,UAAA,KAAK,EAAE;AAAEyL,YAAAA,KAAK,EAAE;AAAT,WAAZ;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,mBAAf;AAAA,mCACE,QAAC,aAAD;AAAe,cAAA,IAAI,EAAE;AAArB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBA5HJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAhEY,gBAyMZ;AAAS,MAAA,SAAS,EAAC,sBAAnB;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,sBAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,cAAf;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAOE;AAAK,YAAA,QAAQ,EAAGvG,CAAD,IAAOsG,kBAAkB,CAACtG,CAAD,CAAxC;AAAA,mCACE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAPF,eAWE;AAAK,YAAA,SAAS,EAAC,2BAAf;AAAA,mCACE;AAAQ,cAAA,OAAO,EAAGA,CAAD,IAAOiG,YAAY,CAACjG,CAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAXF,eAgBE;AAAM,YAAA,SAAS,EAAC,8BAAhB;AAA+C,YAAA,QAAQ,EAAE,MAAMK,uBAAuB,EAAtF;AAAA,mCACE;AAAK,cAAA,SAAS,EAAC,4BAAf;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAIG7D,KAAK,KAAK,IAAV,gBAAiB,QAAC,KAAD;AAAO,gBAAA,OAAO,EAAE;AAAhB;AAAA;AAAA;AAAA;AAAA,sBAAjB,GAAiE,IAJpE,eAME;AAAK,gBAAA,SAAS,EAAC,oBAAf;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AACE,kBAAA,EAAE,EAAC,aADL;AAEE,kBAAA,IAAI,EAAC,MAFP;AAGE,kBAAA,KAAK,EAAEhB,WAAW,CAACE,UAAZ,IAA0B,EAHnC;AAIE,kBAAA,QAAQ,EAAGsE,CAAD,IAAOD,YAAY,CAACC,CAAD,CAJ/B;AAKE,kBAAA,IAAI,EAAC,YALP;AAME,6BAAQ;AANV;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBANF,eAkBE;AAAK,gBAAA,SAAS,EAAC,oBAAf;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AACE,kBAAA,EAAE,EAAC,OADL;AAEE,kBAAA,IAAI,EAAC,MAFP;AAGE,kBAAA,KAAK,EAAExE,WAAW,CAACG,YAAZ,IAA4B,EAHrC;AAIE,kBAAA,QAAQ,EAAGqE,CAAD,IAAOD,YAAY,CAACC,CAAD,CAJ/B;AAKE,kBAAA,IAAI,EAAC,cALP;AAME,6BAAQ;AANV;AAAA;AAAA;AAAA;AAAA,wBAFF,eAUE;AAAK,kBAAA,SAAS,EAAC,sBAAf;AAAA,yCAAsC;AAAA,8BAAOxE,WAAW,CAACG;AAAnB;AAAA;AAAA;AAAA;AAAA;AAAtC;AAAA;AAAA;AAAA;AAAA,wBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAlBF,eA+BE;AAAK,gBAAA,SAAS,EAAC,oBAAf;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AACE,kBAAA,EAAE,EAAC,OADL;AAEE,kBAAA,IAAI,EAAC,MAFP;AAGE,kBAAA,KAAK,EAAEH,WAAW,CAACI,YAAZ,IAA4B,EAHrC;AAIE,kBAAA,QAAQ,EAAGoE,CAAD,IAAOD,YAAY,CAACC,CAAD,CAJ/B;AAKE,kBAAA,IAAI,EAAC,cALP;AAME,6BAAQ;AANV;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBA/BF,eA2CE;AAAK,gBAAA,SAAS,EAAC,oBAAf;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AACE,kBAAA,EAAE,EAAC,MADL;AAEE,kBAAA,IAAI,EAAC,MAFP;AAGE,kBAAA,KAAK,EAAExE,WAAW,CAACK,IAAZ,IAAoB,EAH7B;AAIE,kBAAA,QAAQ,EAAGmE,CAAD,IAAOD,YAAY,CAACC,CAAD,CAJ/B;AAKE,kBAAA,IAAI,EAAC,MALP;AAME,6BAAQ;AANV;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBA3CF,eAuDE;AAAK,gBAAA,SAAS,EAAC,oBAAf;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AACE,kBAAA,EAAE,EAAC,UADL;AAEE,kBAAA,IAAI,EAAC,MAFP;AAGE,kBAAA,KAAK,EAAEtF,aAHT;AAIE,kBAAA,QAAQ,EAAGsF,CAAD,IAAOD,YAAY,CAACC,CAAD,CAJ/B;AAKE,kBAAA,IAAI,EAAC,UALP;AAME,kBAAA,QAAQ;AANV;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAvDF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAhBF,eAwFE;AAAK,YAAA,SAAS,EAAC,4BAAf;AAAA,oCACE;AAAQ,cAAA,SAAS,EAAC,2BAAlB;AAA8C,cAAA,OAAO,EAAE+F,YAAvD;AAAA,sCACE,QAAC,WAAD,CAAa,QAAb;AAAsB,gBAAA,KAAK,EAAE;AAAEd,kBAAAA,KAAK,EAAE,SAAT;AAAoBC,kBAAAA,IAAI,EAAE;AAA1B,iBAA7B;AAAA,uCACE,QAAC,iBAAD;AAAmB,kBAAA,SAAS,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBADF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAQE;AAAQ,yBAAQ,oBAAhB;AAAqC,cAAA,SAAS,EAAC,2BAA/C;AAA2E,cAAA,OAAO,EAAGlF,CAAD,IAAOA,CAAC,CAACgG,cAAF,CAAiBtF,WAAW,CAAClF,WAAD,CAA5B,CAA3F;AAAA,kDAGE,QAAC,WAAD,CAAa,QAAb;AAAsB,gBAAA,KAAK,EAAE;AAAEyJ,kBAAAA,KAAK,EAAE,MAAT;AAAiBC,kBAAAA,IAAI,EAAE;AAAvB,iBAA7B;AAAA,uCACE,QAAC,kBAAD;AAAoB,kBAAA,SAAS,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,oBARF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAxFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EA2GGpK,UAAU,gBAEP;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,gBAAf;AAAA,mCACE,QAAC,UAAD;AAAY,cAAA,IAAI,EAAE;AAAlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAKE;AAAK,YAAA,SAAS,EAAC,0BAAf;AAAA,mCACE,QAAC,aAAD;AAAe,cAAA,IAAI,EAAE;AAArB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFO,gBAaT;AAAK,UAAA,KAAK,EAAE;AAAEyL,YAAAA,KAAK,EAAE;AAAT,WAAZ;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,mBAAf;AAAA,mCACE,QAAC,aAAD;AAAe,cAAA,IAAI,EAAE;AAArB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAxHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AA1MN,mBADF;AAgVD;;GAhwCQ9L,W;UAiByCJ,U;;;KAjBzCI,W;AAkwCT,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n// Styles\nimport \"./FormAddress.css\";\n// Firebase\nimport { db } from \"../../../firebase/firebase\";\nimport firebase from \"firebase/app\";\n// Swal\nimport swal from '@sweetalert/with-react';\n// Icons\nimport { IconContext } from \"react-icons\";\nimport { IoMdArrowDropleft, IoMdArrowDropright } from 'react-icons/io';\nimport { ImProfile } from 'react-icons/im';\n\n// Hooks\nimport useAddress from \"../../../hooks/useAddress/useAddress\";\n\n// Components\nimport FormScript from '../FormScript/FormScript';\nimport Error from '../../Error/Error';\nimport FormAssistant from \"../FormAssistant/FormAssistant\";\n\nfunction FormAddress({ postcodeValue, gasInformation, electricityInformation, progressBar, showScript, customerStep, updateCustomerAddress, updateGasInformation, updateElectricityInformation, updateShowFormPostCode, updateShowFormAddres, updateShowOverlay, updateProgressBar, updateShowFomrFuelType }) {\n  /** STATES */\n  // Customer Address JSON\n  const [dataAddress, updateDataAddress] = useState({\n    doornumber: '',\n    addressline1: '',\n    addressline2: '',\n    city: '',\n    postcode: '',\n    mpan: '',\n    mprn: ''\n  });\n\n  // Customer Address List\n  const [addressList, updateAddressList] = useState([]);\n\n  // Hook useAddress\n  const [address, SelectAddress, updateAddress] = useAddress(\n    \"\", //Label\n    \"\", //Initial State\n    addressList //Array(response)\n  );\n\n  // Show Address type section\n  const [showTypeAddress, updateShowTypeAddres] = useState(true);\n\n  // Error State\n  const [error, updateError] = useState(false);\n\n  // Create customer in firebase\n  const [createCustomer, updateCreateCustomer] = useState(false);\n\n  // Button focus animation\n  const [focusAnimation, setFocusAnimation] = useState(false);\n\n  /** FUNCTIONS */\n\n  // Error smooth scroll\n  useEffect(() => {\n    if (error) {\n      const scroll_to = () => {\n        var element = document.querySelector(\"#error\");\n        // smooth scroll to element and align it at the bottom\n        element.scrollIntoView({ behavior: \"smooth\", block: \"end\", inline: \"end\" });\n      }\n\n      scroll_to()\n    }\n  }, [error]);\n\n  // Scroll to top\n  useEffect(() => {\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  }, []);\n\n  // useEffect to fetch the data from API\n  useEffect(() => {\n\n    // const address_api = process.env.REACT_APP_ADDRESS_API;\n\n    // Fetching Data\n    const fetchAPI = async () => {\n      // const url = `https://ws.postcoder.com/pcw/${address_api}/address/uk/${postcodeValue.replace(/ /g, '').toLowerCase()}`;\n      const key = process.env.REACT_APP_ADDRESS_API;\n      const url = `https://api.getAddress.io/find/${postcodeValue.replace(/ /g, '').toLowerCase()}?api-key=${key}&expand=true`;\n      const response_postcode = await fetch(url, {\n        method: 'GET'\n      }).then(function (response) {\n        if (response.status === 200) {\n          return response.json();\n        } else {\n          swal({\n            button: \"Ok\",\n            icon: \"info\",\n            content: (\n              <div className=\"swal-text-custom\">\n                <h1>Address not found</h1>\n                <p>\n                  Please enter the address manually\n                </p>\n              </div>\n            )\n          });\n          return;\n        }\n      }).then(function (response) {\n        return response;\n      }).catch(function (error) {\n        console.error(`Catch an error fetching to postcoder ${error}`);\n        swal({\n          button: \"Ok\",\n          icon: \"info\",\n          content: (\n            <div className=\"swal-text-custom\">\n              <h1>Address not found</h1>\n              <p>\n                Please enter the address manually\n              </p>\n            </div>\n          )\n        });\n        return;\n      });\n\n      if (response_postcode !== undefined) {\n\n        const data = response_postcode.addresses;\n\n        // Adding an ID\n        data.forEach((item, i) => {\n          item.id = i + 1;\n        });\n\n        if (addressList === []) {\n          return;\n        } else {\n          updateAddressList(data);\n        }\n      } else {\n        return;\n      }\n    }\n    // Execute Fetch API\n    fetchAPI();\n  }, []);\n\n  // Address Data\n  if (address !== '') {\n    // Selected Value\n    const selectedValue = addressList[address - 1];\n\n    console.log(selectedValue)\n\n    // Separated Values\n    var doornumberValue = selectedValue.formatted_address[0].replace(/[^0-9.]/g, '');\n    var addressline1Value = selectedValue.formatted_address.toString().replace(/,*,/g,',').replace(/,/g, \", \");\n    var addressline2Value = '';\n    var cityValue = selectedValue.town_or_city;\n    var mpanValue = '';\n    var mprnValue = '';\n\n    if (doornumberValue === undefined || doornumberValue === '') {\n      doornumberValue = \"N/A\";\n    } else {\n      doornumberValue = selectedValue.formatted_address[0].replace(/[^0-9.]/g, '');\n    }\n\n    if (addressline1Value === undefined || addressline1Value === '') {\n      addressline1Value = \"N/A\";\n    } else {\n      addressline1Value = selectedValue.formatted_address.toString().replace(/,*,/g,',').replace(/,/g, \", \");\n    }\n\n    if (addressline2Value === undefined || addressline2Value === '') {\n      addressline2Value = \"N/A\";\n    } else {\n      addressline2Value = \"\";\n    }\n\n    if (cityValue === undefined || cityValue === '') {\n      cityValue = \"N/A\";\n    } else {\n      cityValue = selectedValue.town_or_city;\n    }\n\n    if (mpanValue === undefined || mpanValue === '') {\n      mpanValue = '';\n    } else {\n      mpanValue = '';\n    }\n\n    if (mprnValue === undefined || mprnValue === '') {\n      mprnValue = '';\n    } else {\n      mprnValue = '';\n    }\n  }\n\n  const doornumber = doornumberValue;\n  const addressline1 = addressline1Value;\n  const addressline2 = addressline2Value;\n  const city = cityValue;\n  const postcode = postcodeValue;\n  const mpan = mpanValue;\n  const mprn = mprnValue;\n\n  // useEffect to add the data to the state\n  useEffect(() => {\n    updateDataAddress({\n      ...dataAddress,\n      doornumber: doornumber,\n      addressline1: addressline1,\n      addressline2: addressline2,\n      city: city,\n      postcode: postcode,\n      mpan: mpan,\n      mprn: mprn\n    });\n\n    updateError(false);\n  }, [address]);\n\n  // Function that runs every time the user writes to the input\n  const handleChange = (e) => {\n    updateDataAddress({\n      ...dataAddress,\n      [e.target.name]: e.target.value.replace(/[^\\w\\s]/gi, '').trim(),\n      mpan: '',\n      mprn: ''\n    });\n  };\n\n  const handleChangeTypeAddress = () => {\n    const door_typed = document.getElementById(\"door-number\").value;\n    const addres_line1_typed = document.getElementById(\"line1\").value;\n    const city_typed = document.getElementById(\"city\").value;\n\n    // Validation for Typeaddress\n    if ((door_typed !== '') && (addres_line1_typed !== '') && (city_typed !== '')) {\n      // Hidde message\n      updateError(false);\n    }\n  }\n\n  // Send Add address to CustomerData \n  const sendAddress = async (dataAddress) => {\n\n    const door_typed = document.getElementById(\"door-number\").value;\n    const addres_line1_typed = document.getElementById(\"line1\").value;\n    const city_typed = document.getElementById(\"city\").value;\n\n    // Validation for type address section\n    if (((door_typed === '') || (door_typed === undefined)) || ((addres_line1_typed === '') || (addres_line1_typed === undefined)) || ((city_typed === '') || (city_typed === undefined))) {\n      updateError(true);\n      return;\n    } else {\n      updateError(false);\n    }\n\n    // Show Overlay\n    updateShowOverlay(true);\n\n    // Values to validate\n    const doornumberValidate = dataAddress.doornumber.replace(/[^\\w\\s]/gi, '').trim();\n    const addressValidate = dataAddress.addressline1.replace(/[^\\w\\s]/gi, '').trim();\n    const cityValidate = dataAddress.city.replace(/[^\\w\\s]/gi, '').trim();\n\n    if (doornumberValidate === '' || doornumberValidate === undefined || addressValidate === '' || addressValidate === undefined || cityValidate === '' || cityValidate === undefined) {\n      // Validation failed\n      updateError(true);\n    } else {\n      /** -- ECOES API -- */\n\n      // ecoes_api\n      const ecoes_api = process.env.REACT_APP_ECOES_API;\n\n      // Body parameters\n      const postcodeParameters = {\n        \"Authentication\": {\n          \"Key\": ecoes_api\n        },\n        \"ParameterSets\": [{\n          \"Parameters\": [\n            {\n              \"Key\": \"Postcode\",\n              \"Value\": postcodeValue.replace(/[^\\w\\s]/gi, '').trim()\n            },\n            {\n              \"Key\": \"BuildingNumber\",\n              \"Value\": doornumberValidate\n            }\n          ]\n        }]\n      }\n\n      // Response ECOES MPAN\n      const responseECOESMPAN = await fetch('https://cors-anywhere.herokuapp.com/https://www.ecoes.co.uk/WebServices/Trial/ECOESAPI.svc/RESTful/JSON/SearchUtilityAddress', {\n        method: 'POST',\n        body: JSON.stringify(postcodeParameters),\n        headers: {\n          'Content-Type': 'application/json'\n        },\n      }).then(function (response) {\n        if (response.status === 200) {\n          return response.json();\n        } else {\n          return console.error('An error ocurred fetching to ECOES SearchUtilityAddress');\n        }\n      }).then(function (response) {\n        // Error response\n        const error_response = response.Results[0].Errors.length;\n\n        // Check values and return \n        if (error_response >= 1) {\n          const NA = 'NA';\n          return NA;\n        } else {\n          // Successful response\n          const successful_response = response.Results[0].UtilityAddressMatches[0].AddressDetails[0].Value;\n          return successful_response;\n        }\n      }).catch(function (error) {\n\n        return console.error(`Catch an error fetching to ECOES SearchUtilityAddress ${error}`);\n      });\n\n      // MPAN value\n      let mpan_core = '';\n\n      if (responseECOESMPAN !== \"NA\" && responseECOESMPAN !== undefined) {\n        mpan_core = responseECOESMPAN.replace(/[^\\w\\s]/gi, '').trim();\n      } else {\n        mpan_core = '';\n      }\n\n      //If we get a MPAN value call ECOES Details - Conditional\n      if (mpan_core !== '') {\n        /**-- Response ECOES DETAILS by MPAN--  */\n        // Body parameters\n        const detailsParameters = {\n          \"Authentication\": {\n            \"Key\": ecoes_api\n          },\n          \"ParameterSets\": [{\n            \"Parameters\": [{\n              \"Key\": \"MPAN\",\n              \"Value\": mpan_core\n            }]\n          }]\n        }\n\n        const responseECOESDetails = await fetch('https://cors-anywhere.herokuapp.com/https://www.ecoes.co.uk/WebServices/Trial/ECOESAPI.svc/RESTful/JSON/GetTechnicalDetailsByMpan', {\n          method: 'POST',\n          body: JSON.stringify(detailsParameters),\n          headers: {\n            'Content-Type': 'application/json'\n          },\n        }).then(function (response) {\n          if (response.status === 200) {\n            return response.json();\n          } else {\n            return console.error('An error ocurred fetching to GetTechnicalDetailsByMpan');\n          }\n        }).then(function (response) {\n          if (response !== undefined) {\n            // Error response\n            const error_response = response.Results[0].Errors.length;\n            // Check values and return \n            if (error_response >= 1) {\n              // Electricity Infomartion values\n              const MPANDetails = {\n                mpan_core: '',\n                meter_serial_number: '',\n                meter_type: '',\n                supplier_mpid: ''\n              }\n\n              // Update the state\n              updateElectricityInformation({ ...electricityInformation, MPANDetails });\n            } else {\n              // Extract the values from the response\n              const meter_serial_number = response.Results[0].UtilityMatches[0].Meters[0].MeterDetails[1].Value;\n              const meter_type = response.Results[0].UtilityMatches[0].Meters[0].MeterDetails[2].Value;\n              const supplier_mpid = response.Results[0].UtilityMatches[0].UtilityDetails[11].Value;\n              // Assign values\n              const MPANDetails = {\n                mpan_core,\n                meter_serial_number,\n                meter_type,\n                supplier_mpid\n              }\n\n              // Update the state\n              updateElectricityInformation({ ...electricityInformation, MPANDetails });\n            }\n          } else {\n            // Electricity Infomartion values\n            const MPANDetails = {\n              mpan_core: '',\n              meter_serial_number: '',\n              meter_type: '',\n              supplier_mpid: ''\n            }\n            // Update the state\n            return updateElectricityInformation({ ...electricityInformation, MPANDetails });\n          }\n        });\n      } else {\n        // Electricity Infomartion values\n        const MPANDetails = {\n          mpan_core: '',\n          meter_serial_number: '',\n          meter_type: '',\n          supplier_mpid: ''\n        }\n        // Update the state\n        updateElectricityInformation({ ...electricityInformation, MPANDetails });\n      }\n\n      /**--Postcode structure */\n\n      // Postcode unformatted\n      let postcode_unformatted = postcode;\n      // Postcode without spaces\n      let postcode_unformatted_no_space = postcode_unformatted.replace(/ /g, '');\n      // Postcode formated\n      let postcode_formated = '';\n\n      // For a postcode structure AN-NAA\n      if (postcode_unformatted_no_space.length === 5) {\n        // First two chars \n        let first_two = postcode_unformatted_no_space.slice(0, 2);\n        // Last three chars\n        let last_three = postcode_unformatted_no_space.slice(2, 5);\n        // Formated Postcode\n        postcode_formated = first_two + ' ' + last_three;\n      }\n\n      // For a postcode structure ANN-NAA, AAN-NAA, ANA-NAA\n      if (postcode_unformatted_no_space.length === 6) {\n        // First three chars \n        let first_three = postcode_unformatted_no_space.slice(0, 3);\n        // Last three chars\n        let last_three = postcode_unformatted_no_space.slice(3, 6);\n        // Formated Postcode\n        postcode_formated = first_three + ' ' + last_three;\n      }\n\n      // For a postcode structure AANN-NAA, AANA-NAA\n      if (postcode_unformatted_no_space.length === 7) {\n        // First three chars \n        let first_four = postcode_unformatted_no_space.slice(0, 4);\n        // Last three chars\n        let last_three = postcode_unformatted_no_space.slice(4, 7);\n        // Formated Postcode\n        postcode_formated = first_four + ' ' + last_three;\n      }\n\n      /** -- XOSERVE API -- */\n\n      // xoserve_api\n      const xoserve_api = process.env.REACT_APP_XOSERVE_API;\n\n      const responseXOSERVE = await fetch(`https://cors-anywhere.herokuapp.com/https://xoserve.apimanagement.hana.ondemand.com:443/v1/switchdataTBB.svc?postcode='${postcode_formated}'&house_no='${doornumberValidate}'`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'APIKey': xoserve_api\n        },\n      }).then(function (response) {\n        if (response.status === 200) {\n          return response.json();\n        } else {\n          const mprn_core = '';\n          updateGasInformation({\n            ...gasInformation,\n            dataGas: {\n              mprn: '',\n              meter_mechanism_code: '',\n              current_supplier_id: '',\n              gas_transport_id: ''\n            }\n          });\n\n          console.error('An error ocurred fetching to Xoserve switchdataTBB');\n\n          return mprn_core;\n\n        }\n      }).then(function (response) {\n        // If exist information about the property \n        const success = response.hasOwnProperty('mprn');\n\n        if (success === true) {\n          const dataGas = response.mprn[0];\n          const mprn_core = response.mprn[0].mprn;\n          updateGasInformation({ ...gasInformation, dataGas });\n          return mprn_core;\n        } else {\n          const mprn_core = '';\n          updateGasInformation({\n            ...gasInformation,\n            dataGas: {\n              mprn: mprn_core,\n              meter_mechanism_code: '',\n              current_supplier_id: '',\n              gas_transport_id: ''\n            }\n          });\n          return mprn_core;\n        }\n      }).catch(function (error) {\n\n        return console.error(`Catch an error fetching to Xoserve switchdataTBB: ${error}`);\n      });\n\n      // MPRN value\n      let mprn_core = responseXOSERVE;\n\n      if (mprn_core === undefined) {\n        mprn_core = '';\n        updateGasInformation({\n          ...gasInformation,\n          dataGas: {\n            mprn: '',\n            meter_mechanism_code: '',\n            current_supplier_id: '',\n            gas_transport_id: ''\n          }\n        });\n      }\n\n      const postcode_formatted = dataAddress.postcode.replace(/\\s/g, '').trim().toLowerCase();\n      const doornumber_formatted = dataAddress.doornumber.replace(/\\s/g, '').trim().toLowerCase();\n\n      const uid = `${postcode_formatted}-${doornumber_formatted}`;\n\n      // Document ref\n      let docRef = await db.collection(\"customers\").doc(uid);\n\n      // // Fetching customer data\n      // const getCustomerData = async () => docRef.get().then((doc) => {\n      //   // If customer exist\n      //   if (doc.exists) {\n      //     return doc.data();\n      //   }\n      //   return;\n      // });\n\n      // Fetching customer data\n      const getCustomerData = async () => docRef.get().then((doc) => {\n        // If customer exist\n        if (doc.exists) {\n          return doc.data();\n        }\n        return;\n      }).catch((error) => {\n        console.log(error)\n        console.log('Fetching customer data failed');\n        return;\n      });\n\n      // Execute getCustomerData\n      let customer = await getCustomerData();\n\n      // Validate if customer exists\n      if (customer) {\n\n        // customerData\n        const customerData = customer;\n\n        // Customer Information\n        const { customerAddres, MPANDetails, dataGas } = customerData;\n\n        // Customer Address\n        const { doornumber, addressline1, addressline2, city, postcode } = customerAddres;\n\n        // MPANDetails\n        const { meter_type } = MPANDetails;\n\n        // dataGas\n        const { meter_mechanism_code } = dataGas;\n\n        // Electricity company name\n        const company_name_es = MPANDetails.company_name;\n        // MPAN\n        const mpan_fetched = MPANDetails.mpan_core;\n\n        // Gas company name\n        const company_name_gs = dataGas.company_name;\n        // MPRN\n        const mprn_fetched = dataGas.mprn;\n\n        // Customer Information - Sweet alert\n        swal({\n          className: 'swal-modal_custom',\n          buttons: {\n            cancel: \"Cancel\",\n            confirm: \"Use this information\"\n          },\n          content: (\n            <>\n              <div className=\"form-compare-details-info-container\">\n                <div className=\"form-compare-details-info\">\n\n                  <IconContext.Provider value={{ color: '#D338AE', size: '50px' }}>\n                    <ImProfile />\n                  </IconContext.Provider>\n\n                  <h3 style={{ marginBottom: '0' }}>Data found for this customer</h3>\n\n                  <div className=\"form-compare-details-container\">\n                    {/* Customer Address */}\n                    <div className=\"form-compare-single-details\">\n                      <div style={{ display: 'flex', flexDirection: 'column', textAlign: 'start' }}>\n                        <p>Address:<span>{`${addressline1.toUpperCase()}${addressline2 === \"N/A\" ? '' : `, ${addressline2.toUpperCase()}`} `}</span></p>\n                        <p>Flat number:<span>{doornumber.toUpperCase()}</span></p>\n                        <p>City:<span>{city.toUpperCase()}</span></p>\n                        <p>Postcode:<span>{postcode.toUpperCase()}</span></p>\n                      </div>\n                    </div>\n\n                    {/* -------- ELECTRICITY INFORMATION -------- */}\n\n                    {/* Title - Elictricity Information */}\n                    {(!!company_name_es) || (!!meter_type) || (!!mpan_fetched) ?\n                      (<h3>Electricity Information</h3>)\n                      :\n                      null}\n\n                    {/* Address - Elictricity Information */}\n                    {!!company_name_es ?\n                      (\n                        <div className=\"form-compare-single-details\">\n                          <p>Supplier: <span>{company_name_es}</span></p>\n                        </div>\n                      )\n                      :\n                      null\n                    }\n\n                    {/* Meter Type - Elictricity Information */}\n                    {!!meter_type ?\n                      (\n                        <div className=\"form-compare-single-details\">\n                          <p>Meter Type: <span>{meter_type}</span></p>\n                        </div>\n                      )\n                      :\n                      null\n                    }\n\n                    {/* Meter Type - Elictricity Information */}\n                    {!!mpan_fetched ?\n                      (\n                        <div className=\"form-compare-single-details\">\n                          <p>MPAN: <span>{mpan_fetched}</span></p>\n                        </div>\n                      )\n                      :\n                      null\n                    }\n\n                    {/* -------- GAS INFORMATION -------- */}\n\n                    {/* Title - Gas Information */}\n                    {(!!company_name_gs) || (!!meter_mechanism_code) || (!!mprn_fetched) ?\n                      (<h3>Gas Information</h3>)\n                      :\n                      null}\n\n                    {/* Address - Gas Information */}\n                    {!!company_name_gs ?\n                      (\n                        <div className=\"form-compare-single-details\">\n                          <p>Supplier: <span>{company_name_gs}</span></p>\n                        </div>\n                      )\n                      :\n                      null\n                    }\n\n                    {/* Meter Type - Gas Information */}\n                    {!!meter_mechanism_code ?\n                      (\n                        <div className=\"form-compare-single-details\">\n                          <p>Meter Type: <span>{meter_mechanism_code}</span></p>\n                        </div>\n                      )\n                      :\n                      null\n                    }\n\n                    {/* Meter Type - Gas Information */}\n                    {!!mprn_fetched ?\n                      (\n                        <div className=\"form-compare-single-details\">\n                          <p>MPAN: <span>{mprn_fetched}</span></p>\n                        </div>\n                      )\n                      :\n                      null\n                    }\n\n                  </div>\n                </div>\n              </div>\n            </>\n          )\n        }).then((result) => {\n\n          if (result !== true) {\n\n            // postcode_formatted\n            const postcode_formatted = dataAddress.postcode.replace(/\\s/g, '').trim().toLowerCase();\n            // doornumber_formatted\n            const doornumber_formatted = dataAddress.doornumber.replace(/\\s/g, '').trim().toLowerCase();\n            // uid\n            const uid = `${postcode_formatted}-${doornumber_formatted}`;\n\n            // Update firebase customer\n            db.collection(\"customers\").doc(uid).set({\n              created: firebase.firestore.FieldValue.serverTimestamp(),\n              step: 1,\n              customerAddres: {\n                doornumber: dataAddress.doornumber ? dataAddress.doornumber : '',\n                addressline1: dataAddress.addressline1 ? dataAddress.addressline1 : '',\n                addressline2: dataAddress.addressline2 ? dataAddress.addressline2 : '',\n                city: dataAddress.city ? dataAddress.city : '',\n                postcode: dataAddress.postcode ? dataAddress.postcode : '',\n                mpan: mpan_core ? mpan_core : '',\n                mprn: mprn_core ? mprn_core : ''\n              },\n              MPANDetails: {\n                mpan_core: '',\n                meter_serial_number: '',\n                meter_type: '',\n                supplier_mpid: '',\n                company_name: ''\n              },\n              dataGas: {\n                mprn: '',\n                meter_mechanism_code: '',\n                current_supplier_id: '',\n                gas_transport_id: '',\n                company_name: ''\n              }\n            });\n\n            // Validation successful\n            updateError(false);\n            // Update data\n            updateCustomerAddress({\n              ...dataAddress,\n              mpan: mpan_core,\n              mprn: mprn_core\n            });\n            // Update progress bar\n            updateProgressBar({ ...progressBar, step: 2 });\n            // Hidde Form Address\n            updateShowFormAddres(false);\n            // Show Form Fuel type\n            updateShowFomrFuelType(true);\n            // Hidde Overlay\n            updateShowOverlay(false);\n            console.log('Data was sent successfully - From cancel alert');\n            console.log('Update customers in firebse if it is necessary');\n\n            return;\n          }\n\n          console.log('Data was sent successfully - Using DB');\n          return customerStep(customerData);\n\n        }).catch((error) => {\n\n          // Update firebase customer\n          db.collection(\"customers\").doc(uid).set({\n            created: firebase.firestore.FieldValue.serverTimestamp(),\n            step: 1,\n            customerAddres: {\n              doornumber: dataAddress.doornumber ? dataAddress.doornumber : '',\n              addressline1: dataAddress.addressline1 ? dataAddress.addressline1 : '',\n              addressline2: dataAddress.addressline2 ? dataAddress.addressline2 : '',\n              city: dataAddress.city ? dataAddress.city : '',\n              postcode: dataAddress.postcode ? dataAddress.postcode : '',\n              mpan: mpan_core ? mpan_core : '',\n              mprn: mprn_core ? mprn_core : ''\n            },\n            MPANDetails: {\n              mpan_core: '',\n              meter_serial_number: '',\n              meter_type: '',\n              supplier_mpid: '',\n              company_name: ''\n            },\n            dataGas: {\n              mprn: '',\n              meter_mechanism_code: '',\n              current_supplier_id: '',\n              gas_transport_id: '',\n              company_name: ''\n            }\n          });\n\n          console.log(error);\n\n          // Validation successful\n          updateError(false);\n          // Update data\n          updateCustomerAddress({\n            ...dataAddress,\n            mpan: mpan_core,\n            mprn: mprn_core\n          });\n          // Update progress bar\n          updateProgressBar({ ...progressBar, step: 2 });\n          // Hidde Form Address\n          updateShowFormAddres(false);\n          // Show Form Fuel type\n          updateShowFomrFuelType(true);\n          // Hidde Overlay\n          updateShowOverlay(false);\n          console.log('Data was sent successfully - From error');\n          console.log('Update customers in firebse if it is necessary');\n          return;\n        });\n\n        // End process\n        return;\n      }\n\n      // Create customer in firebase\n      updateCreateCustomer(true);\n\n      // Validation successful\n      updateError(false);\n      // Update data\n      updateCustomerAddress({\n        ...dataAddress,\n        mpan: mpan_core,\n        mprn: mprn_core\n      });\n      // Update progress bar\n      updateProgressBar({ ...progressBar, step: 2 });\n      // Hidde Form Address\n      updateShowFormAddres(false);\n      // Show Form Fuel type\n      updateShowFomrFuelType(true);\n      // Hidde Overlay\n      updateShowOverlay(false);\n      console.log('Data was sent successfully - No user found');\n      console.log('Create a new customer in firebase');\n\n      // End process\n      return;\n    }\n  }\n\n  /** --  Listener to create a customer in firebase -- */\n  useEffect(() => {\n    (async () => {\n      // createCustomer\n      if (createCustomer) {\n        // postcode_formatted\n        const postcode_formatted = dataAddress.postcode.replace(/\\s/g, '').trim().toLowerCase();\n        // doornumber_formatted\n        const doornumber_formatted = dataAddress.doornumber.replace(/\\s/g, '').trim().toLowerCase();\n        // uid\n        const uid = `${postcode_formatted}-${doornumber_formatted}`;\n\n        // Firebase\n        await db.collection(\"customers\").doc(uid).set({\n          created: firebase.firestore.FieldValue.serverTimestamp(),\n          step: 1,\n          customerAddres: {\n            doornumber: dataAddress.doornumber ? dataAddress.doornumber : '',\n            addressline1: dataAddress.addressline1 ? dataAddress.addressline1 : '',\n            addressline2: dataAddress.addressline2 ? dataAddress.addressline2 : '',\n            city: dataAddress.city ? dataAddress.city : '',\n            postcode: dataAddress.postcode ? dataAddress.postcode : '',\n            mpan: electricityInformation.MPANDetails.mpan_core ? electricityInformation.MPANDetails.mpan_core : '',\n            mprn: gasInformation.dataGas.mprn ? gasInformation.dataGas.mprn : ''\n          },\n          MPANDetails: {\n            meter_serial_number: electricityInformation.MPANDetails.meter_serial_number ? electricityInformation.MPANDetails.meter_serial_number : '',\n            meter_type: electricityInformation.MPANDetails.meter_type ? electricityInformation.MPANDetails.meter_type : '',\n            mpan_core: electricityInformation.MPANDetails.mpan_core ? electricityInformation.MPANDetails.mpan_core : '',\n            supplier_mpid: electricityInformation.MPANDetails.supplier_mpid ? electricityInformation.MPANDetails.supplier_mpid : ''\n          },\n          dataGas: {\n            mprn: gasInformation.dataGas.mprn ? gasInformation.dataGas.mprn : '',\n            meter_mechanism_code: gasInformation.dataGas.meter_mechanism_code ? gasInformation.dataGas.meter_mechanism_code : '',\n            current_supplier_id: gasInformation.dataGas.current_supplier_id ? gasInformation.dataGas.current_supplier_id : '',\n            gas_transport_id: gasInformation.dataGas.gas_transport_id ? gasInformation.dataGas.gas_transport_id : ''\n          }\n        });\n      }\n    })();\n\n  }, [createCustomer]);\n\n  // Go back to postcode\n  const goToPostcode = (e) => {\n    e.preventDefault();\n    // Hidde Form Address\n    updateShowFormAddres(false);\n    // Show Postcode\n    updateShowFormPostCode(true);\n    // Update progress bar\n    updateProgressBar({ ...progressBar, step: 0 });\n  };\n\n  // Address is not listed\n  const type_address = (e) => {\n    e.preventDefault();\n    // Update data address \n    updateDataAddress({\n      ...dataAddress,\n      doornumber: '',\n      addressline1: '',\n      addressline2: '',\n      city: '',\n      // postcode: '',\n      mpan: '',\n      mprn: ''\n    });\n    // Cleaning states\n    updateElectricityInformation({});\n    updateGasInformation({});\n    updateAddress('');\n    updateShowTypeAddres(false);\n    updateError(false);\n\n    // Reset form\n    let reset_doornumber = document.getElementById('door-number');\n    let reset_line1 = document.getElementById('line1');\n    let reset_line2 = document.getElementById('line2');\n    let reset_city = document.getElementById('city');\n    if ((reset_doornumber !== null) && (reset_line1 !== null) && (reset_line2 !== null) && (reset_city !== null)) {\n      reset_doornumber.value = '';\n      reset_line1.value = '';\n      reset_line2.value = '';\n      reset_city.value = '';\n    }\n  }\n\n  // HandleChangeSelect\n  const handleChangeSelect = (e) => {\n    e.preventDefault();\n    // Update states\n    updateShowTypeAddres(true);\n    updateDataAddress({\n      ...dataAddress,\n      doornumber: '',\n      addressline1: '',\n      addressline2: '',\n      city: '',\n      // postcode: '',\n      mpan: '',\n      mprn: ''\n    });\n  }\n\n  return (\n    <>\n      {showTypeAddress ?\n        address === \"\" ? (\n          <section className=\"form-address-section\">\n            <div className=\"form-address-container\">\n              <div className=\"form-address-content\">\n                <div className=\"form-address\">\n                  <h1>Select your addres from the below</h1>\n                  <p>Having the correct address is key to ensuring we select the correct MPAN / MRPN for the customer's address. Id the customer's address is not present in the list below, we must enter it manually and request the customers MPAN / MPRN to enable successful switch.</p>\n                </div>\n\n                {/* Address */}\n                <div>\n                  <SelectAddress />\n                </div>\n\n                <div className='form-address-manually-btn'>\n                  <button data-cy=\"addr-empty\" onClick={(e) => type_address(e)}>My address isn't listed</button>\n                </div>\n\n                {/* Error */}\n                {error === true ? <Error message={'Please enter an address'} /> : null}\n\n                {/* Buttons */}\n                <div className=\"form-address-btn-container\">\n                  <button className=\"form-address-btn btn-back\" onClick={goToPostcode}>\n                    <IconContext.Provider value={{ color: '#D338AE', size: '35px' }}>\n                      <IoMdArrowDropleft className=\"icon-back\" />\n                    </IconContext.Provider>\n                    Go back\n                  </button>\n\n                  <button data-cy=\"addr-noselected\" className=\"form-address-btn btn-next\" onClick={() => address === '' ? updateError(true) : null}>\n                    Continue\n\n                    <IconContext.Provider value={{ color: '#FFF', size: '35px' }}>\n                      <IoMdArrowDropright className=\"icon-next\" />\n                    </IconContext.Provider>\n                  </button>\n                </div>\n              </div>\n\n              {showScript ?\n                (\n                  <div className=\"helper-address\">\n                    <div className=\"script-address\">\n                      <FormScript step={2} />\n                    </div>\n\n                    <div className=\"assistant-address-custom\">\n                      <FormAssistant tips={1} />\n                    </div>\n                  </div>\n                )\n                :\n                <div style={{ width: '100%' }}>\n                  <div className=\"assistant-address\">\n                    <FormAssistant tips={1} />\n                  </div>\n                </div>\n              }\n\n            </div>\n          </section>\n        ) : (\n          <section className=\"form-address-section\">\n            <div className=\"form-address-container\">\n              <div className=\"form-address-content\">\n                <div className=\"form-address\">\n                  <h1>Select your addres from the below</h1>\n                  <p>Having the correct address is key to ensuring we select the correct MPAN / MRPN for the customer's address. Id the customer's address is not present in the list below, we must enter it manually and request the customers MPAN / MPRN to enable successful switch.</p>\n                </div>\n\n                {/* Address */}\n                <div>\n                  <SelectAddress />\n                </div>\n\n                <div className=\"form-address-manually-btn\">\n                  <button onClick={(e) => type_address(e)} className={focusAnimation ? 'animate__animated animate__headShake' : ''}>My address isn't listed</button>\n                </div>\n\n                {/* Inputs */}\n                <form className=\"form-address-input-container\">\n                  <div className=\"form-address-input-content\">\n                    <h2>Address Information</h2>\n\n                    {/* Error */}\n                    {error === true ? <Error message={'Please enter an address'} /> : null}\n\n                    <div className=\"form-address-input\">\n                      <label>Door number</label>\n                      <div onClick={() => setFocusAnimation(!focusAnimation)}>\n                        <input\n                          id=\"door-number\"\n                          name=\"doornumber\"\n                          type=\"text\"\n                          value={dataAddress.doornumber || ''}\n                          disabled={true}\n                        />\n                      </div>\n                    </div>\n\n                    <div className=\"form-address-input\">\n                      <label>Address Line 1</label>\n                      <div onClick={() => setFocusAnimation(!focusAnimation)}>\n                        <input\n                          id=\"line1\"\n                          name=\"addressline1\"\n                          type=\"text\"\n                          value={dataAddress.addressline1 || ''}\n                          disabled={true}\n                        />\n                        <div className=\"form-address-tooltip\"><span>{dataAddress.addressline1}</span></div>\n                      </div>\n                    </div>\n\n                    <div className=\"form-address-input\">\n                      <label>Address line 2 (optional)</label>\n                      <div onClick={() => setFocusAnimation(!focusAnimation)}>\n                        <input\n                          id=\"line2\"\n                          name=\"addressline2\"\n                          type=\"text\"\n                          value={dataAddress.addressline2 || ''}\n                          disabled={true}\n                        />\n                      </div>\n                    </div>\n\n                    <div className=\"form-address-input\">\n                      <label>City</label>\n                      <div onClick={() => setFocusAnimation(!focusAnimation)}>\n                        <input\n                          id=\"city\"\n                          name=\"city\"\n                          type=\"text\"\n                          value={dataAddress.city || ''}\n                          disabled={true}\n                        />\n                      </div>\n                    </div>\n\n                    <div className=\"form-address-input\">\n                      <label>Postcode</label>\n                      <div onClick={() => setFocusAnimation(!focusAnimation)}>\n                        <input\n                          id=\"postcode\"\n                          name=\"postcode\"\n                          type=\"text\"\n                          value={dataAddress.postcode || ''}\n                          disabled={true}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </form>\n\n                {/* Buttons */}\n                <div className=\"form-address-btn-container\">\n                  <button className=\"form-address-btn btn-back\" onClick={goToPostcode}>\n                    <IconContext.Provider value={{ color: '#D338AE', size: '35px' }}>\n                      <IoMdArrowDropleft className=\"icon-back\" />\n                    </IconContext.Provider>\n                    Go back\n                  </button>\n\n                  <button className=\"form-address-btn btn-next\" onClick={(e) => e.preventDefault(sendAddress(dataAddress))}>\n                    Continue\n\n                    <IconContext.Provider value={{ color: '#FFF', size: '35px' }}>\n                      <IoMdArrowDropright className=\"icon-next\" />\n                    </IconContext.Provider>\n                  </button>\n                </div>\n              </div>\n\n              {showScript ?\n                (\n                  <div className=\"helper-address\">\n                    <div className=\"script-address\">\n                      <FormScript step={2} />\n                    </div>\n\n                    <div className=\"assistant-address-custom\">\n                      <FormAssistant tips={1} />\n                    </div>\n                  </div>\n                )\n                :\n                <div style={{ width: '100%' }}>\n                  <div className=\"assistant-address\">\n                    <FormAssistant tips={1} />\n                  </div>\n                </div>\n              }\n\n            </div>\n          </section>\n        )\n        :\n        (\n          <section className=\"form-address-section\">\n            <div className=\"form-address-container\">\n              <div className=\"form-address-content\">\n                <div className=\"form-address\">\n                  <h1>Select your addres from the below</h1>\n                  <p>Having the correct address is key to ensuring we select the correct MPAN / MRPN for the customer's address. Id the customer's address is not present in the list below, we must enter it manually and request the customers MPAN / MPRN to enable successful switch.</p>\n                </div>\n\n                {/* Address */}\n                <div onChange={(e) => handleChangeSelect(e)}>\n                  <SelectAddress />\n                </div>\n\n                <div className='form-address-manually-btn'>\n                  <button onClick={(e) => type_address(e)}>My address isn't listed</button>\n                </div>\n\n                {/* Inputs */}\n                <form className=\"form-address-input-container\" onChange={() => handleChangeTypeAddress()}>\n                  <div className=\"form-address-input-content\">\n                    <h2>Type address manually</h2>\n\n                    {/* Error */}\n                    {error === true ? <Error message={'Please enter an address'} /> : null}\n\n                    <div className=\"form-address-input\">\n                      <label>Door number</label>\n                      <input\n                        id=\"door-number\"\n                        type=\"text\"\n                        value={dataAddress.doornumber || ''}\n                        onChange={(e) => handleChange(e)}\n                        name=\"doornumber\"\n                        data-cy=\"door-input\"\n                      />\n                    </div>\n\n                    <div className=\"form-address-input\">\n                      <label>Address Line 1</label>\n                      <input\n                        id=\"line1\"\n                        type=\"text\"\n                        value={dataAddress.addressline1 || ''}\n                        onChange={(e) => handleChange(e)}\n                        name=\"addressline1\"\n                        data-cy=\"addr1-input\"\n                      />\n                      <div className=\"form-address-tooltip\"><span>{dataAddress.addressline1}</span></div>\n                    </div>\n\n                    <div className=\"form-address-input\">\n                      <label>Address line 2 (optional)</label>\n                      <input\n                        id=\"line2\"\n                        type=\"text\"\n                        value={dataAddress.addressline2 || ''}\n                        onChange={(e) => handleChange(e)}\n                        name=\"addressline2\"\n                        data-cy=\"addr2-input\"\n                      />\n                    </div>\n\n                    <div className=\"form-address-input\">\n                      <label>City</label>\n                      <input\n                        id=\"city\"\n                        type=\"text\"\n                        value={dataAddress.city || ''}\n                        onChange={(e) => handleChange(e)}\n                        name=\"city\"\n                        data-cy=\"city-input\"\n                      />\n                    </div>\n\n                    <div className=\"form-address-input\">\n                      <label>Postcode</label>\n                      <input\n                        id=\"postcode\"\n                        type=\"text\"\n                        value={postcodeValue}\n                        onChange={(e) => handleChange(e)}\n                        name=\"postcode\"\n                        disabled\n                      />\n                    </div>\n\n                  </div>\n                </form>\n\n                {/* Buttons */}\n                <div className=\"form-address-btn-container\">\n                  <button className=\"form-address-btn btn-back\" onClick={goToPostcode}>\n                    <IconContext.Provider value={{ color: '#D338AE', size: '35px' }}>\n                      <IoMdArrowDropleft className=\"icon-back\" />\n                    </IconContext.Provider>\n                    Go back\n                  </button>\n\n                  <button data-cy=\"addrtyped-continue\" className=\"form-address-btn btn-next\" onClick={(e) => e.preventDefault(sendAddress(dataAddress))}>\n                    Continue\n\n                    <IconContext.Provider value={{ color: '#FFF', size: '35px' }}>\n                      <IoMdArrowDropright className=\"icon-next\" />\n                    </IconContext.Provider>\n                  </button>\n                </div>\n              </div>\n\n              {showScript ?\n                (\n                  <div className=\"helper-address\">\n                    <div className=\"script-address\">\n                      <FormScript step={2} />\n                    </div>\n\n                    <div className=\"assistant-address-custom\">\n                      <FormAssistant tips={1} />\n                    </div>\n                  </div>\n                )\n                :\n                <div style={{ width: '100%' }}>\n                  <div className=\"assistant-address\">\n                    <FormAssistant tips={1} />\n                  </div>\n                </div>\n              }\n\n            </div>\n          </section>\n        )}\n    </>\n  );\n}\n\nexport default FormAddress;\n"]},"metadata":{},"sourceType":"module"}
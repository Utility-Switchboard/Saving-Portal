{"ast":null,"code":"import _defineProperty from\"/Users/juanlugo/Desktop/sp-firebase/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/juanlugo/Desktop/sp-firebase/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/Users/juanlugo/Desktop/sp-firebase/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/juanlugo/Desktop/sp-firebase/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/juanlugo/Desktop/sp-firebase/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";// Styles\nimport\"./FormAddress.css\";// Firebase\nimport{db}from\"../../../firebase/firebase\";import firebase from\"firebase/app\";// Swal\nimport swal from'@sweetalert/with-react';// Icons\nimport{IconContext}from\"react-icons\";import{IoMdArrowDropleft,IoMdArrowDropright}from'react-icons/io';import{ImProfile}from'react-icons/im';// Hooks\nimport useAddress from\"../../../hooks/useAddress/useAddress\";// Components\nimport FormScript from'../FormScript/FormScript';import Error from'../../Error/Error';import FormAssistant from\"../FormAssistant/FormAssistant\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function FormAddress(_ref){var postcodeValue=_ref.postcodeValue,gasInformation=_ref.gasInformation,electricityInformation=_ref.electricityInformation,progressBar=_ref.progressBar,showScript=_ref.showScript,customerStep=_ref.customerStep,updateCustomerAddress=_ref.updateCustomerAddress,updateGasInformation=_ref.updateGasInformation,updateElectricityInformation=_ref.updateElectricityInformation,updateShowFormPostCode=_ref.updateShowFormPostCode,updateShowFormAddres=_ref.updateShowFormAddres,updateShowOverlay=_ref.updateShowOverlay,updateProgressBar=_ref.updateProgressBar,updateShowFomrFuelType=_ref.updateShowFomrFuelType;/** STATES */ // Customer Address JSON\nvar _useState=useState({doornumber:'',addressline1:'',addressline2:'',city:'',postcode:'',mpan:'',mprn:''}),_useState2=_slicedToArray(_useState,2),dataAddress=_useState2[0],updateDataAddress=_useState2[1];// Customer Address List\nvar _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),addressList=_useState4[0],updateAddressList=_useState4[1];// Hook useAddress\nvar _useAddress=useAddress(\"\",//Label\n\"\",//Initial State\naddressList//Array(response)\n),_useAddress2=_slicedToArray(_useAddress,3),address=_useAddress2[0],SelectAddress=_useAddress2[1],updateAddress=_useAddress2[2];// Show Address type section\nvar _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),showTypeAddress=_useState6[0],updateShowTypeAddres=_useState6[1];// Error State\nvar _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),error=_useState8[0],updateError=_useState8[1];// Create customer in firebase\nvar _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),createCustomer=_useState10[0],updateCreateCustomer=_useState10[1];// Button focus animation\nvar _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),focusAnimation=_useState12[0],setFocusAnimation=_useState12[1];/** FUNCTIONS */ // Error smooth scroll\nuseEffect(function(){if(error){var scroll_to=function scroll_to(){var element=document.querySelector(\"#error\");// smooth scroll to element and align it at the bottom\nelement.scrollIntoView({behavior:\"smooth\",block:\"end\",inline:\"end\"});};scroll_to();}},[error]);// Scroll to top\nuseEffect(function(){window.scrollTo({top:0,behavior:'smooth'});},[]);// useEffect to fetch the data from API\nuseEffect(function(){// const address_api = process.env.REACT_APP_ADDRESS_API;\n// Fetching Data\nvar fetchAPI=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var key,url,response_postcode,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:// const url = `https://ws.postcoder.com/pcw/${address_api}/address/uk/${postcodeValue.replace(/ /g, '').toLowerCase()}`;\nkey=process.env.REACT_APP_ADDRESS_API;url=\"https://api.getAddress.io/find/\".concat(postcodeValue.replace(/ /g,'').toLowerCase(),\"?api-key=\").concat(key,\"&expand=true\");_context.next=4;return fetch(url,{method:'GET'}).then(function(response){if(response.status===200){return response.json();}else{swal({button:\"Ok\",icon:\"info\",content:/*#__PURE__*/_jsxs(\"div\",{className:\"swal-text-custom\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Address not found\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Please enter the address manually\"})]})});return;}}).then(function(response){return response;}).catch(function(error){console.error(\"Catch an error fetching to postcoder \".concat(error));swal({button:\"Ok\",icon:\"info\",content:/*#__PURE__*/_jsxs(\"div\",{className:\"swal-text-custom\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Address not found\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Please enter the address manually\"})]})});return;});case 4:response_postcode=_context.sent;if(!(response_postcode!==undefined)){_context.next=15;break;}data=response_postcode.addresses;// Adding an ID\ndata.forEach(function(item,i){item.id=i+1;});if(!(addressList===[])){_context.next=12;break;}return _context.abrupt(\"return\");case 12:updateAddressList(data);case 13:_context.next=16;break;case 15:return _context.abrupt(\"return\");case 16:case\"end\":return _context.stop();}}},_callee);}));return function fetchAPI(){return _ref2.apply(this,arguments);};}();// Execute Fetch API\nfetchAPI();},[]);// Address Data\nif(address!==''){// Selected Value\nvar selectedValue=addressList[address-1];console.log(selectedValue);// Separated Values\nvar doornumberValue=selectedValue.formatted_address[0].replace(/[^0-9.]/g,'');var addressline1Value=selectedValue.formatted_address.toString().replace(/,*,/g,',').replace(/,/g,\", \");var addressline2Value='';var cityValue=selectedValue.town_or_city;var mpanValue='';var mprnValue='';if(doornumberValue===undefined||doornumberValue===''){doornumberValue=\"N/A\";}else{doornumberValue=selectedValue.formatted_address[0].replace(/[^0-9.]/g,'');}if(addressline1Value===undefined||addressline1Value===''){addressline1Value=\"N/A\";}else{addressline1Value=selectedValue.formatted_address.toString().replace(/,*,/g,',').replace(/,/g,\", \");}if(addressline2Value===undefined||addressline2Value===''){addressline2Value=\"N/A\";}else{addressline2Value=\"\";}if(cityValue===undefined||cityValue===''){cityValue=\"N/A\";}else{cityValue=selectedValue.town_or_city;}if(mpanValue===undefined||mpanValue===''){mpanValue='';}else{mpanValue='';}if(mprnValue===undefined||mprnValue===''){mprnValue='';}else{mprnValue='';}}var doornumber=doornumberValue;var addressline1=addressline1Value;var addressline2=addressline2Value;var city=cityValue;var postcode=postcodeValue;var mpan=mpanValue;var mprn=mprnValue;// useEffect to add the data to the state\nuseEffect(function(){updateDataAddress(_objectSpread(_objectSpread({},dataAddress),{},{doornumber:doornumber,addressline1:addressline1,addressline2:addressline2,city:city,postcode:postcode,mpan:mpan,mprn:mprn}));updateError(false);},[address]);// Function that runs every time the user writes to the input\nvar handleChange=function handleChange(e){var _objectSpread2;updateDataAddress(_objectSpread(_objectSpread({},dataAddress),{},(_objectSpread2={},_defineProperty(_objectSpread2,e.target.name,e.target.value.replace(/[^\\w\\s]/gi,'').trim()),_defineProperty(_objectSpread2,\"mpan\",''),_defineProperty(_objectSpread2,\"mprn\",''),_objectSpread2)));};var handleChangeTypeAddress=function handleChangeTypeAddress(){var door_typed=document.getElementById(\"door-number\").value;var addres_line1_typed=document.getElementById(\"line1\").value;var city_typed=document.getElementById(\"city\").value;// Validation for Typeaddress\nif(door_typed!==''&&addres_line1_typed!==''&&city_typed!==''){// Hidde message\nupdateError(false);}};// Send Add address to CustomerData \nvar sendAddress=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dataAddress){var door_typed,addres_line1_typed,city_typed,doornumberValidate,addressValidate,cityValidate,ecoes_api,postcodeParameters,responseECOESMPAN,mpan_core,detailsParameters,responseECOESDetails,MPANDetails,postcode_unformatted,postcode_unformatted_no_space,postcode_formated,first_two,last_three,first_three,_last_three,first_four,_last_three2,xoserve_api,responseXOSERVE,mprn_core,postcode_formatted,doornumber_formatted,uid,docRef,getCustomerData,customer,customerData,customerAddres,_MPANDetails3,dataGas,_doornumber,_addressline,_addressline2,_city,_postcode,meter_type,meter_mechanism_code,company_name_es,mpan_fetched,company_name_gs,mprn_fetched;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:door_typed=document.getElementById(\"door-number\").value;addres_line1_typed=document.getElementById(\"line1\").value;city_typed=document.getElementById(\"city\").value;// Validation for type address section\nif(!(door_typed===''||door_typed===undefined||addres_line1_typed===''||addres_line1_typed===undefined||city_typed===''||city_typed===undefined)){_context3.next=8;break;}updateError(true);return _context3.abrupt(\"return\");case 8:updateError(false);case 9:// Show Overlay\nupdateShowOverlay(true);// Values to validate\ndoornumberValidate=dataAddress.doornumber.replace(/[^\\w\\s]/gi,'').trim();addressValidate=dataAddress.addressline1.replace(/[^\\w\\s]/gi,'').trim();cityValidate=dataAddress.city.replace(/[^\\w\\s]/gi,'').trim();if(!(doornumberValidate===''||doornumberValidate===undefined||addressValidate===''||addressValidate===undefined||cityValidate===''||cityValidate===undefined)){_context3.next=17;break;}// Validation failed\nupdateError(true);_context3.next=77;break;case 17:/** -- ECOES API -- */ // ecoes_api\necoes_api=process.env.REACT_APP_ECOES_API;// Body parameters\npostcodeParameters={\"Authentication\":{\"Key\":ecoes_api},\"ParameterSets\":[{\"Parameters\":[{\"Key\":\"Postcode\",\"Value\":postcodeValue.replace(/[^\\w\\s]/gi,'').trim()},{\"Key\":\"BuildingNumber\",\"Value\":doornumberValidate}]}]};// Response ECOES MPAN\n_context3.next=21;return fetch('https://cors-anywhere.herokuapp.com/https://www.ecoes.co.uk/WebServices/Trial/ECOESAPI.svc/RESTful/JSON/SearchUtilityAddress',{method:'POST',body:JSON.stringify(postcodeParameters),headers:{'Content-Type':'application/json'}}).then(function(response){if(response.status===200){return response.json();}else{return console.error('An error ocurred fetching to ECOES SearchUtilityAddress');}}).then(function(response){// Error response\nvar error_response=response.Results[0].Errors.length;// Check values and return \n// Check values and return \nif(error_response>=1){var NA='NA';return NA;}else{// Successful response\nvar successful_response=response.Results[0].UtilityAddressMatches[0].AddressDetails[0].Value;return successful_response;}}).catch(function(error){return console.error(\"Catch an error fetching to ECOES SearchUtilityAddress \".concat(error));});case 21:responseECOESMPAN=_context3.sent;// MPAN value\nmpan_core='';if(responseECOESMPAN!==\"NA\"&&responseECOESMPAN!==undefined){mpan_core=responseECOESMPAN.replace(/[^\\w\\s]/gi,'').trim();}else{mpan_core='';}//If we get a MPAN value call ECOES Details - Conditional\nif(!(mpan_core!=='')){_context3.next=31;break;}/**-- Response ECOES DETAILS by MPAN--  */ // Body parameters\ndetailsParameters={\"Authentication\":{\"Key\":ecoes_api},\"ParameterSets\":[{\"Parameters\":[{\"Key\":\"MPAN\",\"Value\":mpan_core}]}]};_context3.next=28;return fetch('https://cors-anywhere.herokuapp.com/https://www.ecoes.co.uk/WebServices/Trial/ECOESAPI.svc/RESTful/JSON/GetTechnicalDetailsByMpan',{method:'POST',body:JSON.stringify(detailsParameters),headers:{'Content-Type':'application/json'}}).then(function(response){if(response.status===200){return response.json();}else{return console.error('An error ocurred fetching to GetTechnicalDetailsByMpan');}}).then(function(response){if(response!==undefined){// Error response\nvar error_response=response.Results[0].Errors.length;// Check values and return \n// Check values and return \nif(error_response>=1){// Electricity Infomartion values\nvar MPANDetails={mpan_core:'',meter_serial_number:'',meter_type:'',supplier_mpid:''};// Update the state\n// Update the state\nupdateElectricityInformation(_objectSpread(_objectSpread({},electricityInformation),{},{MPANDetails:MPANDetails}));}else{// Extract the values from the response\nvar meter_serial_number=response.Results[0].UtilityMatches[0].Meters[0].MeterDetails[1].Value;var meter_type=response.Results[0].UtilityMatches[0].Meters[0].MeterDetails[2].Value;var supplier_mpid=response.Results[0].UtilityMatches[0].UtilityDetails[11].Value;// Assign values\n// Assign values\nvar _MPANDetails={mpan_core:mpan_core,meter_serial_number:meter_serial_number,meter_type:meter_type,supplier_mpid:supplier_mpid};// Update the state\n// Update the state\nupdateElectricityInformation(_objectSpread(_objectSpread({},electricityInformation),{},{MPANDetails:_MPANDetails}));}}else{// Electricity Infomartion values\nvar _MPANDetails2={mpan_core:'',meter_serial_number:'',meter_type:'',supplier_mpid:''};// Update the state\n// Update the state\nreturn updateElectricityInformation(_objectSpread(_objectSpread({},electricityInformation),{},{MPANDetails:_MPANDetails2}));}});case 28:responseECOESDetails=_context3.sent;_context3.next=33;break;case 31:// Electricity Infomartion values\nMPANDetails={mpan_core:'',meter_serial_number:'',meter_type:'',supplier_mpid:''};// Update the state\nupdateElectricityInformation(_objectSpread(_objectSpread({},electricityInformation),{},{MPANDetails:MPANDetails}));case 33:/**--Postcode structure */ // Postcode unformatted\npostcode_unformatted=postcode;// Postcode without spaces\npostcode_unformatted_no_space=postcode_unformatted.replace(/ /g,'');// Postcode formated\npostcode_formated='';// For a postcode structure AN-NAA\nif(postcode_unformatted_no_space.length===5){// First two chars \nfirst_two=postcode_unformatted_no_space.slice(0,2);// Last three chars\nlast_three=postcode_unformatted_no_space.slice(2,5);// Formated Postcode\npostcode_formated=first_two+' '+last_three;}// For a postcode structure ANN-NAA, AAN-NAA, ANA-NAA\nif(postcode_unformatted_no_space.length===6){// First three chars \nfirst_three=postcode_unformatted_no_space.slice(0,3);// Last three chars\n_last_three=postcode_unformatted_no_space.slice(3,6);// Formated Postcode\npostcode_formated=first_three+' '+_last_three;}// For a postcode structure AANN-NAA, AANA-NAA\nif(postcode_unformatted_no_space.length===7){// First three chars \nfirst_four=postcode_unformatted_no_space.slice(0,4);// Last three chars\n_last_three2=postcode_unformatted_no_space.slice(4,7);// Formated Postcode\npostcode_formated=first_four+' '+_last_three2;}/** -- XOSERVE API -- */ // xoserve_api\nxoserve_api=process.env.REACT_APP_XOSERVE_API;_context3.next=42;return fetch(\"https://cors-anywhere.herokuapp.com/https://xoserve.apimanagement.hana.ondemand.com:443/v1/switchdataTBB.svc?postcode='\".concat(postcode_formated,\"'&house_no='\").concat(doornumberValidate,\"'\"),{method:'GET',headers:{'Content-Type':'application/json','APIKey':xoserve_api}}).then(function(response){if(response.status===200){return response.json();}else{var _mprn_core='';updateGasInformation(_objectSpread(_objectSpread({},gasInformation),{},{dataGas:{mprn:'',meter_mechanism_code:'',current_supplier_id:'',gas_transport_id:''}}));console.error('An error ocurred fetching to Xoserve switchdataTBB');return _mprn_core;}}).then(function(response){// If exist information about the property \nvar success=response.hasOwnProperty('mprn');if(success===true){var dataGas=response.mprn[0];var _mprn_core2=response.mprn[0].mprn;updateGasInformation(_objectSpread(_objectSpread({},gasInformation),{},{dataGas:dataGas}));return _mprn_core2;}else{var _mprn_core3='';updateGasInformation(_objectSpread(_objectSpread({},gasInformation),{},{dataGas:{mprn:_mprn_core3,meter_mechanism_code:'',current_supplier_id:'',gas_transport_id:''}}));return _mprn_core3;}}).catch(function(error){return console.error(\"Catch an error fetching to Xoserve switchdataTBB: \".concat(error));});case 42:responseXOSERVE=_context3.sent;// MPRN value\nmprn_core=responseXOSERVE;if(mprn_core===undefined){mprn_core='';updateGasInformation(_objectSpread(_objectSpread({},gasInformation),{},{dataGas:{mprn:'',meter_mechanism_code:'',current_supplier_id:'',gas_transport_id:''}}));}postcode_formatted=dataAddress.postcode.replace(/\\s/g,'').trim().toLowerCase();doornumber_formatted=dataAddress.doornumber.replace(/\\s/g,'').trim().toLowerCase();uid=\"\".concat(postcode_formatted,\"-\").concat(doornumber_formatted);// Document ref\n_context3.next=50;return db.collection(\"customers\").doc(uid);case 50:docRef=_context3.sent;// // Fetching customer data\n// const getCustomerData = async () => docRef.get().then((doc) => {\n//   // If customer exist\n//   if (doc.exists) {\n//     return doc.data();\n//   }\n//   return;\n// });\n// Fetching customer data\ngetCustomerData=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:return _context2.abrupt(\"return\",docRef.get().then(function(doc){// If customer exist\nif(doc.exists){return doc.data();}return;}).catch(function(error){console.log(error);console.log('Fetching customer data failed');return;}));case 1:case\"end\":return _context2.stop();}}},_callee2);}));return function getCustomerData(){return _ref4.apply(this,arguments);};}();// Execute getCustomerData\n_context3.next=54;return getCustomerData();case 54:customer=_context3.sent;if(!customer){_context3.next=67;break;}// customerData\ncustomerData=customer;// Customer Information\ncustomerAddres=customerData.customerAddres,_MPANDetails3=customerData.MPANDetails,dataGas=customerData.dataGas;// Customer Address\n_doornumber=customerAddres.doornumber,_addressline=customerAddres.addressline1,_addressline2=customerAddres.addressline2,_city=customerAddres.city,_postcode=customerAddres.postcode;// MPANDetails\nmeter_type=_MPANDetails3.meter_type;// dataGas\nmeter_mechanism_code=dataGas.meter_mechanism_code;// Electricity company name\ncompany_name_es=_MPANDetails3.company_name;// MPAN\nmpan_fetched=_MPANDetails3.mpan_core;// Gas company name\ncompany_name_gs=dataGas.company_name;// MPRN\nmprn_fetched=dataGas.mprn;// Customer Information - Sweet alert\nswal({className:'swal-modal_custom',buttons:{cancel:\"Cancel\",confirm:\"Use this information\"},content:/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:\"form-compare-details-info-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-compare-details-info\",children:[/*#__PURE__*/_jsx(IconContext.Provider,{value:{color:'#D338AE',size:'50px'},children:/*#__PURE__*/_jsx(ImProfile,{})}),/*#__PURE__*/_jsx(\"h3\",{style:{marginBottom:'0'},children:\"Data found for this customer\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-compare-details-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"form-compare-single-details\",children:/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'column',textAlign:'start'},children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Address:\",/*#__PURE__*/_jsx(\"span\",{children:\"\".concat(_addressline.toUpperCase()).concat(_addressline2===\"N/A\"?'':\", \".concat(_addressline2.toUpperCase()),\" \")})]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Flat number:\",/*#__PURE__*/_jsx(\"span\",{children:_doornumber.toUpperCase()})]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"City:\",/*#__PURE__*/_jsx(\"span\",{children:_city.toUpperCase()})]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Postcode:\",/*#__PURE__*/_jsx(\"span\",{children:_postcode.toUpperCase()})]})]})}),!!company_name_es||!!meter_type||!!mpan_fetched?/*#__PURE__*/_jsx(\"h3\",{children:\"Electricity Information\"}):null,!!company_name_es?/*#__PURE__*/_jsx(\"div\",{className:\"form-compare-single-details\",children:/*#__PURE__*/_jsxs(\"p\",{children:[\"Supplier: \",/*#__PURE__*/_jsx(\"span\",{children:company_name_es})]})}):null,!!meter_type?/*#__PURE__*/_jsx(\"div\",{className:\"form-compare-single-details\",children:/*#__PURE__*/_jsxs(\"p\",{children:[\"Meter Type: \",/*#__PURE__*/_jsx(\"span\",{children:meter_type})]})}):null,!!mpan_fetched?/*#__PURE__*/_jsx(\"div\",{className:\"form-compare-single-details\",children:/*#__PURE__*/_jsxs(\"p\",{children:[\"MPAN: \",/*#__PURE__*/_jsx(\"span\",{children:mpan_fetched})]})}):null,!!company_name_gs||!!meter_mechanism_code||!!mprn_fetched?/*#__PURE__*/_jsx(\"h3\",{children:\"Gas Information\"}):null,!!company_name_gs?/*#__PURE__*/_jsx(\"div\",{className:\"form-compare-single-details\",children:/*#__PURE__*/_jsxs(\"p\",{children:[\"Supplier: \",/*#__PURE__*/_jsx(\"span\",{children:company_name_gs})]})}):null,!!meter_mechanism_code?/*#__PURE__*/_jsx(\"div\",{className:\"form-compare-single-details\",children:/*#__PURE__*/_jsxs(\"p\",{children:[\"Meter Type: \",/*#__PURE__*/_jsx(\"span\",{children:meter_mechanism_code})]})}):null,!!mprn_fetched?/*#__PURE__*/_jsx(\"div\",{className:\"form-compare-single-details\",children:/*#__PURE__*/_jsxs(\"p\",{children:[\"MPAN: \",/*#__PURE__*/_jsx(\"span\",{children:mprn_fetched})]})}):null]})]})})})}).then(function(result){if(result!==true){// postcode_formatted\nvar _postcode_formatted=dataAddress.postcode.replace(/\\s/g,'').trim().toLowerCase();// doornumber_formatted\nvar _doornumber_formatted=dataAddress.doornumber.replace(/\\s/g,'').trim().toLowerCase();// uid\nvar _uid=\"\".concat(_postcode_formatted,\"-\").concat(_doornumber_formatted);// Update firebase customer\ndb.collection(\"customers\").doc(_uid).set({created:firebase.firestore.FieldValue.serverTimestamp(),step:1,customerAddres:{doornumber:dataAddress.doornumber?dataAddress.doornumber:'',addressline1:dataAddress.addressline1?dataAddress.addressline1:'',addressline2:dataAddress.addressline2?dataAddress.addressline2:'',city:dataAddress.city?dataAddress.city:'',postcode:dataAddress.postcode?dataAddress.postcode:'',mpan:mpan_core?mpan_core:'',mprn:mprn_core?mprn_core:''},MPANDetails:{mpan_core:'',meter_serial_number:'',meter_type:'',supplier_mpid:'',company_name:''},dataGas:{mprn:'',meter_mechanism_code:'',current_supplier_id:'',gas_transport_id:'',company_name:''}});// Validation successful\nupdateError(false);// Update data\nupdateCustomerAddress(_objectSpread(_objectSpread({},dataAddress),{},{mpan:mpan_core,mprn:mprn_core}));// Update progress bar\nupdateProgressBar(_objectSpread(_objectSpread({},progressBar),{},{step:2}));// Hidde Form Address\nupdateShowFormAddres(false);// Show Form Fuel type\nupdateShowFomrFuelType(true);// Hidde Overlay\nupdateShowOverlay(false);console.log('Data was sent successfully - From cancel alert');console.log('Update customers in firebse if it is necessary');return;}console.log('Data was sent successfully - Using DB');return customerStep(customerData);}).catch(function(error){// Update firebase customer\ndb.collection(\"customers\").doc(uid).set({created:firebase.firestore.FieldValue.serverTimestamp(),step:1,customerAddres:{doornumber:dataAddress.doornumber?dataAddress.doornumber:'',addressline1:dataAddress.addressline1?dataAddress.addressline1:'',addressline2:dataAddress.addressline2?dataAddress.addressline2:'',city:dataAddress.city?dataAddress.city:'',postcode:dataAddress.postcode?dataAddress.postcode:'',mpan:mpan_core?mpan_core:'',mprn:mprn_core?mprn_core:''},MPANDetails:{mpan_core:'',meter_serial_number:'',meter_type:'',supplier_mpid:'',company_name:''},dataGas:{mprn:'',meter_mechanism_code:'',current_supplier_id:'',gas_transport_id:'',company_name:''}});console.log(error);// Validation successful\nupdateError(false);// Update data\nupdateCustomerAddress(_objectSpread(_objectSpread({},dataAddress),{},{mpan:mpan_core,mprn:mprn_core}));// Update progress bar\nupdateProgressBar(_objectSpread(_objectSpread({},progressBar),{},{step:2}));// Hidde Form Address\nupdateShowFormAddres(false);// Show Form Fuel type\nupdateShowFomrFuelType(true);// Hidde Overlay\nupdateShowOverlay(false);console.log('Data was sent successfully - From error');console.log('Update customers in firebse if it is necessary');return;});// End process\nreturn _context3.abrupt(\"return\");case 67:// Create customer in firebase\nupdateCreateCustomer(true);// Validation successful\nupdateError(false);// Update data\nupdateCustomerAddress(_objectSpread(_objectSpread({},dataAddress),{},{mpan:mpan_core,mprn:mprn_core}));// Update progress bar\nupdateProgressBar(_objectSpread(_objectSpread({},progressBar),{},{step:2}));// Hidde Form Address\nupdateShowFormAddres(false);// Show Form Fuel type\nupdateShowFomrFuelType(true);// Hidde Overlay\nupdateShowOverlay(false);console.log('Data was sent successfully - No user found');console.log('Create a new customer in firebase');// End process\nreturn _context3.abrupt(\"return\");case 77:case\"end\":return _context3.stop();}}},_callee3);}));return function sendAddress(_x){return _ref3.apply(this,arguments);};}();/** --  Listener to create a customer in firebase -- */useEffect(function(){_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var postcode_formatted,doornumber_formatted,uid;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:if(!createCustomer){_context4.next=6;break;}// postcode_formatted\npostcode_formatted=dataAddress.postcode.replace(/\\s/g,'').trim().toLowerCase();// doornumber_formatted\ndoornumber_formatted=dataAddress.doornumber.replace(/\\s/g,'').trim().toLowerCase();// uid\nuid=\"\".concat(postcode_formatted,\"-\").concat(doornumber_formatted);// Firebase\n_context4.next=6;return db.collection(\"customers\").doc(uid).set({created:firebase.firestore.FieldValue.serverTimestamp(),step:1,customerAddres:{doornumber:dataAddress.doornumber?dataAddress.doornumber:'',addressline1:dataAddress.addressline1?dataAddress.addressline1:'',addressline2:dataAddress.addressline2?dataAddress.addressline2:'',city:dataAddress.city?dataAddress.city:'',postcode:dataAddress.postcode?dataAddress.postcode:'',mpan:electricityInformation.MPANDetails.mpan_core?electricityInformation.MPANDetails.mpan_core:'',mprn:gasInformation.dataGas.mprn?gasInformation.dataGas.mprn:''},MPANDetails:{meter_serial_number:electricityInformation.MPANDetails.meter_serial_number?electricityInformation.MPANDetails.meter_serial_number:'',meter_type:electricityInformation.MPANDetails.meter_type?electricityInformation.MPANDetails.meter_type:'',mpan_core:electricityInformation.MPANDetails.mpan_core?electricityInformation.MPANDetails.mpan_core:'',supplier_mpid:electricityInformation.MPANDetails.supplier_mpid?electricityInformation.MPANDetails.supplier_mpid:''},dataGas:{mprn:gasInformation.dataGas.mprn?gasInformation.dataGas.mprn:'',meter_mechanism_code:gasInformation.dataGas.meter_mechanism_code?gasInformation.dataGas.meter_mechanism_code:'',current_supplier_id:gasInformation.dataGas.current_supplier_id?gasInformation.dataGas.current_supplier_id:'',gas_transport_id:gasInformation.dataGas.gas_transport_id?gasInformation.dataGas.gas_transport_id:''}});case 6:case\"end\":return _context4.stop();}}},_callee4);}))();},[createCustomer]);// Go back to postcode\nvar goToPostcode=function goToPostcode(e){e.preventDefault();// Hidde Form Address\nupdateShowFormAddres(false);// Show Postcode\nupdateShowFormPostCode(true);// Update progress bar\nupdateProgressBar(_objectSpread(_objectSpread({},progressBar),{},{step:0}));};// Address is not listed\nvar type_address=function type_address(e){e.preventDefault();// Update data address \nupdateDataAddress(_objectSpread(_objectSpread({},dataAddress),{},{doornumber:'',addressline1:'',addressline2:'',city:'',// postcode: '',\nmpan:'',mprn:''}));// Cleaning states\nupdateElectricityInformation({});updateGasInformation({});updateAddress('');updateShowTypeAddres(false);updateError(false);// Reset form\nvar reset_doornumber=document.getElementById('door-number');var reset_line1=document.getElementById('line1');var reset_line2=document.getElementById('line2');var reset_city=document.getElementById('city');if(reset_doornumber!==null&&reset_line1!==null&&reset_line2!==null&&reset_city!==null){reset_doornumber.value='';reset_line1.value='';reset_line2.value='';reset_city.value='';}};// HandleChangeSelect\nvar handleChangeSelect=function handleChangeSelect(e){e.preventDefault();// Update states\nupdateShowTypeAddres(true);updateDataAddress(_objectSpread(_objectSpread({},dataAddress),{},{doornumber:'',addressline1:'',addressline2:'',city:'',// postcode: '',\nmpan:'',mprn:''}));};return/*#__PURE__*/_jsx(_Fragment,{children:showTypeAddress?address===\"\"?/*#__PURE__*/_jsx(\"section\",{className:\"form-address-section\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-address-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-address-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-address\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Select your addres from the below\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Having the correct address is key to ensuring we select the correct MPAN / MRPN for the customer's address. Id the customer's address is not present in the list below, we must enter it manually and request the customers MPAN / MPRN to enable successful switch.\"})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(SelectAddress,{})}),/*#__PURE__*/_jsx(\"div\",{className:\"form-address-manually-btn\",children:/*#__PURE__*/_jsx(\"button\",{\"data-cy\":\"addr-empty\",onClick:function onClick(e){return type_address(e);},children:\"My address isn't listed\"})}),error===true?/*#__PURE__*/_jsx(Error,{message:'Please enter an address'}):null,/*#__PURE__*/_jsxs(\"div\",{className:\"form-address-btn-container\",children:[/*#__PURE__*/_jsxs(\"button\",{className:\"form-address-btn btn-back\",onClick:goToPostcode,children:[/*#__PURE__*/_jsx(IconContext.Provider,{value:{color:'#D338AE',size:'35px'},children:/*#__PURE__*/_jsx(IoMdArrowDropleft,{className:\"icon-back\"})}),\"Go back\"]}),/*#__PURE__*/_jsxs(\"button\",{\"data-cy\":\"addr-noselected\",className:\"form-address-btn btn-next\",onClick:function onClick(){return address===''?updateError(true):null;},children:[\"Continue\",/*#__PURE__*/_jsx(IconContext.Provider,{value:{color:'#FFF',size:'35px'},children:/*#__PURE__*/_jsx(IoMdArrowDropright,{className:\"icon-next\"})})]})]})]}),showScript?/*#__PURE__*/_jsxs(\"div\",{className:\"helper-address\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"script-address\",children:/*#__PURE__*/_jsx(FormScript,{step:2})}),/*#__PURE__*/_jsx(\"div\",{className:\"assistant-address-custom\",children:/*#__PURE__*/_jsx(FormAssistant,{tips:1})})]}):/*#__PURE__*/_jsx(\"div\",{style:{width:'100%'},children:/*#__PURE__*/_jsx(\"div\",{className:\"assistant-address\",children:/*#__PURE__*/_jsx(FormAssistant,{tips:1})})})]})}):/*#__PURE__*/_jsx(\"section\",{className:\"form-address-section\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-address-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-address-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-address\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Select your addres from the below\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Having the correct address is key to ensuring we select the correct MPAN / MRPN for the customer's address. Id the customer's address is not present in the list below, we must enter it manually and request the customers MPAN / MPRN to enable successful switch.\"})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(SelectAddress,{})}),/*#__PURE__*/_jsx(\"div\",{className:\"form-address-manually-btn\",children:/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(e){return type_address(e);},className:focusAnimation?'animate__animated animate__headShake':'',children:\"My address isn't listed\"})}),/*#__PURE__*/_jsx(\"form\",{className:\"form-address-input-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-address-input-content\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Address Information\"}),error===true?/*#__PURE__*/_jsx(Error,{message:'Please enter an address'}):null,/*#__PURE__*/_jsxs(\"div\",{className:\"form-address-input\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Door number\"}),/*#__PURE__*/_jsx(\"div\",{onClick:function onClick(){return setFocusAnimation(!focusAnimation);},children:/*#__PURE__*/_jsx(\"input\",{id:\"door-number\",name:\"doornumber\",type:\"text\",value:dataAddress.doornumber||'',disabled:true})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-address-input\",style:{position:'relative'},children:[/*#__PURE__*/_jsx(\"label\",{children:\"Address Line 1\"}),/*#__PURE__*/_jsx(\"div\",{onClick:function onClick(){return setFocusAnimation(!focusAnimation);},children:/*#__PURE__*/_jsx(\"input\",{id:\"line1\",name:\"addressline1\",type:\"text\",value:dataAddress.addressline1||'',disabled:true})}),/*#__PURE__*/_jsx(\"div\",{className:\"form-address-tooltip\",children:dataAddress.addressline1})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-address-input\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Address line 2 (optional)\"}),/*#__PURE__*/_jsx(\"div\",{onClick:function onClick(){return setFocusAnimation(!focusAnimation);},children:/*#__PURE__*/_jsx(\"input\",{id:\"line2\",name:\"addressline2\",type:\"text\",value:dataAddress.addressline2||'',disabled:true})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-address-input\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"City\"}),/*#__PURE__*/_jsx(\"div\",{onClick:function onClick(){return setFocusAnimation(!focusAnimation);},children:/*#__PURE__*/_jsx(\"input\",{id:\"city\",name:\"city\",type:\"text\",value:dataAddress.city||'',disabled:true})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-address-input\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Postcode\"}),/*#__PURE__*/_jsx(\"div\",{onClick:function onClick(){return setFocusAnimation(!focusAnimation);},children:/*#__PURE__*/_jsx(\"input\",{id:\"postcode\",name:\"postcode\",type:\"text\",value:dataAddress.postcode||'',disabled:true})})]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-address-btn-container\",children:[/*#__PURE__*/_jsxs(\"button\",{className:\"form-address-btn btn-back\",onClick:goToPostcode,children:[/*#__PURE__*/_jsx(IconContext.Provider,{value:{color:'#D338AE',size:'35px'},children:/*#__PURE__*/_jsx(IoMdArrowDropleft,{className:\"icon-back\"})}),\"Go back\"]}),/*#__PURE__*/_jsxs(\"button\",{className:\"form-address-btn btn-next\",onClick:function onClick(e){return e.preventDefault(sendAddress(dataAddress));},children:[\"Continue\",/*#__PURE__*/_jsx(IconContext.Provider,{value:{color:'#FFF',size:'35px'},children:/*#__PURE__*/_jsx(IoMdArrowDropright,{className:\"icon-next\"})})]})]})]}),showScript?/*#__PURE__*/_jsxs(\"div\",{className:\"helper-address\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"script-address\",children:/*#__PURE__*/_jsx(FormScript,{step:2})}),/*#__PURE__*/_jsx(\"div\",{className:\"assistant-address-custom\",children:/*#__PURE__*/_jsx(FormAssistant,{tips:1})})]}):/*#__PURE__*/_jsx(\"div\",{style:{width:'100%'},children:/*#__PURE__*/_jsx(\"div\",{className:\"assistant-address\",children:/*#__PURE__*/_jsx(FormAssistant,{tips:1})})})]})}):/*#__PURE__*/_jsx(\"section\",{className:\"form-address-section\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-address-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-address-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-address\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Select your addres from the below\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Having the correct address is key to ensuring we select the correct MPAN / MRPN for the customer's address. Id the customer's address is not present in the list below, we must enter it manually and request the customers MPAN / MPRN to enable successful switch.\"})]}),/*#__PURE__*/_jsx(\"div\",{onChange:function onChange(e){return handleChangeSelect(e);},children:/*#__PURE__*/_jsx(SelectAddress,{})}),/*#__PURE__*/_jsx(\"div\",{className:\"form-address-manually-btn\",children:/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(e){return type_address(e);},children:\"My address isn't listed\"})}),/*#__PURE__*/_jsx(\"form\",{className:\"form-address-input-container\",onChange:function onChange(){return handleChangeTypeAddress();},children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-address-input-content\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Type address manually\"}),error===true?/*#__PURE__*/_jsx(Error,{message:'Please enter an address'}):null,/*#__PURE__*/_jsxs(\"div\",{className:\"form-address-input\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Door number\"}),/*#__PURE__*/_jsx(\"input\",{id:\"door-number\",type:\"text\",value:dataAddress.doornumber||'',onChange:function onChange(e){return handleChange(e);},name:\"doornumber\",\"data-cy\":\"door-input\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-address-input\",style:{position:'relative'},children:[/*#__PURE__*/_jsx(\"label\",{children:\"Address Line 1\"}),/*#__PURE__*/_jsx(\"input\",{id:\"line1\",type:\"text\",value:dataAddress.addressline1||'',onChange:function onChange(e){return handleChange(e);},name:\"addressline1\",\"data-cy\":\"addr1-input\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-address-input\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Address line 2 (optional)\"}),/*#__PURE__*/_jsx(\"input\",{id:\"line2\",type:\"text\",value:dataAddress.addressline2||'',onChange:function onChange(e){return handleChange(e);},name:\"addressline2\",\"data-cy\":\"addr2-input\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-address-input\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"City\"}),/*#__PURE__*/_jsx(\"input\",{id:\"city\",type:\"text\",value:dataAddress.city||'',onChange:function onChange(e){return handleChange(e);},name:\"city\",\"data-cy\":\"city-input\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-address-input\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Postcode\"}),/*#__PURE__*/_jsx(\"input\",{id:\"postcode\",type:\"text\",value:postcodeValue,onChange:function onChange(e){return handleChange(e);},name:\"postcode\",disabled:true})]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-address-btn-container\",children:[/*#__PURE__*/_jsxs(\"button\",{className:\"form-address-btn btn-back\",onClick:goToPostcode,children:[/*#__PURE__*/_jsx(IconContext.Provider,{value:{color:'#D338AE',size:'35px'},children:/*#__PURE__*/_jsx(IoMdArrowDropleft,{className:\"icon-back\"})}),\"Go back\"]}),/*#__PURE__*/_jsxs(\"button\",{\"data-cy\":\"addrtyped-continue\",className:\"form-address-btn btn-next\",onClick:function onClick(e){return e.preventDefault(sendAddress(dataAddress));},children:[\"Continue\",/*#__PURE__*/_jsx(IconContext.Provider,{value:{color:'#FFF',size:'35px'},children:/*#__PURE__*/_jsx(IoMdArrowDropright,{className:\"icon-next\"})})]})]})]}),showScript?/*#__PURE__*/_jsxs(\"div\",{className:\"helper-address\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"script-address\",children:/*#__PURE__*/_jsx(FormScript,{step:2})}),/*#__PURE__*/_jsx(\"div\",{className:\"assistant-address-custom\",children:/*#__PURE__*/_jsx(FormAssistant,{tips:1})})]}):/*#__PURE__*/_jsx(\"div\",{style:{width:'100%'},children:/*#__PURE__*/_jsx(\"div\",{className:\"assistant-address\",children:/*#__PURE__*/_jsx(FormAssistant,{tips:1})})})]})})});}export default FormAddress;","map":{"version":3,"sources":["/Users/juanlugo/Desktop/sp-firebase/src/components/FormCards/FormAddress/FormAddress.jsx"],"names":["React","useState","useEffect","db","firebase","swal","IconContext","IoMdArrowDropleft","IoMdArrowDropright","ImProfile","useAddress","FormScript","Error","FormAssistant","FormAddress","postcodeValue","gasInformation","electricityInformation","progressBar","showScript","customerStep","updateCustomerAddress","updateGasInformation","updateElectricityInformation","updateShowFormPostCode","updateShowFormAddres","updateShowOverlay","updateProgressBar","updateShowFomrFuelType","doornumber","addressline1","addressline2","city","postcode","mpan","mprn","dataAddress","updateDataAddress","addressList","updateAddressList","address","SelectAddress","updateAddress","showTypeAddress","updateShowTypeAddres","error","updateError","createCustomer","updateCreateCustomer","focusAnimation","setFocusAnimation","scroll_to","element","document","querySelector","scrollIntoView","behavior","block","inline","window","scrollTo","top","fetchAPI","key","process","env","REACT_APP_ADDRESS_API","url","replace","toLowerCase","fetch","method","then","response","status","json","button","icon","content","catch","console","response_postcode","undefined","data","addresses","forEach","item","i","id","selectedValue","log","doornumberValue","formatted_address","addressline1Value","toString","addressline2Value","cityValue","town_or_city","mpanValue","mprnValue","handleChange","e","target","name","value","trim","handleChangeTypeAddress","door_typed","getElementById","addres_line1_typed","city_typed","sendAddress","doornumberValidate","addressValidate","cityValidate","ecoes_api","REACT_APP_ECOES_API","postcodeParameters","body","JSON","stringify","headers","error_response","Results","Errors","length","NA","successful_response","UtilityAddressMatches","AddressDetails","Value","responseECOESMPAN","mpan_core","detailsParameters","MPANDetails","meter_serial_number","meter_type","supplier_mpid","UtilityMatches","Meters","MeterDetails","UtilityDetails","responseECOESDetails","postcode_unformatted","postcode_unformatted_no_space","postcode_formated","first_two","slice","last_three","first_three","first_four","xoserve_api","REACT_APP_XOSERVE_API","mprn_core","dataGas","meter_mechanism_code","current_supplier_id","gas_transport_id","success","hasOwnProperty","responseXOSERVE","postcode_formatted","doornumber_formatted","uid","collection","doc","docRef","getCustomerData","get","exists","customer","customerData","customerAddres","company_name_es","company_name","mpan_fetched","company_name_gs","mprn_fetched","className","buttons","cancel","confirm","color","size","marginBottom","display","flexDirection","textAlign","toUpperCase","result","set","created","firestore","FieldValue","serverTimestamp","step","goToPostcode","preventDefault","type_address","reset_doornumber","reset_line1","reset_line2","reset_city","handleChangeSelect","width","position"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n// Styles\nimport \"./FormAddress.css\";\n// Firebase\nimport { db } from \"../../../firebase/firebase\";\nimport firebase from \"firebase/app\";\n// Swal\nimport swal from '@sweetalert/with-react';\n// Icons\nimport { IconContext } from \"react-icons\";\nimport { IoMdArrowDropleft, IoMdArrowDropright } from 'react-icons/io';\nimport { ImProfile } from 'react-icons/im';\n\n// Hooks\nimport useAddress from \"../../../hooks/useAddress/useAddress\";\n\n// Components\nimport FormScript from '../FormScript/FormScript';\nimport Error from '../../Error/Error';\nimport FormAssistant from \"../FormAssistant/FormAssistant\";\n\nfunction FormAddress({ postcodeValue, gasInformation, electricityInformation, progressBar, showScript, customerStep, updateCustomerAddress, updateGasInformation, updateElectricityInformation, updateShowFormPostCode, updateShowFormAddres, updateShowOverlay, updateProgressBar, updateShowFomrFuelType }) {\n  /** STATES */\n  // Customer Address JSON\n  const [dataAddress, updateDataAddress] = useState({\n    doornumber: '',\n    addressline1: '',\n    addressline2: '',\n    city: '',\n    postcode: '',\n    mpan: '',\n    mprn: ''\n  });\n\n  // Customer Address List\n  const [addressList, updateAddressList] = useState([]);\n\n  // Hook useAddress\n  const [address, SelectAddress, updateAddress] = useAddress(\n    \"\", //Label\n    \"\", //Initial State\n    addressList //Array(response)\n  );\n\n  // Show Address type section\n  const [showTypeAddress, updateShowTypeAddres] = useState(true);\n\n  // Error State\n  const [error, updateError] = useState(false);\n\n  // Create customer in firebase\n  const [createCustomer, updateCreateCustomer] = useState(false);\n\n  // Button focus animation\n  const [focusAnimation, setFocusAnimation] = useState(false);\n\n  /** FUNCTIONS */\n\n  // Error smooth scroll\n  useEffect(() => {\n    if (error) {\n      const scroll_to = () => {\n        var element = document.querySelector(\"#error\");\n        // smooth scroll to element and align it at the bottom\n        element.scrollIntoView({ behavior: \"smooth\", block: \"end\", inline: \"end\" });\n      }\n\n      scroll_to()\n    }\n  }, [error]);\n\n  // Scroll to top\n  useEffect(() => {\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  }, []);\n\n  // useEffect to fetch the data from API\n  useEffect(() => {\n\n    // const address_api = process.env.REACT_APP_ADDRESS_API;\n\n    // Fetching Data\n    const fetchAPI = async () => {\n      // const url = `https://ws.postcoder.com/pcw/${address_api}/address/uk/${postcodeValue.replace(/ /g, '').toLowerCase()}`;\n      const key = process.env.REACT_APP_ADDRESS_API;\n      const url = `https://api.getAddress.io/find/${postcodeValue.replace(/ /g, '').toLowerCase()}?api-key=${key}&expand=true`;\n      const response_postcode = await fetch(url, {\n        method: 'GET'\n      }).then(function (response) {\n        if (response.status === 200) {\n          return response.json();\n        } else {\n          swal({\n            button: \"Ok\",\n            icon: \"info\",\n            content: (\n              <div className=\"swal-text-custom\">\n                <h1>Address not found</h1>\n                <p>\n                  Please enter the address manually\n                </p>\n              </div>\n            )\n          });\n          return;\n        }\n      }).then(function (response) {\n        return response;\n      }).catch(function (error) {\n        console.error(`Catch an error fetching to postcoder ${error}`);\n        swal({\n          button: \"Ok\",\n          icon: \"info\",\n          content: (\n            <div className=\"swal-text-custom\">\n              <h1>Address not found</h1>\n              <p>\n                Please enter the address manually\n              </p>\n            </div>\n          )\n        });\n        return;\n      });\n\n      if (response_postcode !== undefined) {\n\n        const data = response_postcode.addresses;\n\n        // Adding an ID\n        data.forEach((item, i) => {\n          item.id = i + 1;\n        });\n\n        if (addressList === []) {\n          return;\n        } else {\n          updateAddressList(data);\n        }\n      } else {\n        return;\n      }\n    }\n    // Execute Fetch API\n    fetchAPI();\n  }, []);\n\n  // Address Data\n  if (address !== '') {\n    // Selected Value\n    const selectedValue = addressList[address - 1];\n\n    console.log(selectedValue)\n\n    // Separated Values\n    var doornumberValue = selectedValue.formatted_address[0].replace(/[^0-9.]/g, '');\n    var addressline1Value = selectedValue.formatted_address.toString().replace(/,*,/g,',').replace(/,/g, \", \");\n    var addressline2Value = '';\n    var cityValue = selectedValue.town_or_city;\n    var mpanValue = '';\n    var mprnValue = '';\n\n    if (doornumberValue === undefined || doornumberValue === '') {\n      doornumberValue = \"N/A\";\n    } else {\n      doornumberValue = selectedValue.formatted_address[0].replace(/[^0-9.]/g, '');\n    }\n\n    if (addressline1Value === undefined || addressline1Value === '') {\n      addressline1Value = \"N/A\";\n    } else {\n      addressline1Value = selectedValue.formatted_address.toString().replace(/,*,/g,',').replace(/,/g, \", \");\n    }\n\n    if (addressline2Value === undefined || addressline2Value === '') {\n      addressline2Value = \"N/A\";\n    } else {\n      addressline2Value = \"\";\n    }\n\n    if (cityValue === undefined || cityValue === '') {\n      cityValue = \"N/A\";\n    } else {\n      cityValue = selectedValue.town_or_city;\n    }\n\n    if (mpanValue === undefined || mpanValue === '') {\n      mpanValue = '';\n    } else {\n      mpanValue = '';\n    }\n\n    if (mprnValue === undefined || mprnValue === '') {\n      mprnValue = '';\n    } else {\n      mprnValue = '';\n    }\n  }\n\n  const doornumber = doornumberValue;\n  const addressline1 = addressline1Value;\n  const addressline2 = addressline2Value;\n  const city = cityValue;\n  const postcode = postcodeValue;\n  const mpan = mpanValue;\n  const mprn = mprnValue;\n\n  // useEffect to add the data to the state\n  useEffect(() => {\n    updateDataAddress({\n      ...dataAddress,\n      doornumber: doornumber,\n      addressline1: addressline1,\n      addressline2: addressline2,\n      city: city,\n      postcode: postcode,\n      mpan: mpan,\n      mprn: mprn\n    });\n\n    updateError(false);\n  }, [address]);\n\n  // Function that runs every time the user writes to the input\n  const handleChange = (e) => {\n    updateDataAddress({\n      ...dataAddress,\n      [e.target.name]: e.target.value.replace(/[^\\w\\s]/gi, '').trim(),\n      mpan: '',\n      mprn: ''\n    });\n  };\n\n  const handleChangeTypeAddress = () => {\n    const door_typed = document.getElementById(\"door-number\").value;\n    const addres_line1_typed = document.getElementById(\"line1\").value;\n    const city_typed = document.getElementById(\"city\").value;\n\n    // Validation for Typeaddress\n    if ((door_typed !== '') && (addres_line1_typed !== '') && (city_typed !== '')) {\n      // Hidde message\n      updateError(false);\n    }\n  }\n\n  // Send Add address to CustomerData \n  const sendAddress = async (dataAddress) => {\n\n    const door_typed = document.getElementById(\"door-number\").value;\n    const addres_line1_typed = document.getElementById(\"line1\").value;\n    const city_typed = document.getElementById(\"city\").value;\n\n    // Validation for type address section\n    if (((door_typed === '') || (door_typed === undefined)) || ((addres_line1_typed === '') || (addres_line1_typed === undefined)) || ((city_typed === '') || (city_typed === undefined))) {\n      updateError(true);\n      return;\n    } else {\n      updateError(false);\n    }\n\n    // Show Overlay\n    updateShowOverlay(true);\n\n    // Values to validate\n    const doornumberValidate = dataAddress.doornumber.replace(/[^\\w\\s]/gi, '').trim();\n    const addressValidate = dataAddress.addressline1.replace(/[^\\w\\s]/gi, '').trim();\n    const cityValidate = dataAddress.city.replace(/[^\\w\\s]/gi, '').trim();\n\n    if (doornumberValidate === '' || doornumberValidate === undefined || addressValidate === '' || addressValidate === undefined || cityValidate === '' || cityValidate === undefined) {\n      // Validation failed\n      updateError(true);\n    } else {\n      /** -- ECOES API -- */\n\n      // ecoes_api\n      const ecoes_api = process.env.REACT_APP_ECOES_API;\n\n      // Body parameters\n      const postcodeParameters = {\n        \"Authentication\": {\n          \"Key\": ecoes_api\n        },\n        \"ParameterSets\": [{\n          \"Parameters\": [\n            {\n              \"Key\": \"Postcode\",\n              \"Value\": postcodeValue.replace(/[^\\w\\s]/gi, '').trim()\n            },\n            {\n              \"Key\": \"BuildingNumber\",\n              \"Value\": doornumberValidate\n            }\n          ]\n        }]\n      }\n\n      // Response ECOES MPAN\n      const responseECOESMPAN = await fetch('https://cors-anywhere.herokuapp.com/https://www.ecoes.co.uk/WebServices/Trial/ECOESAPI.svc/RESTful/JSON/SearchUtilityAddress', {\n        method: 'POST',\n        body: JSON.stringify(postcodeParameters),\n        headers: {\n          'Content-Type': 'application/json'\n        },\n      }).then(function (response) {\n        if (response.status === 200) {\n          return response.json();\n        } else {\n          return console.error('An error ocurred fetching to ECOES SearchUtilityAddress');\n        }\n      }).then(function (response) {\n        // Error response\n        const error_response = response.Results[0].Errors.length;\n\n        // Check values and return \n        if (error_response >= 1) {\n          const NA = 'NA';\n          return NA;\n        } else {\n          // Successful response\n          const successful_response = response.Results[0].UtilityAddressMatches[0].AddressDetails[0].Value;\n          return successful_response;\n        }\n      }).catch(function (error) {\n\n        return console.error(`Catch an error fetching to ECOES SearchUtilityAddress ${error}`);\n      });\n\n      // MPAN value\n      let mpan_core = '';\n\n      if (responseECOESMPAN !== \"NA\" && responseECOESMPAN !== undefined) {\n        mpan_core = responseECOESMPAN.replace(/[^\\w\\s]/gi, '').trim();\n      } else {\n        mpan_core = '';\n      }\n\n      //If we get a MPAN value call ECOES Details - Conditional\n      if (mpan_core !== '') {\n        /**-- Response ECOES DETAILS by MPAN--  */\n        // Body parameters\n        const detailsParameters = {\n          \"Authentication\": {\n            \"Key\": ecoes_api\n          },\n          \"ParameterSets\": [{\n            \"Parameters\": [{\n              \"Key\": \"MPAN\",\n              \"Value\": mpan_core\n            }]\n          }]\n        }\n\n        const responseECOESDetails = await fetch('https://cors-anywhere.herokuapp.com/https://www.ecoes.co.uk/WebServices/Trial/ECOESAPI.svc/RESTful/JSON/GetTechnicalDetailsByMpan', {\n          method: 'POST',\n          body: JSON.stringify(detailsParameters),\n          headers: {\n            'Content-Type': 'application/json'\n          },\n        }).then(function (response) {\n          if (response.status === 200) {\n            return response.json();\n          } else {\n            return console.error('An error ocurred fetching to GetTechnicalDetailsByMpan');\n          }\n        }).then(function (response) {\n          if (response !== undefined) {\n            // Error response\n            const error_response = response.Results[0].Errors.length;\n            // Check values and return \n            if (error_response >= 1) {\n              // Electricity Infomartion values\n              const MPANDetails = {\n                mpan_core: '',\n                meter_serial_number: '',\n                meter_type: '',\n                supplier_mpid: ''\n              }\n\n              // Update the state\n              updateElectricityInformation({ ...electricityInformation, MPANDetails });\n            } else {\n              // Extract the values from the response\n              const meter_serial_number = response.Results[0].UtilityMatches[0].Meters[0].MeterDetails[1].Value;\n              const meter_type = response.Results[0].UtilityMatches[0].Meters[0].MeterDetails[2].Value;\n              const supplier_mpid = response.Results[0].UtilityMatches[0].UtilityDetails[11].Value;\n              // Assign values\n              const MPANDetails = {\n                mpan_core,\n                meter_serial_number,\n                meter_type,\n                supplier_mpid\n              }\n\n              // Update the state\n              updateElectricityInformation({ ...electricityInformation, MPANDetails });\n            }\n          } else {\n            // Electricity Infomartion values\n            const MPANDetails = {\n              mpan_core: '',\n              meter_serial_number: '',\n              meter_type: '',\n              supplier_mpid: ''\n            }\n            // Update the state\n            return updateElectricityInformation({ ...electricityInformation, MPANDetails });\n          }\n        });\n      } else {\n        // Electricity Infomartion values\n        const MPANDetails = {\n          mpan_core: '',\n          meter_serial_number: '',\n          meter_type: '',\n          supplier_mpid: ''\n        }\n        // Update the state\n        updateElectricityInformation({ ...electricityInformation, MPANDetails });\n      }\n\n      /**--Postcode structure */\n\n      // Postcode unformatted\n      let postcode_unformatted = postcode;\n      // Postcode without spaces\n      let postcode_unformatted_no_space = postcode_unformatted.replace(/ /g, '');\n      // Postcode formated\n      let postcode_formated = '';\n\n      // For a postcode structure AN-NAA\n      if (postcode_unformatted_no_space.length === 5) {\n        // First two chars \n        let first_two = postcode_unformatted_no_space.slice(0, 2);\n        // Last three chars\n        let last_three = postcode_unformatted_no_space.slice(2, 5);\n        // Formated Postcode\n        postcode_formated = first_two + ' ' + last_three;\n      }\n\n      // For a postcode structure ANN-NAA, AAN-NAA, ANA-NAA\n      if (postcode_unformatted_no_space.length === 6) {\n        // First three chars \n        let first_three = postcode_unformatted_no_space.slice(0, 3);\n        // Last three chars\n        let last_three = postcode_unformatted_no_space.slice(3, 6);\n        // Formated Postcode\n        postcode_formated = first_three + ' ' + last_three;\n      }\n\n      // For a postcode structure AANN-NAA, AANA-NAA\n      if (postcode_unformatted_no_space.length === 7) {\n        // First three chars \n        let first_four = postcode_unformatted_no_space.slice(0, 4);\n        // Last three chars\n        let last_three = postcode_unformatted_no_space.slice(4, 7);\n        // Formated Postcode\n        postcode_formated = first_four + ' ' + last_three;\n      }\n\n      /** -- XOSERVE API -- */\n\n      // xoserve_api\n      const xoserve_api = process.env.REACT_APP_XOSERVE_API;\n\n      const responseXOSERVE = await fetch(`https://cors-anywhere.herokuapp.com/https://xoserve.apimanagement.hana.ondemand.com:443/v1/switchdataTBB.svc?postcode='${postcode_formated}'&house_no='${doornumberValidate}'`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'APIKey': xoserve_api\n        },\n      }).then(function (response) {\n        if (response.status === 200) {\n          return response.json();\n        } else {\n          const mprn_core = '';\n          updateGasInformation({\n            ...gasInformation,\n            dataGas: {\n              mprn: '',\n              meter_mechanism_code: '',\n              current_supplier_id: '',\n              gas_transport_id: ''\n            }\n          });\n\n          console.error('An error ocurred fetching to Xoserve switchdataTBB');\n\n          return mprn_core;\n\n        }\n      }).then(function (response) {\n        // If exist information about the property \n        const success = response.hasOwnProperty('mprn');\n\n        if (success === true) {\n          const dataGas = response.mprn[0];\n          const mprn_core = response.mprn[0].mprn;\n          updateGasInformation({ ...gasInformation, dataGas });\n          return mprn_core;\n        } else {\n          const mprn_core = '';\n          updateGasInformation({\n            ...gasInformation,\n            dataGas: {\n              mprn: mprn_core,\n              meter_mechanism_code: '',\n              current_supplier_id: '',\n              gas_transport_id: ''\n            }\n          });\n          return mprn_core;\n        }\n      }).catch(function (error) {\n\n        return console.error(`Catch an error fetching to Xoserve switchdataTBB: ${error}`);\n      });\n\n      // MPRN value\n      let mprn_core = responseXOSERVE;\n\n      if (mprn_core === undefined) {\n        mprn_core = '';\n        updateGasInformation({\n          ...gasInformation,\n          dataGas: {\n            mprn: '',\n            meter_mechanism_code: '',\n            current_supplier_id: '',\n            gas_transport_id: ''\n          }\n        });\n      }\n\n      const postcode_formatted = dataAddress.postcode.replace(/\\s/g, '').trim().toLowerCase();\n      const doornumber_formatted = dataAddress.doornumber.replace(/\\s/g, '').trim().toLowerCase();\n\n      const uid = `${postcode_formatted}-${doornumber_formatted}`;\n\n      // Document ref\n      let docRef = await db.collection(\"customers\").doc(uid);\n\n      // // Fetching customer data\n      // const getCustomerData = async () => docRef.get().then((doc) => {\n      //   // If customer exist\n      //   if (doc.exists) {\n      //     return doc.data();\n      //   }\n      //   return;\n      // });\n\n      // Fetching customer data\n      const getCustomerData = async () => docRef.get().then((doc) => {\n        // If customer exist\n        if (doc.exists) {\n          return doc.data();\n        }\n        return;\n      }).catch((error) => {\n        console.log(error)\n        console.log('Fetching customer data failed');\n        return;\n      });\n\n      // Execute getCustomerData\n      let customer = await getCustomerData();\n\n      // Validate if customer exists\n      if (customer) {\n\n        // customerData\n        const customerData = customer;\n\n        // Customer Information\n        const { customerAddres, MPANDetails, dataGas } = customerData;\n\n        // Customer Address\n        const { doornumber, addressline1, addressline2, city, postcode } = customerAddres;\n\n        // MPANDetails\n        const { meter_type } = MPANDetails;\n\n        // dataGas\n        const { meter_mechanism_code } = dataGas;\n\n        // Electricity company name\n        const company_name_es = MPANDetails.company_name;\n        // MPAN\n        const mpan_fetched = MPANDetails.mpan_core;\n\n        // Gas company name\n        const company_name_gs = dataGas.company_name;\n        // MPRN\n        const mprn_fetched = dataGas.mprn;\n\n        // Customer Information - Sweet alert\n        swal({\n          className: 'swal-modal_custom',\n          buttons: {\n            cancel: \"Cancel\",\n            confirm: \"Use this information\"\n          },\n          content: (\n            <>\n              <div className=\"form-compare-details-info-container\">\n                <div className=\"form-compare-details-info\">\n\n                  <IconContext.Provider value={{ color: '#D338AE', size: '50px' }}>\n                    <ImProfile />\n                  </IconContext.Provider>\n\n                  <h3 style={{ marginBottom: '0' }}>Data found for this customer</h3>\n\n                  <div className=\"form-compare-details-container\">\n                    {/* Customer Address */}\n                    <div className=\"form-compare-single-details\">\n                      <div style={{ display: 'flex', flexDirection: 'column', textAlign: 'start' }}>\n                        <p>Address:<span>{`${addressline1.toUpperCase()}${addressline2 === \"N/A\" ? '' : `, ${addressline2.toUpperCase()}`} `}</span></p>\n                        <p>Flat number:<span>{doornumber.toUpperCase()}</span></p>\n                        <p>City:<span>{city.toUpperCase()}</span></p>\n                        <p>Postcode:<span>{postcode.toUpperCase()}</span></p>\n                      </div>\n                    </div>\n\n                    {/* -------- ELECTRICITY INFORMATION -------- */}\n\n                    {/* Title - Elictricity Information */}\n                    {(!!company_name_es) || (!!meter_type) || (!!mpan_fetched) ?\n                      (<h3>Electricity Information</h3>)\n                      :\n                      null}\n\n                    {/* Address - Elictricity Information */}\n                    {!!company_name_es ?\n                      (\n                        <div className=\"form-compare-single-details\">\n                          <p>Supplier: <span>{company_name_es}</span></p>\n                        </div>\n                      )\n                      :\n                      null\n                    }\n\n                    {/* Meter Type - Elictricity Information */}\n                    {!!meter_type ?\n                      (\n                        <div className=\"form-compare-single-details\">\n                          <p>Meter Type: <span>{meter_type}</span></p>\n                        </div>\n                      )\n                      :\n                      null\n                    }\n\n                    {/* Meter Type - Elictricity Information */}\n                    {!!mpan_fetched ?\n                      (\n                        <div className=\"form-compare-single-details\">\n                          <p>MPAN: <span>{mpan_fetched}</span></p>\n                        </div>\n                      )\n                      :\n                      null\n                    }\n\n                    {/* -------- GAS INFORMATION -------- */}\n\n                    {/* Title - Gas Information */}\n                    {(!!company_name_gs) || (!!meter_mechanism_code) || (!!mprn_fetched) ?\n                      (<h3>Gas Information</h3>)\n                      :\n                      null}\n\n                    {/* Address - Gas Information */}\n                    {!!company_name_gs ?\n                      (\n                        <div className=\"form-compare-single-details\">\n                          <p>Supplier: <span>{company_name_gs}</span></p>\n                        </div>\n                      )\n                      :\n                      null\n                    }\n\n                    {/* Meter Type - Gas Information */}\n                    {!!meter_mechanism_code ?\n                      (\n                        <div className=\"form-compare-single-details\">\n                          <p>Meter Type: <span>{meter_mechanism_code}</span></p>\n                        </div>\n                      )\n                      :\n                      null\n                    }\n\n                    {/* Meter Type - Gas Information */}\n                    {!!mprn_fetched ?\n                      (\n                        <div className=\"form-compare-single-details\">\n                          <p>MPAN: <span>{mprn_fetched}</span></p>\n                        </div>\n                      )\n                      :\n                      null\n                    }\n\n                  </div>\n                </div>\n              </div>\n            </>\n          )\n        }).then((result) => {\n\n          if (result !== true) {\n\n            // postcode_formatted\n            const postcode_formatted = dataAddress.postcode.replace(/\\s/g, '').trim().toLowerCase();\n            // doornumber_formatted\n            const doornumber_formatted = dataAddress.doornumber.replace(/\\s/g, '').trim().toLowerCase();\n            // uid\n            const uid = `${postcode_formatted}-${doornumber_formatted}`;\n\n            // Update firebase customer\n            db.collection(\"customers\").doc(uid).set({\n              created: firebase.firestore.FieldValue.serverTimestamp(),\n              step: 1,\n              customerAddres: {\n                doornumber: dataAddress.doornumber ? dataAddress.doornumber : '',\n                addressline1: dataAddress.addressline1 ? dataAddress.addressline1 : '',\n                addressline2: dataAddress.addressline2 ? dataAddress.addressline2 : '',\n                city: dataAddress.city ? dataAddress.city : '',\n                postcode: dataAddress.postcode ? dataAddress.postcode : '',\n                mpan: mpan_core ? mpan_core : '',\n                mprn: mprn_core ? mprn_core : ''\n              },\n              MPANDetails: {\n                mpan_core: '',\n                meter_serial_number: '',\n                meter_type: '',\n                supplier_mpid: '',\n                company_name: ''\n              },\n              dataGas: {\n                mprn: '',\n                meter_mechanism_code: '',\n                current_supplier_id: '',\n                gas_transport_id: '',\n                company_name: ''\n              }\n            });\n\n            // Validation successful\n            updateError(false);\n            // Update data\n            updateCustomerAddress({\n              ...dataAddress,\n              mpan: mpan_core,\n              mprn: mprn_core\n            });\n            // Update progress bar\n            updateProgressBar({ ...progressBar, step: 2 });\n            // Hidde Form Address\n            updateShowFormAddres(false);\n            // Show Form Fuel type\n            updateShowFomrFuelType(true);\n            // Hidde Overlay\n            updateShowOverlay(false);\n            console.log('Data was sent successfully - From cancel alert');\n            console.log('Update customers in firebse if it is necessary');\n\n            return;\n          }\n\n          console.log('Data was sent successfully - Using DB');\n          return customerStep(customerData);\n\n        }).catch((error) => {\n\n          // Update firebase customer\n          db.collection(\"customers\").doc(uid).set({\n            created: firebase.firestore.FieldValue.serverTimestamp(),\n            step: 1,\n            customerAddres: {\n              doornumber: dataAddress.doornumber ? dataAddress.doornumber : '',\n              addressline1: dataAddress.addressline1 ? dataAddress.addressline1 : '',\n              addressline2: dataAddress.addressline2 ? dataAddress.addressline2 : '',\n              city: dataAddress.city ? dataAddress.city : '',\n              postcode: dataAddress.postcode ? dataAddress.postcode : '',\n              mpan: mpan_core ? mpan_core : '',\n              mprn: mprn_core ? mprn_core : ''\n            },\n            MPANDetails: {\n              mpan_core: '',\n              meter_serial_number: '',\n              meter_type: '',\n              supplier_mpid: '',\n              company_name: ''\n            },\n            dataGas: {\n              mprn: '',\n              meter_mechanism_code: '',\n              current_supplier_id: '',\n              gas_transport_id: '',\n              company_name: ''\n            }\n          });\n\n          console.log(error);\n\n          // Validation successful\n          updateError(false);\n          // Update data\n          updateCustomerAddress({\n            ...dataAddress,\n            mpan: mpan_core,\n            mprn: mprn_core\n          });\n          // Update progress bar\n          updateProgressBar({ ...progressBar, step: 2 });\n          // Hidde Form Address\n          updateShowFormAddres(false);\n          // Show Form Fuel type\n          updateShowFomrFuelType(true);\n          // Hidde Overlay\n          updateShowOverlay(false);\n          console.log('Data was sent successfully - From error');\n          console.log('Update customers in firebse if it is necessary');\n          return;\n        });\n\n        // End process\n        return;\n      }\n\n      // Create customer in firebase\n      updateCreateCustomer(true);\n\n      // Validation successful\n      updateError(false);\n      // Update data\n      updateCustomerAddress({\n        ...dataAddress,\n        mpan: mpan_core,\n        mprn: mprn_core\n      });\n      // Update progress bar\n      updateProgressBar({ ...progressBar, step: 2 });\n      // Hidde Form Address\n      updateShowFormAddres(false);\n      // Show Form Fuel type\n      updateShowFomrFuelType(true);\n      // Hidde Overlay\n      updateShowOverlay(false);\n      console.log('Data was sent successfully - No user found');\n      console.log('Create a new customer in firebase');\n\n      // End process\n      return;\n    }\n  }\n\n  /** --  Listener to create a customer in firebase -- */\n  useEffect(() => {\n    (async () => {\n      // createCustomer\n      if (createCustomer) {\n        // postcode_formatted\n        const postcode_formatted = dataAddress.postcode.replace(/\\s/g, '').trim().toLowerCase();\n        // doornumber_formatted\n        const doornumber_formatted = dataAddress.doornumber.replace(/\\s/g, '').trim().toLowerCase();\n        // uid\n        const uid = `${postcode_formatted}-${doornumber_formatted}`;\n\n        // Firebase\n        await db.collection(\"customers\").doc(uid).set({\n          created: firebase.firestore.FieldValue.serverTimestamp(),\n          step: 1,\n          customerAddres: {\n            doornumber: dataAddress.doornumber ? dataAddress.doornumber : '',\n            addressline1: dataAddress.addressline1 ? dataAddress.addressline1 : '',\n            addressline2: dataAddress.addressline2 ? dataAddress.addressline2 : '',\n            city: dataAddress.city ? dataAddress.city : '',\n            postcode: dataAddress.postcode ? dataAddress.postcode : '',\n            mpan: electricityInformation.MPANDetails.mpan_core ? electricityInformation.MPANDetails.mpan_core : '',\n            mprn: gasInformation.dataGas.mprn ? gasInformation.dataGas.mprn : ''\n          },\n          MPANDetails: {\n            meter_serial_number: electricityInformation.MPANDetails.meter_serial_number ? electricityInformation.MPANDetails.meter_serial_number : '',\n            meter_type: electricityInformation.MPANDetails.meter_type ? electricityInformation.MPANDetails.meter_type : '',\n            mpan_core: electricityInformation.MPANDetails.mpan_core ? electricityInformation.MPANDetails.mpan_core : '',\n            supplier_mpid: electricityInformation.MPANDetails.supplier_mpid ? electricityInformation.MPANDetails.supplier_mpid : ''\n          },\n          dataGas: {\n            mprn: gasInformation.dataGas.mprn ? gasInformation.dataGas.mprn : '',\n            meter_mechanism_code: gasInformation.dataGas.meter_mechanism_code ? gasInformation.dataGas.meter_mechanism_code : '',\n            current_supplier_id: gasInformation.dataGas.current_supplier_id ? gasInformation.dataGas.current_supplier_id : '',\n            gas_transport_id: gasInformation.dataGas.gas_transport_id ? gasInformation.dataGas.gas_transport_id : ''\n          }\n        });\n      }\n    })();\n\n  }, [createCustomer]);\n\n  // Go back to postcode\n  const goToPostcode = (e) => {\n    e.preventDefault();\n    // Hidde Form Address\n    updateShowFormAddres(false);\n    // Show Postcode\n    updateShowFormPostCode(true);\n    // Update progress bar\n    updateProgressBar({ ...progressBar, step: 0 });\n  };\n\n  // Address is not listed\n  const type_address = (e) => {\n    e.preventDefault();\n    // Update data address \n    updateDataAddress({\n      ...dataAddress,\n      doornumber: '',\n      addressline1: '',\n      addressline2: '',\n      city: '',\n      // postcode: '',\n      mpan: '',\n      mprn: ''\n    });\n    // Cleaning states\n    updateElectricityInformation({});\n    updateGasInformation({});\n    updateAddress('');\n    updateShowTypeAddres(false);\n    updateError(false);\n\n    // Reset form\n    let reset_doornumber = document.getElementById('door-number');\n    let reset_line1 = document.getElementById('line1');\n    let reset_line2 = document.getElementById('line2');\n    let reset_city = document.getElementById('city');\n    if ((reset_doornumber !== null) && (reset_line1 !== null) && (reset_line2 !== null) && (reset_city !== null)) {\n      reset_doornumber.value = '';\n      reset_line1.value = '';\n      reset_line2.value = '';\n      reset_city.value = '';\n    }\n  }\n\n  // HandleChangeSelect\n  const handleChangeSelect = (e) => {\n    e.preventDefault();\n    // Update states\n    updateShowTypeAddres(true);\n    updateDataAddress({\n      ...dataAddress,\n      doornumber: '',\n      addressline1: '',\n      addressline2: '',\n      city: '',\n      // postcode: '',\n      mpan: '',\n      mprn: ''\n    });\n  }\n\n  return (\n    <>\n      {showTypeAddress ?\n        address === \"\" ? (\n          <section className=\"form-address-section\">\n            <div className=\"form-address-container\">\n              <div className=\"form-address-content\">\n                <div className=\"form-address\">\n                  <h1>Select your addres from the below</h1>\n                  <p>Having the correct address is key to ensuring we select the correct MPAN / MRPN for the customer's address. Id the customer's address is not present in the list below, we must enter it manually and request the customers MPAN / MPRN to enable successful switch.</p>\n                </div>\n\n                {/* Address */}\n                <div>\n                  <SelectAddress />\n                </div>\n\n                <div className='form-address-manually-btn'>\n                  <button data-cy=\"addr-empty\" onClick={(e) => type_address(e)}>My address isn't listed</button>\n                </div>\n\n                {/* Error */}\n                {error === true ? <Error message={'Please enter an address'} /> : null}\n\n                {/* Buttons */}\n                <div className=\"form-address-btn-container\">\n                  <button className=\"form-address-btn btn-back\" onClick={goToPostcode}>\n                    <IconContext.Provider value={{ color: '#D338AE', size: '35px' }}>\n                      <IoMdArrowDropleft className=\"icon-back\" />\n                    </IconContext.Provider>\n                    Go back\n                  </button>\n\n                  <button data-cy=\"addr-noselected\" className=\"form-address-btn btn-next\" onClick={() => address === '' ? updateError(true) : null}>\n                    Continue\n\n                    <IconContext.Provider value={{ color: '#FFF', size: '35px' }}>\n                      <IoMdArrowDropright className=\"icon-next\" />\n                    </IconContext.Provider>\n                  </button>\n                </div>\n              </div>\n\n              {showScript ?\n                (\n                  <div className=\"helper-address\">\n                    <div className=\"script-address\">\n                      <FormScript step={2} />\n                    </div>\n\n                    <div className=\"assistant-address-custom\">\n                      <FormAssistant tips={1} />\n                    </div>\n                  </div>\n                )\n                :\n                <div style={{ width: '100%' }}>\n                  <div className=\"assistant-address\">\n                    <FormAssistant tips={1} />\n                  </div>\n                </div>\n              }\n\n            </div>\n          </section>\n        ) : (\n          <section className=\"form-address-section\">\n            <div className=\"form-address-container\">\n              <div className=\"form-address-content\">\n                <div className=\"form-address\">\n                  <h1>Select your addres from the below</h1>\n                  <p>Having the correct address is key to ensuring we select the correct MPAN / MRPN for the customer's address. Id the customer's address is not present in the list below, we must enter it manually and request the customers MPAN / MPRN to enable successful switch.</p>\n                </div>\n\n                {/* Address */}\n                <div>\n                  <SelectAddress />\n                </div>\n\n                <div className=\"form-address-manually-btn\">\n                  <button onClick={(e) => type_address(e)} className={focusAnimation ? 'animate__animated animate__headShake' : ''}>My address isn't listed</button>\n                </div>\n\n                {/* Inputs */}\n                <form className=\"form-address-input-container\">\n                  <div className=\"form-address-input-content\">\n                    <h2>Address Information</h2>\n\n                    {/* Error */}\n                    {error === true ? <Error message={'Please enter an address'} /> : null}\n\n                    <div className=\"form-address-input\">\n                      <label>Door number</label>\n                      <div onClick={() => setFocusAnimation(!focusAnimation)}>\n                        <input\n                          id=\"door-number\"\n                          name=\"doornumber\"\n                          type=\"text\"\n                          value={dataAddress.doornumber || ''}\n                          disabled={true}\n                        />\n                      </div>\n                    </div>\n\n                    <div className=\"form-address-input\" style={{position: 'relative'}}>\n                      <label>Address Line 1</label>\n                      <div onClick={() => setFocusAnimation(!focusAnimation)}>\n                        <input\n                          id=\"line1\"\n                          name=\"addressline1\"\n                          type=\"text\"\n                          value={dataAddress.addressline1 || ''}\n                          disabled={true}\n                        />\n                      </div>\n                      <div className=\"form-address-tooltip\">{dataAddress.addressline1}</div>\n                    </div>\n\n                    <div className=\"form-address-input\">\n                      <label>Address line 2 (optional)</label>\n                      <div onClick={() => setFocusAnimation(!focusAnimation)}>\n                        <input\n                          id=\"line2\"\n                          name=\"addressline2\"\n                          type=\"text\"\n                          value={dataAddress.addressline2 || ''}\n                          disabled={true}\n                        />\n                      </div>\n                    </div>\n\n                    <div className=\"form-address-input\">\n                      <label>City</label>\n                      <div onClick={() => setFocusAnimation(!focusAnimation)}>\n                        <input\n                          id=\"city\"\n                          name=\"city\"\n                          type=\"text\"\n                          value={dataAddress.city || ''}\n                          disabled={true}\n                        />\n                      </div>\n                    </div>\n\n                    <div className=\"form-address-input\">\n                      <label>Postcode</label>\n                      <div onClick={() => setFocusAnimation(!focusAnimation)}>\n                        <input\n                          id=\"postcode\"\n                          name=\"postcode\"\n                          type=\"text\"\n                          value={dataAddress.postcode || ''}\n                          disabled={true}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </form>\n\n                {/* Buttons */}\n                <div className=\"form-address-btn-container\">\n                  <button className=\"form-address-btn btn-back\" onClick={goToPostcode}>\n                    <IconContext.Provider value={{ color: '#D338AE', size: '35px' }}>\n                      <IoMdArrowDropleft className=\"icon-back\" />\n                    </IconContext.Provider>\n                    Go back\n                  </button>\n\n                  <button className=\"form-address-btn btn-next\" onClick={(e) => e.preventDefault(sendAddress(dataAddress))}>\n                    Continue\n\n                    <IconContext.Provider value={{ color: '#FFF', size: '35px' }}>\n                      <IoMdArrowDropright className=\"icon-next\" />\n                    </IconContext.Provider>\n                  </button>\n                </div>\n              </div>\n\n              {showScript ?\n                (\n                  <div className=\"helper-address\">\n                    <div className=\"script-address\">\n                      <FormScript step={2} />\n                    </div>\n\n                    <div className=\"assistant-address-custom\">\n                      <FormAssistant tips={1} />\n                    </div>\n                  </div>\n                )\n                :\n                <div style={{ width: '100%' }}>\n                  <div className=\"assistant-address\">\n                    <FormAssistant tips={1} />\n                  </div>\n                </div>\n              }\n\n            </div>\n          </section>\n        )\n        :\n        (\n          <section className=\"form-address-section\">\n            <div className=\"form-address-container\">\n              <div className=\"form-address-content\">\n                <div className=\"form-address\">\n                  <h1>Select your addres from the below</h1>\n                  <p>Having the correct address is key to ensuring we select the correct MPAN / MRPN for the customer's address. Id the customer's address is not present in the list below, we must enter it manually and request the customers MPAN / MPRN to enable successful switch.</p>\n                </div>\n\n                {/* Address */}\n                <div onChange={(e) => handleChangeSelect(e)}>\n                  <SelectAddress />\n                </div>\n\n                <div className='form-address-manually-btn'>\n                  <button onClick={(e) => type_address(e)}>My address isn't listed</button>\n                </div>\n\n                {/* Inputs */}\n                <form className=\"form-address-input-container\" onChange={() => handleChangeTypeAddress()}>\n                  <div className=\"form-address-input-content\">\n                    <h2>Type address manually</h2>\n\n                    {/* Error */}\n                    {error === true ? <Error message={'Please enter an address'} /> : null}\n\n                    <div className=\"form-address-input\">\n                      <label>Door number</label>\n                      <input\n                        id=\"door-number\"\n                        type=\"text\"\n                        value={dataAddress.doornumber || ''}\n                        onChange={(e) => handleChange(e)}\n                        name=\"doornumber\"\n                        data-cy=\"door-input\"\n                      />\n                    </div>\n\n                    <div className=\"form-address-input\" style={{position: 'relative'}}>\n                      <label>Address Line 1</label>\n                      <input\n                        id=\"line1\"\n                        type=\"text\"\n                        value={dataAddress.addressline1 || ''}\n                        onChange={(e) => handleChange(e)}\n                        name=\"addressline1\"\n                        data-cy=\"addr1-input\"\n                      />\n                    </div>\n\n                    <div className=\"form-address-input\">\n                      <label>Address line 2 (optional)</label>\n                      <input\n                        id=\"line2\"\n                        type=\"text\"\n                        value={dataAddress.addressline2 || ''}\n                        onChange={(e) => handleChange(e)}\n                        name=\"addressline2\"\n                        data-cy=\"addr2-input\"\n                      />\n                    </div>\n\n                    <div className=\"form-address-input\">\n                      <label>City</label>\n                      <input\n                        id=\"city\"\n                        type=\"text\"\n                        value={dataAddress.city || ''}\n                        onChange={(e) => handleChange(e)}\n                        name=\"city\"\n                        data-cy=\"city-input\"\n                      />\n                    </div>\n\n                    <div className=\"form-address-input\">\n                      <label>Postcode</label>\n                      <input\n                        id=\"postcode\"\n                        type=\"text\"\n                        value={postcodeValue}\n                        onChange={(e) => handleChange(e)}\n                        name=\"postcode\"\n                        disabled\n                      />\n                    </div>\n\n                  </div>\n                </form>\n\n                {/* Buttons */}\n                <div className=\"form-address-btn-container\">\n                  <button className=\"form-address-btn btn-back\" onClick={goToPostcode}>\n                    <IconContext.Provider value={{ color: '#D338AE', size: '35px' }}>\n                      <IoMdArrowDropleft className=\"icon-back\" />\n                    </IconContext.Provider>\n                    Go back\n                  </button>\n\n                  <button data-cy=\"addrtyped-continue\" className=\"form-address-btn btn-next\" onClick={(e) => e.preventDefault(sendAddress(dataAddress))}>\n                    Continue\n\n                    <IconContext.Provider value={{ color: '#FFF', size: '35px' }}>\n                      <IoMdArrowDropright className=\"icon-next\" />\n                    </IconContext.Provider>\n                  </button>\n                </div>\n              </div>\n\n              {showScript ?\n                (\n                  <div className=\"helper-address\">\n                    <div className=\"script-address\">\n                      <FormScript step={2} />\n                    </div>\n\n                    <div className=\"assistant-address-custom\">\n                      <FormAssistant tips={1} />\n                    </div>\n                  </div>\n                )\n                :\n                <div style={{ width: '100%' }}>\n                  <div className=\"assistant-address\">\n                    <FormAssistant tips={1} />\n                  </div>\n                </div>\n              }\n\n            </div>\n          </section>\n        )}\n    </>\n  );\n}\n\nexport default FormAddress;\n"]},"metadata":{},"sourceType":"module"}
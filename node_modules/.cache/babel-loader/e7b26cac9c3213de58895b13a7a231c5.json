{"ast":null,"code":"var _jsxFileName = \"/Users/juanlugo/Desktop/sp-firebase/src/pages/HomePage/Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, lazy, Suspense, useEffect } from \"react\"; // Firebase\n\nimport { db } from \"../../firebase/firebase\"; // Components\n\nimport Navbar from \"../../components/Navbar/Navbar\";\nimport Footer from \"../../components/Footer/Footer\";\nimport Overlay from \"../../components/Overlay/Overlay\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FormPostCode = /*#__PURE__*/lazy(_c = () => import('../../components/FormCards/FormPostCode/FormPostCode'));\n_c2 = FormPostCode;\nconst FormAddress = /*#__PURE__*/lazy(_c3 = () => import('../../components/FormCards/FormAddress/FormAddress'));\n_c4 = FormAddress;\nconst FormFuelType = /*#__PURE__*/lazy(_c5 = () => import('../../components/FormCards/FormFuelType/FormFuelType'));\n_c6 = FormFuelType;\nconst FormMpanMprn = /*#__PURE__*/lazy(_c7 = () => import('../../components/FormCards/FormMPN-MPRN/FormMpanMprn'));\n_c8 = FormMpanMprn;\nconst FormSupply = /*#__PURE__*/lazy(_c9 = () => import('../../components/FormCards/FormSupply/FormSupply'));\n_c10 = FormSupply;\nconst FormE7 = /*#__PURE__*/lazy(_c11 = () => import('../../components/FormCards/FormE7/FormE7'));\n_c12 = FormE7;\nconst FormTariffs = /*#__PURE__*/lazy(_c13 = () => import('../../components/FormCards/FormTariffs/FormTariffs'));\n_c14 = FormTariffs;\nconst FormUsageKWH = /*#__PURE__*/lazy(_c15 = () => import('../../components/FormCards/FormsUsage/FormUsageKWH/FormUsageKWH'));\n_c16 = FormUsageKWH;\nconst FormUsageGAS = /*#__PURE__*/lazy(_c17 = () => import('../../components/FormCards/FormsUsage/FormUsageGAS/FormUsageGAS'));\n_c18 = FormUsageGAS;\nconst FormUsageGBP_es = /*#__PURE__*/lazy(_c19 = () => import('../../components/FormCards/FormsUsage/FormUsageGBP_es/FormUsageGBP_es'));\n_c20 = FormUsageGBP_es;\nconst FormUsageGBP_gs = /*#__PURE__*/lazy(_c21 = () => import('../../components/FormCards/FormsUsage/FormUsageGBP_gs/FormUsageGBP_gs'));\n_c22 = FormUsageGBP_gs;\nconst FormUsageAVG = /*#__PURE__*/lazy(_c23 = () => import('../../components/FormCards/FormsUsage/FormUsageAVG/FormUsageAVG'));\n_c24 = FormUsageAVG;\nconst FormDebt = /*#__PURE__*/lazy(_c25 = () => import('../../components/FormCards/FormDebt/FormDebt'));\n_c26 = FormDebt;\nconst FormCompare = /*#__PURE__*/lazy(_c27 = () => import('../../components/FormCards/FormCompare/FormCompare'));\n_c28 = FormCompare;\nconst FormDetails = /*#__PURE__*/lazy(_c29 = () => import('../../components/FormCards/FormDetails/FormDetails'));\n_c30 = FormDetails;\nconst FormBankDetails = /*#__PURE__*/lazy(_c31 = () => import('../../components/FormCards/FormBankDetails/FormBankDetails'));\n_c32 = FormBankDetails;\nconst FormRating = /*#__PURE__*/lazy(_c33 = () => import('../../components/FormCards/FormRating/FormRating'));\n_c34 = FormRating;\nconst FormSuccessful = /*#__PURE__*/lazy(_c35 = () => import('../../components/FormCards/FormSuccessful/FormSuccessful'));\n_c36 = FormSuccessful;\n\nfunction Home({\n  user\n}) {\n  _s();\n\n  /* -- STATES -- */\n  // Progress bar \n  const [progressBar, updateProgressBar] = useState({\n    step: 0\n  }); // Script\n\n  const [showScript, updateShowScript] = useState(true); // Customer Postcode State\n\n  const [customerPostCode, updateCustomerPostCode] = useState({\n    postcode: \"\"\n  }); // Customer Address\n\n  const [customerAddres, updateCustomerAddress] = useState({}); // Use gas \n\n  const [useGas, updateUseGas] = useState({}); // Fuel\n\n  const [fuel, updateFuel] = useState({}); // Customer Electricity Information\n\n  const [electricityInformation, updateElectricityInformation] = useState({}); // Customer Gas Information\n\n  const [gasInformation, updateGasInformation] = useState({}); // Customer supplier information\n\n  const [supplierInformation, updateSupplierInformation] = useState({}); // Customer Information\n\n  const [customerInformation, updateCustomerInformation] = useState({}); // Customer Electricity Payment Type\n\n  const [electricityPaymentType, updateElectricityPaymentType] = useState({}); // Customer Gas Payment Type\n\n  const [gasPaymentType, updateGasPaymentType] = useState({}); // Customer Economy 7\n\n  const [economy7, updateEconomy7] = useState({});\n  /** -- VIEWS states -- */\n  // Show Overlay\n\n  const [showOverlay, updateShowOverlay] = useState(false); // Show Form PostCode\n\n  const [showFormPostCode, updateShowFormPostCode] = useState(false); // Show Form Address\n\n  const [showFormAddres, updateShowFormAddres] = useState(false); // Show form Fuel type\n\n  const [showFormFuelType, updateShowFomrFuelType] = useState(false); // Show Form MPAN/MPRN \n\n  const [showFormMpanMprn, updateShowFormMpanMprn] = useState(false); // Show Form Supply \n\n  const [showFormSupply, updateShowFormSupply] = useState(false); // Show Form E7\n\n  const [showE7, updateShowE7] = useState(false); // Show Form Tariffs\n\n  const [showFormTariffs, updateShowFormTariffs] = useState(false); // Show Form Usage KWH\n\n  const [showFormUsageKWH, updateShowFormUsageKWH] = useState(false); // Show Form Usage GAS\n\n  const [showFormUsageGAS, updateShowFormUsageGAS] = useState(false); // Show Form Usage GBP_es\n\n  const [showFormUsageGBP_es, updateShowFormUsageGBP_es] = useState(false); // Show Form Usage GBP_gs\n\n  const [showFormUsageGBP_gs, updateShowFormUsageGBP_gs] = useState(false); // Show Form Usage AVG\n\n  const [showFormUsageAVG, updateShowFormUsageAVG] = useState(false); // AVG for elec\n\n  const [avgElec, updateAvgElec] = useState(false); // AVG for gas\n\n  const [avgGas, updateAvgGas] = useState(false); // Show Form Debt\n\n  const [showFormDebt, updateShowFormDebt] = useState(true); // Show Form Compare\n\n  const [showFormCompare, updateShowFormCompare] = useState(false); // Show Form Details\n\n  const [showFormDetails, updateShowFormDetails] = useState(false); // Show Form Bank Details\n\n  const [showFormBankDetails, updateShowFormBankDetails] = useState(false); // Show rating\n\n  const [showFormRating, updateShowFormRating] = useState(false); // Show Successful\n\n  const [showSuccessFul, updateShowSuccessFul] = useState(false);\n  useEffect(() => {\n    console.log(document.getElementById('push'));\n  }, [customerInformation]); // Add postcode to customer \n\n  const addPostCodeData = postcode => {\n    const postCodeData = postcode;\n    updateCustomerPostCode({\n      postcode: postCodeData.toUpperCase()\n    });\n  }; // Customer step\n\n\n  const customerStep = async customer => {\n    const {\n      step,\n      customerAddres,\n      MPANDetails,\n      dataGas,\n      fuel,\n      useGas,\n      fuel_description,\n      supplierInformation,\n      electricityPaymentType,\n      gasPaymentType,\n      economy7,\n      usage_property_size_dual,\n      usage_property_size_es,\n      usage_property_size_gs,\n      usage_gas_description,\n      usage_gbp_description_gs,\n      usage_kwh_description,\n      usage_gbp_description_es,\n      avgElec,\n      avgGas\n    } = customer; // Postcode\n\n    const {\n      postcode\n    } = customerAddres; // Variables\n\n    let gas_only;\n    let elec_only;\n    let same_supplier;\n    let dual_active;\n\n    if (step > 1) {\n      /**-- Assign Values   */\n      gas_only = fuel_description.gas_only;\n      elec_only = fuel_description.elec_only;\n      same_supplier = fuel_description.same_supplier;\n      dual_active = fuel_description.dual_active;\n    } // Variables for electricity and gas payment methods validated\n\n\n    let electricityPaymentType_validated;\n    let gasPaymentType_validated; // Validation Electricity payment type\n\n    let electricity_payment_type_id;\n    let electricity_payment_type_method; // Validation Gas payment type\n\n    let gas_payment_type_id;\n    let gas_payment_type_method; // Default unit rate for electricity\n\n    const general_unit_rate_elec = {\n      unit_rate: 17\n    }; // Default unit rate for gas\n\n    const general_unit_rate_gas = {\n      unit_rate: 27\n    };\n    /**-- Unit rate for electricity --*/\n    // DocRef Unit Rate Elec\n\n    let unitRateElecRef = await db.collection(\"unitRates\").doc('unit_rate_svt_elec');\n    let unitRateElec = await unitRateElecRef.get().then(doc => {\n      if (doc.exists) {\n        return doc.data();\n      } else {\n        // console.log(general_unit_rate_elec);\n        return general_unit_rate_elec;\n      }\n    }).catch(error => {\n      console.log(\"Error getting document:\", error); // console.log(general_unit_rate_elec);\n\n      return general_unit_rate_elec;\n    });\n    /**-- Unit rate for gas --*/\n    // DocRef Unit Rate gas\n\n    let unitRateGasRef = await db.collection(\"unitRates\").doc('unit_rate_svt_gas');\n    let unitRateGas = await unitRateGasRef.get().then(doc => {\n      if (doc.exists) {\n        return doc.data();\n      } else {\n        // console.log(general_unit_rate_elec);\n        return general_unit_rate_gas;\n      }\n    }).catch(error => {\n      console.log(\"Error getting document:\", error); // console.log(general_unit_rate_elec);\n\n      return general_unit_rate_gas;\n    }); // Step 0 - Enter your postcode\n\n    switch (step) {\n      case 0:\n        console.log('Step 0'); // Update progress bar\n\n        updateProgressBar({ ...progressBar,\n          step: 1\n        }); // Add postcode to customerData\n\n        addPostCodeData(postcode); // Hidde Form Post Code\n\n        updateShowFormPostCode(false); // Show Form Address\n\n        updateShowFormAddres(true); // Hide Overlay\n\n        updateShowOverlay(false);\n        break;\n      // Step 1 - Enter your full address\n\n      case 1:\n        console.log('Step 1'); // Add postcode to customerData\n\n        addPostCodeData(postcode); // Update customer address\n\n        updateCustomerAddress({ ...customerAddres\n        }); // Update Electricity information\n\n        updateElectricityInformation({ ...electricityInformation,\n          MPANDetails\n        }); // Update Gas information\n\n        updateGasInformation({ ...gasInformation,\n          dataGas\n        }); // Update progress bar\n\n        updateProgressBar({ ...progressBar,\n          step: 2\n        }); // Hide Address\n\n        updateShowFormAddres(false); // Show Form Fuel type\n\n        updateShowFomrFuelType(true); // Hide Overlay\n\n        updateShowOverlay(false);\n        break;\n      // Step 2 - Choose your fuel type\n\n      case 2:\n        console.log('Step 2'); // Update customer address\n\n        updateCustomerAddress({ ...customerAddres\n        }); // Update Electricity information\n\n        updateElectricityInformation({ ...electricityInformation,\n          MPANDetails\n        }); // Update Gas information\n\n        updateGasInformation({ ...gasInformation,\n          dataGas\n        }); // Update fuel state\n\n        updateFuel({ ...fuel\n        }); // Update useGas\n\n        updateUseGas({ ...useGas\n        }); // Update Customer\n\n        updateCustomerInformation({ ...customerInformation,\n          fuel_description\n        }); // Update progress bar\n\n        updateProgressBar({ ...progressBar,\n          step: 3\n        }); // Hide Address\n\n        updateShowFormAddres(false); // Show MPAN/MPRN\n\n        updateShowFormMpanMprn(true); // Hide Overlay\n\n        updateShowOverlay(false);\n        break;\n      // Step 3 - Supply number\n\n      case 3:\n        console.log('Step 3'); // Update customer address\n\n        updateCustomerAddress({ ...customerAddres\n        }); // Update Electricity information\n\n        updateElectricityInformation({ ...electricityInformation,\n          MPANDetails\n        }); // Update Gas information\n\n        updateGasInformation({ ...gasInformation,\n          dataGas\n        }); // Update fuel state\n\n        updateFuel({ ...fuel\n        }); // Update useGas\n\n        updateUseGas({ ...useGas\n        }); // Update Supplier Information\n\n        updateSupplierInformation({ ...supplierInformation\n        }); // Update Customer\n\n        updateCustomerInformation({ ...customerInformation,\n          fuel_description\n        }); // Update progress bar\n\n        updateProgressBar({ ...progressBar,\n          step: 4\n        }); // Hide Address\n\n        updateShowFormAddres(false); // Show Form Supply\n\n        updateShowFormSupply(true); // Hide Overlay\n\n        updateShowOverlay(false);\n        break;\n      // Step 4 - Choose your energy supplier(s)\n\n      case 4:\n        console.log('Step 4'); // Update customer address\n\n        updateCustomerAddress({ ...customerAddres\n        }); // Update Electricity information\n\n        updateElectricityInformation({ ...electricityInformation,\n          MPANDetails\n        }); // Update Gas information\n\n        updateGasInformation({ ...gasInformation,\n          dataGas\n        }); // Update fuel state\n\n        updateFuel({ ...fuel\n        }); // Update useGas\n\n        updateUseGas({ ...useGas\n        }); // Update Supplier Information\n\n        updateSupplierInformation({ ...supplierInformation\n        });\n        /**-- Payment type validation --*/\n        // Validation Electricity payment type\n\n        electricity_payment_type_id = electricityPaymentType.electricity_payment_type_id;\n        electricity_payment_type_method = electricityPaymentType.electricity_payment_type_method;\n\n        if (electricity_payment_type_id === '' && electricity_payment_type_method === '') {\n          // Delete Electricity payment type if it is empty\n          const copy_electricityPaymentType = { ...electricityPaymentType\n          };\n          delete copy_electricityPaymentType['electricity_payment_type_id'];\n          delete copy_electricityPaymentType['electricity_payment_type_method']; // Update Electricity payment type\n\n          updateElectricityPaymentType({ ...copy_electricityPaymentType\n          }); // Assigning validated value\n\n          electricityPaymentType_validated = copy_electricityPaymentType;\n        } else {\n          // Update Electricity payment type\n          updateElectricityPaymentType({ ...electricityPaymentType\n          }); // Assigning validated value\n\n          electricityPaymentType_validated = electricityPaymentType;\n        } // Validation Gas payment type\n\n\n        gas_payment_type_id = gasPaymentType.gas_payment_type_id;\n        gas_payment_type_method = gasPaymentType.gas_payment_type_method;\n\n        if (gas_payment_type_id === '' && gas_payment_type_method === '') {\n          // Delete Gas payment type if it is empty\n          const copy_gasPaymentType = { ...gasPaymentType\n          };\n          delete copy_gasPaymentType['gas_payment_type_id'];\n          delete copy_gasPaymentType['gas_payment_type_method']; // Update Gas payment type\n\n          updateGasPaymentType({ ...copy_gasPaymentType\n          }); // Assigning validated value\n\n          gasPaymentType_validated = copy_gasPaymentType;\n        } else {\n          // Update Gas payment type\n          updateGasPaymentType({ ...gasPaymentType\n          }); // Assigning validated value\n\n          gasPaymentType_validated = gasPaymentType;\n        } // Update customer information\n\n\n        updateCustomerInformation({ ...customerInformation,\n          customerAddres,\n          useGas,\n          fuel,\n          supplierInformation,\n          electricityPaymentType: electricityPaymentType_validated,\n          gasPaymentType: gasPaymentType_validated,\n          fuel_description\n        }); // Update progress bar\n\n        updateProgressBar({ ...progressBar,\n          step: 5\n        }); // Hide Address\n\n        updateShowFormAddres(false); // Show FormE7\n\n        updateShowE7(true); // Hide Overlay\n\n        updateShowOverlay(false);\n        break;\n      // Step 5\n\n      case 5:\n        console.log('Step 5'); // Update customer address\n\n        updateCustomerAddress({ ...customerAddres\n        }); // Update Electricity information\n\n        updateElectricityInformation({ ...electricityInformation,\n          MPANDetails\n        }); // Update Gas information\n\n        updateGasInformation({ ...gasInformation,\n          dataGas\n        }); // Update fuel state\n\n        updateFuel({ ...fuel\n        }); // Update useGas\n\n        updateUseGas({ ...useGas\n        }); // Update Supplier Information\n\n        updateSupplierInformation({ ...supplierInformation\n        });\n        /**-- Payment type validation --*/\n        // Validation Electricity payment type\n\n        electricity_payment_type_id = electricityPaymentType.electricity_payment_type_id;\n        electricity_payment_type_method = electricityPaymentType.electricity_payment_type_method;\n\n        if (electricity_payment_type_id === '' && electricity_payment_type_method === '') {\n          // Delete Electricity payment type if it is empty\n          const copy_electricityPaymentType = { ...electricityPaymentType\n          };\n          delete copy_electricityPaymentType['electricity_payment_type_id'];\n          delete copy_electricityPaymentType['electricity_payment_type_method']; // Update Electricity payment type\n\n          updateElectricityPaymentType({ ...copy_electricityPaymentType\n          }); // Assigning validated value\n\n          electricityPaymentType_validated = copy_electricityPaymentType;\n        } else {\n          // Update Electricity payment type\n          updateElectricityPaymentType({ ...electricityPaymentType\n          }); // Assigning validated value\n\n          electricityPaymentType_validated = electricityPaymentType;\n        } // Validation Gas payment type\n\n\n        gas_payment_type_id = gasPaymentType.gas_payment_type_id;\n        gas_payment_type_method = gasPaymentType.gas_payment_type_method;\n\n        if (gas_payment_type_id === '' && gas_payment_type_method === '') {\n          // Delete Gas payment type if it is empty\n          const copy_gasPaymentType = { ...gasPaymentType\n          };\n          delete copy_gasPaymentType['gas_payment_type_id'];\n          delete copy_gasPaymentType['gas_payment_type_method']; // Update Gas payment type\n\n          updateGasPaymentType({ ...copy_gasPaymentType\n          }); // Assigning validated value\n\n          gasPaymentType_validated = copy_gasPaymentType;\n        } else {\n          // Update Gas payment type\n          updateGasPaymentType({ ...gasPaymentType\n          }); // Assigning validated value\n\n          gasPaymentType_validated = gasPaymentType;\n        } // Update Economy 7\n\n\n        updateEconomy7({\n          economy7: { ...economy7\n          }\n        });\n        /**-- Assign Tariff description  */\n        // elec_only\n\n        if (elec_only) {\n          console.log('elec_only, Assign Tariff description'); // Update customer information\n\n          updateCustomerInformation({ ...customerInformation,\n            customerAddres,\n            useGas,\n            fuel,\n            supplierInformation,\n            electricityPaymentType: electricityPaymentType_validated,\n            gasPaymentType: gasPaymentType_validated,\n            fuel_description,\n            economy7,\n            tariff_description: {\n              unit_rate: unitRateElec.unit_rate\n            }\n          });\n        } // gas_only\n\n\n        if (gas_only) {\n          console.log('gas_only, Assign Tariff description'); // Update customer information\n\n          updateCustomerInformation({ ...customerInformation,\n            customerAddres,\n            useGas,\n            fuel,\n            supplierInformation,\n            electricityPaymentType: electricityPaymentType_validated,\n            gasPaymentType: gasPaymentType_validated,\n            fuel_description,\n            economy7,\n            tariff_description: {\n              unit_rate: unitRateGas.unit_rate\n            }\n          });\n        } // dual_active\n\n\n        if (dual_active) {\n          // same_supplier\n          if (same_supplier) {\n            console.log('Same supplier true, Assign Tariff description'); // Update customer information\n\n            updateCustomerInformation({ ...customerInformation,\n              customerAddres,\n              useGas,\n              fuel,\n              supplierInformation,\n              electricityPaymentType: electricityPaymentType_validated,\n              gasPaymentType: gasPaymentType_validated,\n              fuel_description,\n              economy7,\n              tariff_description: {\n                unit_rate_elec: unitRateElec.unit_rate,\n                unit_rate_gas: unitRateGas.unit_rate\n              }\n            });\n          } else {\n            console.log('Same supplier false, Assign Tariff description'); // Update customer information\n\n            updateCustomerInformation({ ...customerInformation,\n              customerAddres,\n              useGas,\n              fuel,\n              supplierInformation,\n              electricityPaymentType: electricityPaymentType_validated,\n              gasPaymentType: gasPaymentType_validated,\n              fuel_description,\n              economy7,\n              tariff_description_elec: {\n                elec_tariff: {\n                  unit_rate: unitRateElec.unit_rate\n                }\n              },\n              tariff_description_gas: {\n                gas_tariff: {\n                  unit_rate: unitRateGas.unit_rate\n                }\n              }\n            });\n          }\n        } // Update progress bar\n\n\n        updateProgressBar({ ...progressBar,\n          step: 6\n        }); // Hide Address\n\n        updateShowFormAddres(false); // Conditional to usage section\n\n        if (gas_only) {\n          // Show Gas\n          updateShowFormUsageGAS(true);\n        } else {\n          // Show KWH\n          updateShowFormUsageKWH(true);\n        } // Hide Overlay\n\n\n        updateShowOverlay(false);\n        break;\n      // Step 6\n\n      case 6:\n        console.log('Step 6'); // Update customer address\n\n        updateCustomerAddress({ ...customerAddres\n        }); // Update Electricity information\n\n        updateElectricityInformation({ ...electricityInformation,\n          MPANDetails\n        }); // Update Gas information\n\n        updateGasInformation({ ...gasInformation,\n          dataGas\n        }); // Update fuel state\n\n        updateFuel({ ...fuel\n        }); // Update useGas\n\n        updateUseGas({ ...useGas\n        }); // Update Supplier Information\n\n        updateSupplierInformation({ ...supplierInformation\n        });\n        /**-- Payment type validation --*/\n        // Validation Electricity payment type\n\n        electricity_payment_type_id = electricityPaymentType.electricity_payment_type_id;\n        electricity_payment_type_method = electricityPaymentType.electricity_payment_type_method;\n\n        if (electricity_payment_type_id === '' && electricity_payment_type_method === '') {\n          // Delete Electricity payment type if it is empty\n          const copy_electricityPaymentType = { ...electricityPaymentType\n          };\n          delete copy_electricityPaymentType['electricity_payment_type_id'];\n          delete copy_electricityPaymentType['electricity_payment_type_method']; // Update Electricity payment type\n\n          updateElectricityPaymentType({ ...copy_electricityPaymentType\n          }); // Assigning validated value\n\n          electricityPaymentType_validated = copy_electricityPaymentType;\n        } else {\n          // Update Electricity payment type\n          updateElectricityPaymentType({ ...electricityPaymentType\n          }); // Assigning validated value\n\n          electricityPaymentType_validated = electricityPaymentType;\n        } // Validation Gas payment type\n\n\n        gas_payment_type_id = gasPaymentType.gas_payment_type_id;\n        gas_payment_type_method = gasPaymentType.gas_payment_type_method;\n\n        if (gas_payment_type_id === '' && gas_payment_type_method === '') {\n          // Delete Gas payment type if it is empty\n          const copy_gasPaymentType = { ...gasPaymentType\n          };\n          delete copy_gasPaymentType['gas_payment_type_id'];\n          delete copy_gasPaymentType['gas_payment_type_method']; // Update Gas payment type\n\n          updateGasPaymentType({ ...copy_gasPaymentType\n          }); // Assigning validated value\n\n          gasPaymentType_validated = copy_gasPaymentType;\n        } else {\n          // Update Gas payment type\n          updateGasPaymentType({ ...gasPaymentType\n          }); // Assigning validated value\n\n          gasPaymentType_validated = gasPaymentType;\n        } // Update Economy 7\n\n\n        updateEconomy7({\n          economy7: { ...economy7\n          }\n        });\n        /**-- Assign Tariff description && Usage */\n        // Entered usage boolean values \n        // Elec\n\n        const usage_kwh_entered = usage_kwh_description.usage_kwh_entered;\n        const usage_gbp_entered_es = usage_gbp_description_es.usage_gbp_entered;\n        const usage_size_entered_es = usage_property_size_es.usage_size_entered; // Gas\n\n        const usage_gas_entered = usage_gas_description.usage_kwh_entered;\n        const usage_gbp_entered_gs = usage_gbp_description_gs.usage_gbp_entered;\n        const usage_size_entered_gs = usage_property_size_gs.usage_size_entered; // Dual\n\n        const usage_size_entered_dual = usage_property_size_dual.usage_size_entered; // usage_validated\n\n        const usage_validated = {\n          usage_kwh_description,\n          usage_gbp_description_es,\n          usage_gas_description,\n          usage_gbp_description_gs,\n          usage_property_size_es,\n          usage_property_size_gs,\n          usage_property_size_dual\n        }; // copy_usage_validated\n\n        let copy_usage_validated = { ...usage_validated\n        };\n        /**-- Electricity Values --*/\n        // Validation usage_kwh_entered\n\n        if (usage_kwh_entered) {\n          delete copy_usage_validated['usage_gbp_description_es'];\n          delete copy_usage_validated['usage_property_size_es'];\n          delete copy_usage_validated['usage_property_size_dual'];\n        } //  Validation usage_gbp_entered_es\n\n\n        if (usage_gbp_entered_es) {\n          delete copy_usage_validated['usage_property_size_es'];\n          delete copy_usage_validated['usage_property_size_dual'];\n        } // Validation usage_size_entered_es\n\n\n        if (usage_size_entered_es) {\n          delete copy_usage_validated['usage_property_size_dual'];\n          delete copy_usage_validated['usage_property_size_gs'];\n        }\n        /**-- Gas Values --*/\n        // usage_gas_entered\n\n\n        if (usage_gas_entered) {\n          delete copy_usage_validated['usage_gbp_description_gs'];\n          delete copy_usage_validated['usage_property_size_gs'];\n          delete copy_usage_validated['usage_property_size_dual'];\n        } // Validation usage_gbp_entered_gs\n\n\n        if (usage_gbp_entered_gs) {\n          delete copy_usage_validated['usage_property_size_gs'];\n          delete copy_usage_validated['usage_property_size_dual'];\n        } // Validation usage_size_entered_gs\n\n\n        if (usage_size_entered_gs) {\n          delete copy_usage_validated['usage_property_size_dual'];\n          delete copy_usage_validated['usage_property_size_es'];\n        }\n        /**-- Dual Values --*/\n        // Validation usage_size_entered_dual\n\n\n        if (usage_size_entered_dual) {\n          delete copy_usage_validated['usage_property_size_es'];\n          delete copy_usage_validated['usage_property_size_gs'];\n        } // elec_only\n\n\n        if (elec_only) {\n          console.log('elec_only, Assign Tariff description');\n          delete copy_usage_validated['usage_gas_description'];\n          delete copy_usage_validated['usage_gbp_description_gs'];\n          delete copy_usage_validated['usage_property_size_gs'];\n          delete copy_usage_validated['usage_property_size_dual']; // Update customer information\n\n          updateCustomerInformation({ ...customerInformation,\n            customerAddres,\n            useGas,\n            fuel,\n            supplierInformation,\n            electricityPaymentType: electricityPaymentType_validated,\n            gasPaymentType: gasPaymentType_validated,\n            fuel_description,\n            economy7,\n            tariff_description: {\n              unit_rate: unitRateElec.unit_rate\n            },\n            ...copy_usage_validated\n          });\n        } // gas_only\n\n\n        if (gas_only) {\n          console.log('gas_only, Assign Tariff description');\n          delete copy_usage_validated['usage_kwh_description'];\n          delete copy_usage_validated['usage_gbp_description_es'];\n          delete copy_usage_validated['usage_property_size_es'];\n          delete copy_usage_validated['usage_property_size_dual']; // Update customer information\n\n          updateCustomerInformation({ ...customerInformation,\n            customerAddres,\n            useGas,\n            fuel,\n            supplierInformation,\n            electricityPaymentType: electricityPaymentType_validated,\n            gasPaymentType: gasPaymentType_validated,\n            fuel_description,\n            economy7,\n            tariff_description: {\n              unit_rate: unitRateGas.unit_rate\n            },\n            ...copy_usage_validated\n          });\n        } // dual_active\n\n\n        if (dual_active) {\n          // same_supplier\n          if (same_supplier) {\n            console.log('Same supplier true, Assign Tariff description'); // Update customer information\n\n            updateCustomerInformation({ ...customerInformation,\n              customerAddres,\n              useGas,\n              fuel,\n              supplierInformation,\n              electricityPaymentType: electricityPaymentType_validated,\n              gasPaymentType: gasPaymentType_validated,\n              fuel_description,\n              economy7,\n              tariff_description: {\n                unit_rate_elec: unitRateElec.unit_rate,\n                unit_rate_gas: unitRateGas.unit_rate\n              },\n              ...copy_usage_validated\n            });\n          } else {\n            console.log('Same supplier false, Assign Tariff description'); // Update customer information\n\n            updateCustomerInformation({ ...customerInformation,\n              customerAddres,\n              useGas,\n              fuel,\n              supplierInformation,\n              electricityPaymentType: electricityPaymentType_validated,\n              gasPaymentType: gasPaymentType_validated,\n              fuel_description,\n              economy7,\n              tariff_description_elec: {\n                elec_tariff: {\n                  unit_rate: unitRateElec.unit_rate\n                }\n              },\n              tariff_description_gas: {\n                gas_tariff: {\n                  unit_rate: unitRateGas.unit_rate\n                }\n              },\n              ...copy_usage_validated\n            });\n          }\n        } // Update AvgElec\n\n\n        updateAvgElec(avgElec); // Update AvgGas\n\n        updateAvgGas(avgGas); // Update progress bar\n\n        updateProgressBar({ ...progressBar,\n          step: 7\n        }); // Hide Form Address\n\n        updateShowFormAddres(false); // Show Compare\n\n        updateShowFormCompare(true); // Hide Overlay\n\n        updateShowOverlay(false);\n        break;\n      // Step 7\n\n      case 7:\n        console.log('Step 7');\n        break;\n\n      default:\n        break;\n    }\n  }; // States control\n  // console.log('De aqui para abajo');\n  // console.log(customerAddres);\n  // console.log(useGas);\n  // console.log(fuel);   \n  // console.log(electricityInformation);\n  // console.log(gasInformation);\n  // console.log(supplierInformation);\n\n\n  console.log(customerInformation); // console.log(electricityPaymentType);\n  // console.log(gasPaymentType);\n  // console.log(economy7);\n  // console.log(electricityInformation);\n  // console.log(gasInformation);\n  // console.log(supplierInformation);\n  // console.log(customerInformation);\n  // console.log(electricityPaymentType);\n  // console.log(customerAddres);\n  // console.log(economy7);\n  // console.log(useGas);\n  // console.log(fuel);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      progressBar: progressBar,\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 941,\n      columnNumber: 13\n    }, this), showOverlay ? /*#__PURE__*/_jsxDEV(Overlay, {\n      text: 'Loading data, please wait...',\n      spinner: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 947,\n      columnNumber: 28\n    }, this) : null, /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [showFormPostCode ? /*#__PURE__*/_jsxDEV(Suspense, {\n        fallback: /*#__PURE__*/_jsxDEV(Overlay, {\n          text: 'Loading data, please wait...',\n          spinner: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 953,\n          columnNumber: 45\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(FormPostCode, {\n          addPostCodeData: addPostCodeData,\n          progressBar: progressBar,\n          showScript: showScript,\n          updateShowFormPostCode: updateShowFormPostCode,\n          updateShowFormAddres: updateShowFormAddres,\n          updateProgressBar: updateProgressBar,\n          updateShowScript: updateShowScript\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 954,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 953,\n        columnNumber: 25\n      }, this) : null, showFormAddres ? /*#__PURE__*/_jsxDEV(Suspense, {\n        fallback: /*#__PURE__*/_jsxDEV(Overlay, {\n          text: 'Loading data, please wait...',\n          spinner: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 974,\n          columnNumber: 45\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(FormAddress, {\n          postcodeValue: customerPostCode.postcode,\n          gasInformation: gasInformation,\n          electricityInformation: electricityInformation,\n          progressBar: progressBar,\n          showScript: showScript,\n          customerStep: customerStep,\n          updateCustomerAddress: updateCustomerAddress,\n          updateGasInformation: updateGasInformation,\n          updateElectricityInformation: updateElectricityInformation,\n          updateShowFormPostCode: updateShowFormPostCode,\n          updateShowFormAddres: updateShowFormAddres,\n          updateShowOverlay: updateShowOverlay,\n          updateProgressBar: updateProgressBar,\n          updateShowScript: updateShowScript,\n          updateShowFomrFuelType: updateShowFomrFuelType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 975,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 974,\n        columnNumber: 25\n      }, this) : null, showFormFuelType ? /*#__PURE__*/_jsxDEV(Suspense, {\n        fallback: /*#__PURE__*/_jsxDEV(Overlay, {\n          text: 'Loading data, please wait...',\n          spinner: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1003,\n          columnNumber: 45\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(FormFuelType, {\n          customerInformation: customerInformation,\n          showScript: showScript,\n          fuel: fuel,\n          useGas: useGas,\n          electricityInformation: electricityInformation,\n          gasInformation: gasInformation,\n          supplierInformation: supplierInformation,\n          customerAddres: customerAddres,\n          progressBar: progressBar,\n          updateCustomerInformation: updateCustomerInformation,\n          updateFuel: updateFuel,\n          updateUseGas: updateUseGas,\n          updateElectricityInformation: updateElectricityInformation,\n          updateGasInformation: updateGasInformation,\n          updateSupplierInformation: updateSupplierInformation,\n          updateCustomerAddress: updateCustomerAddress,\n          updateShowFomrFuelType: updateShowFomrFuelType,\n          updateShowFormMpanMprn: updateShowFormMpanMprn,\n          updateShowFormAddres: updateShowFormAddres,\n          updateProgressBar: updateProgressBar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1004,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1003,\n        columnNumber: 25\n      }, this) : null, showFormMpanMprn ? /*#__PURE__*/_jsxDEV(Suspense, {\n        fallback: /*#__PURE__*/_jsxDEV(Overlay, {\n          text: 'Loading data, please wait...',\n          spinner: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1035,\n          columnNumber: 45\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(FormMpanMprn, {\n          customerAddres: customerAddres,\n          electricityInformation: electricityInformation,\n          gasInformation: gasInformation,\n          customerInformation: customerInformation,\n          useGas: useGas,\n          fuel: fuel,\n          progressBar: progressBar,\n          showScript: showScript,\n          updateCustomerAddress: updateCustomerAddress,\n          updateElectricityInformation: updateElectricityInformation,\n          updateGasInformation: updateGasInformation,\n          updateCustomerInformation: updateCustomerInformation,\n          updateProgressBar: updateProgressBar,\n          updateShowFormMpanMprn: updateShowFormMpanMprn,\n          updateShowFormSupply: updateShowFormSupply,\n          updateShowFomrFuelType: updateShowFomrFuelType,\n          updateShowOverlay: updateShowOverlay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1036,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1035,\n        columnNumber: 25\n      }, this) : null, showFormSupply ? /*#__PURE__*/_jsxDEV(Suspense, {\n        fallback: /*#__PURE__*/_jsxDEV(Overlay, {\n          text: 'Loading data, please wait...',\n          spinner: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1065,\n          columnNumber: 45\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(FormSupply, {\n          customerAddres: customerAddres,\n          electricityInformation: electricityInformation,\n          gasInformation: gasInformation,\n          supplierInformation: supplierInformation,\n          useGas: useGas,\n          fuel: fuel,\n          customerInformation: customerInformation,\n          electricityPaymentType: electricityPaymentType,\n          gasPaymentType: gasPaymentType,\n          progressBar: progressBar,\n          showScript: showScript,\n          updateCustomerAddress: updateCustomerAddress,\n          updateShowFormMpanMprn: updateShowFormMpanMprn,\n          updateShowFormSupply: updateShowFormSupply,\n          updateShowE7: updateShowE7,\n          updateSupplierInformation: updateSupplierInformation,\n          updateElectricityInformation: updateElectricityInformation,\n          updateGasInformation: updateGasInformation,\n          updateCustomerInformation: updateCustomerInformation,\n          updateElectricityPaymentType: updateElectricityPaymentType,\n          updateGasPaymentType: updateGasPaymentType,\n          updateFuel: updateFuel,\n          updateProgressBar: updateProgressBar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1066,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1065,\n        columnNumber: 25\n      }, this) : null, showE7 ? /*#__PURE__*/_jsxDEV(Suspense, {\n        fallback: /*#__PURE__*/_jsxDEV(Overlay, {\n          text: 'Loading data, please wait...',\n          spinner: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1101,\n          columnNumber: 45\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(FormE7, {\n          economy7: economy7,\n          customerInformation: customerInformation,\n          electricityPaymentType: electricityPaymentType,\n          gasPaymentType: gasPaymentType,\n          electricityInformation: electricityInformation,\n          gasInformation: gasInformation,\n          supplierInformation: supplierInformation,\n          progressBar: progressBar,\n          showScript: showScript,\n          updateEconomy7: updateEconomy7,\n          updateCustomerInformation: updateCustomerInformation,\n          updateShowFormSupply: updateShowFormSupply,\n          updateShowE7: updateShowE7,\n          updateShowFormTariffs: updateShowFormTariffs,\n          updateElectricityPaymentType: updateElectricityPaymentType,\n          updateGasPaymentType: updateGasPaymentType,\n          updateProgressBar: updateProgressBar,\n          updateShowOverlay: updateShowOverlay,\n          updateSupplierInformation: updateSupplierInformation,\n          updateGasInformation: updateGasInformation,\n          updateElectricityInformation: updateElectricityInformation,\n          updateShowFormUsageKWH: updateShowFormUsageKWH,\n          updateShowFormUsageGAS: updateShowFormUsageGAS\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1102,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1101,\n        columnNumber: 25\n      }, this) : null, showFormTariffs ? /*#__PURE__*/_jsxDEV(Suspense, {\n        fallback: /*#__PURE__*/_jsxDEV(Overlay, {\n          text: 'Loading data, please wait...',\n          spinner: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1137,\n          columnNumber: 45\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(FormTariffs, {\n          customerInformation: customerInformation,\n          showScript: showScript,\n          progressBar: progressBar,\n          updateShowE7: updateShowE7,\n          updateShowFormTariffs: updateShowFormTariffs,\n          updateShowOverlay: updateShowOverlay,\n          updateCustomerInformation: updateCustomerInformation,\n          updateElectricityPaymentType: updateElectricityPaymentType,\n          updateShowFormUsageKWH: updateShowFormUsageKWH,\n          updateShowFormUsageGAS: updateShowFormUsageGAS,\n          updateProgressBar: updateProgressBar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1138,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1137,\n        columnNumber: 25\n      }, this) : null, showFormUsageKWH ? /*#__PURE__*/_jsxDEV(Suspense, {\n        fallback: /*#__PURE__*/_jsxDEV(Overlay, {\n          text: 'Loading data, please wait...',\n          spinner: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1161,\n          columnNumber: 45\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(FormUsageKWH, {\n          customerInformation: customerInformation,\n          progressBar: progressBar,\n          showScript: showScript,\n          updateAvgElec: updateAvgElec,\n          updateCustomerInformation: updateCustomerInformation,\n          updateShowFormUsageKWH: updateShowFormUsageKWH,\n          updateShowFormUsageGAS: updateShowFormUsageGAS,\n          updateShowFormUsageGBP_es: updateShowFormUsageGBP_es,\n          updateShowFormCompare: updateShowFormCompare,\n          updateShowFormTariffs: updateShowFormTariffs,\n          updateProgressBar: updateProgressBar,\n          updateShowOverlay: updateShowOverlay,\n          updateShowE7: updateShowE7\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1162,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1161,\n        columnNumber: 25\n      }, this) : null, showFormUsageGAS ? /*#__PURE__*/_jsxDEV(Suspense, {\n        fallback: /*#__PURE__*/_jsxDEV(Overlay, {\n          text: 'Loading data, please wait...',\n          spinner: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1185,\n          columnNumber: 45\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(FormUsageGAS, {\n          customerInformation: customerInformation,\n          progressBar: progressBar,\n          avgElec: avgElec,\n          showScript: showScript,\n          updateCustomerInformation: updateCustomerInformation,\n          updateShowFormUsageGAS: updateShowFormUsageGAS,\n          updateShowFormUsageKWH: updateShowFormUsageKWH,\n          updateShowFormUsageGBP_gs: updateShowFormUsageGBP_gs,\n          updateShowFormUsageGBP_es: updateShowFormUsageGBP_es,\n          updateShowFormUsageAVG: updateShowFormUsageAVG,\n          updateShowFormCompare: updateShowFormCompare,\n          updateShowFormTariffs: updateShowFormTariffs,\n          updateAvgGas: updateAvgGas,\n          updateAvgElec: updateAvgElec,\n          updateProgressBar: updateProgressBar,\n          updateShowOverlay: updateShowOverlay,\n          updateShowE7: updateShowE7\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1186,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1185,\n        columnNumber: 25\n      }, this) : null, showFormUsageGBP_es ? /*#__PURE__*/_jsxDEV(Suspense, {\n        fallback: /*#__PURE__*/_jsxDEV(Overlay, {\n          text: 'Loading data, please wait...',\n          spinner: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1213,\n          columnNumber: 45\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(FormUsageGBP_es, {\n          customerInformation: customerInformation,\n          progressBar: progressBar,\n          showScript: showScript,\n          updateCustomerInformation: updateCustomerInformation,\n          updateShowFormUsageKWH: updateShowFormUsageKWH,\n          updateShowFormUsageGBP_es: updateShowFormUsageGBP_es,\n          updateShowFormUsageGBP_es: updateShowFormUsageGBP_es,\n          updateShowFormUsageAVG: updateShowFormUsageAVG,\n          updateShowFormUsageGAS: updateShowFormUsageGAS,\n          updateShowFormCompare: updateShowFormCompare,\n          updateAvgElec: updateAvgElec,\n          updateProgressBar: updateProgressBar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1214,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1213,\n        columnNumber: 25\n      }, this) : null, showFormUsageGBP_gs ? /*#__PURE__*/_jsxDEV(Suspense, {\n        fallback: /*#__PURE__*/_jsxDEV(Overlay, {\n          text: 'Loading data, please wait...',\n          spinner: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1236,\n          columnNumber: 45\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(FormUsageGBP_gs, {\n          customerInformation: customerInformation,\n          avgElec: avgElec,\n          progressBar: progressBar,\n          showScript: showScript,\n          updateCustomerInformation: updateCustomerInformation,\n          updateShowFormUsageGAS: updateShowFormUsageGAS,\n          updateShowFormUsageGBP_gs: updateShowFormUsageGBP_gs,\n          updateShowFormUsageAVG: updateShowFormUsageAVG,\n          updateShowFormCompare: updateShowFormCompare,\n          updateAvgGas: updateAvgGas,\n          updateProgressBar: updateProgressBar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1237,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1236,\n        columnNumber: 25\n      }, this) : null, showFormUsageAVG ? /*#__PURE__*/_jsxDEV(Suspense, {\n        fallback: /*#__PURE__*/_jsxDEV(Overlay, {\n          text: 'Loading data, please wait...',\n          spinner: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1258,\n          columnNumber: 45\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(FormUsageAVG, {\n          customerInformation: customerInformation,\n          avgElec: avgElec,\n          avgGas: avgGas,\n          progressBar: progressBar,\n          showScript: showScript,\n          updateCustomerInformation: updateCustomerInformation,\n          updateShowFormUsageAVG: updateShowFormUsageAVG,\n          updateShowFormUsageGBP_es: updateShowFormUsageGBP_es,\n          updateShowFormUsageGBP_gs: updateShowFormUsageGBP_gs,\n          updateShowFormUsageGAS: updateShowFormUsageGAS,\n          updateShowFormCompare: updateShowFormCompare,\n          updateProgressBar: updateProgressBar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1259,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1258,\n        columnNumber: 25\n      }, this) : null, showFormDebt ? /*#__PURE__*/_jsxDEV(Suspense, {\n        fallback: /*#__PURE__*/_jsxDEV(Overlay, {\n          text: 'Loading data, please wait...',\n          spinner: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1281,\n          columnNumber: 45\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(FormDebt, {\n          customerInformation: customerInformation,\n          showScript: showScript,\n          updateCustomerInformation: updateCustomerInformation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1282,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1281,\n        columnNumber: 25\n      }, this) : null, showFormCompare ? /*#__PURE__*/_jsxDEV(Suspense, {\n        fallback: /*#__PURE__*/_jsxDEV(Overlay, {\n          text: 'Loading data, please wait...',\n          spinner: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1295,\n          columnNumber: 45\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(FormCompare, {\n          customerInformation: customerInformation,\n          user: user,\n          electricityInformation: electricityInformation,\n          gasInformation: gasInformation,\n          avgElec: avgElec,\n          avgGas: avgGas,\n          showScript: showScript,\n          progressBar: progressBar,\n          updateCustomerInformation: updateCustomerInformation,\n          updateShowOverlay: updateShowOverlay,\n          updateShowFormCompare: updateShowFormCompare,\n          updateShowFormUsageKWH: updateShowFormUsageKWH,\n          updateShowFormUsageGBP_es: updateShowFormUsageGBP_es,\n          updateShowFormUsageAVG: updateShowFormUsageAVG,\n          updateShowFormUsageGAS: updateShowFormUsageGAS,\n          updateShowFormUsageGBP_gs: updateShowFormUsageGBP_gs,\n          updateShowFormDetails: updateShowFormDetails,\n          updateProgressBar: updateProgressBar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1296,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1295,\n        columnNumber: 25\n      }, this) : null, showFormDetails ? /*#__PURE__*/_jsxDEV(Suspense, {\n        fallback: /*#__PURE__*/_jsxDEV(Overlay, {\n          text: 'Loading data, please wait...',\n          spinner: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1324,\n          columnNumber: 45\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(FormDetails, {\n          customerInformation: customerInformation,\n          progressBar: progressBar,\n          updateCustomerInformation: updateCustomerInformation,\n          updateShowFormCompare: updateShowFormCompare,\n          updateShowFormDetails: updateShowFormDetails,\n          updateProgressBar: updateProgressBar,\n          updateShowFormBankDetails: updateShowFormBankDetails,\n          updateShowOverlay: updateShowOverlay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1325,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1324,\n        columnNumber: 25\n      }, this) : null, showFormBankDetails ? /*#__PURE__*/_jsxDEV(Suspense, {\n        fallback: /*#__PURE__*/_jsxDEV(Overlay, {\n          text: 'Loading data, please wait...',\n          spinner: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1343,\n          columnNumber: 45\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(FormBankDetails, {\n          customerInformation: customerInformation,\n          progressBar: progressBar,\n          updateCustomerInformation: updateCustomerInformation,\n          updateShowFormDetails: updateShowFormDetails,\n          updateProgressBar: updateProgressBar,\n          updateShowFormBankDetails: updateShowFormBankDetails,\n          updateShowFormRating: updateShowFormRating,\n          updateShowOverlay: updateShowOverlay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1344,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1343,\n        columnNumber: 25\n      }, this) : null, showFormRating ? /*#__PURE__*/_jsxDEV(FormRating, {\n        customerInformation: customerInformation,\n        updateCustomerInformation: updateCustomerInformation,\n        updateShowFormRating: updateShowFormRating,\n        updateShowSuccessFul: updateShowSuccessFul\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1362,\n        columnNumber: 25\n      }, this) : null, showSuccessFul ? /*#__PURE__*/_jsxDEV(FormSuccessful, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1375,\n        columnNumber: 25\n      }, this) : null]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1384,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Home, \"mePkMG/xz4zh4O6aqXP4QIY7acU=\");\n\n_c37 = Home;\nexport default Home;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19, _c20, _c21, _c22, _c23, _c24, _c25, _c26, _c27, _c28, _c29, _c30, _c31, _c32, _c33, _c34, _c35, _c36, _c37;\n\n$RefreshReg$(_c, \"FormPostCode$lazy\");\n$RefreshReg$(_c2, \"FormPostCode\");\n$RefreshReg$(_c3, \"FormAddress$lazy\");\n$RefreshReg$(_c4, \"FormAddress\");\n$RefreshReg$(_c5, \"FormFuelType$lazy\");\n$RefreshReg$(_c6, \"FormFuelType\");\n$RefreshReg$(_c7, \"FormMpanMprn$lazy\");\n$RefreshReg$(_c8, \"FormMpanMprn\");\n$RefreshReg$(_c9, \"FormSupply$lazy\");\n$RefreshReg$(_c10, \"FormSupply\");\n$RefreshReg$(_c11, \"FormE7$lazy\");\n$RefreshReg$(_c12, \"FormE7\");\n$RefreshReg$(_c13, \"FormTariffs$lazy\");\n$RefreshReg$(_c14, \"FormTariffs\");\n$RefreshReg$(_c15, \"FormUsageKWH$lazy\");\n$RefreshReg$(_c16, \"FormUsageKWH\");\n$RefreshReg$(_c17, \"FormUsageGAS$lazy\");\n$RefreshReg$(_c18, \"FormUsageGAS\");\n$RefreshReg$(_c19, \"FormUsageGBP_es$lazy\");\n$RefreshReg$(_c20, \"FormUsageGBP_es\");\n$RefreshReg$(_c21, \"FormUsageGBP_gs$lazy\");\n$RefreshReg$(_c22, \"FormUsageGBP_gs\");\n$RefreshReg$(_c23, \"FormUsageAVG$lazy\");\n$RefreshReg$(_c24, \"FormUsageAVG\");\n$RefreshReg$(_c25, \"FormDebt$lazy\");\n$RefreshReg$(_c26, \"FormDebt\");\n$RefreshReg$(_c27, \"FormCompare$lazy\");\n$RefreshReg$(_c28, \"FormCompare\");\n$RefreshReg$(_c29, \"FormDetails$lazy\");\n$RefreshReg$(_c30, \"FormDetails\");\n$RefreshReg$(_c31, \"FormBankDetails$lazy\");\n$RefreshReg$(_c32, \"FormBankDetails\");\n$RefreshReg$(_c33, \"FormRating$lazy\");\n$RefreshReg$(_c34, \"FormRating\");\n$RefreshReg$(_c35, \"FormSuccessful$lazy\");\n$RefreshReg$(_c36, \"FormSuccessful\");\n$RefreshReg$(_c37, \"Home\");","map":{"version":3,"sources":["/Users/juanlugo/Desktop/sp-firebase/src/pages/HomePage/Home.jsx"],"names":["React","useState","lazy","Suspense","useEffect","db","Navbar","Footer","Overlay","FormPostCode","FormAddress","FormFuelType","FormMpanMprn","FormSupply","FormE7","FormTariffs","FormUsageKWH","FormUsageGAS","FormUsageGBP_es","FormUsageGBP_gs","FormUsageAVG","FormDebt","FormCompare","FormDetails","FormBankDetails","FormRating","FormSuccessful","Home","user","progressBar","updateProgressBar","step","showScript","updateShowScript","customerPostCode","updateCustomerPostCode","postcode","customerAddres","updateCustomerAddress","useGas","updateUseGas","fuel","updateFuel","electricityInformation","updateElectricityInformation","gasInformation","updateGasInformation","supplierInformation","updateSupplierInformation","customerInformation","updateCustomerInformation","electricityPaymentType","updateElectricityPaymentType","gasPaymentType","updateGasPaymentType","economy7","updateEconomy7","showOverlay","updateShowOverlay","showFormPostCode","updateShowFormPostCode","showFormAddres","updateShowFormAddres","showFormFuelType","updateShowFomrFuelType","showFormMpanMprn","updateShowFormMpanMprn","showFormSupply","updateShowFormSupply","showE7","updateShowE7","showFormTariffs","updateShowFormTariffs","showFormUsageKWH","updateShowFormUsageKWH","showFormUsageGAS","updateShowFormUsageGAS","showFormUsageGBP_es","updateShowFormUsageGBP_es","showFormUsageGBP_gs","updateShowFormUsageGBP_gs","showFormUsageAVG","updateShowFormUsageAVG","avgElec","updateAvgElec","avgGas","updateAvgGas","showFormDebt","updateShowFormDebt","showFormCompare","updateShowFormCompare","showFormDetails","updateShowFormDetails","showFormBankDetails","updateShowFormBankDetails","showFormRating","updateShowFormRating","showSuccessFul","updateShowSuccessFul","console","log","document","getElementById","addPostCodeData","postCodeData","toUpperCase","customerStep","customer","MPANDetails","dataGas","fuel_description","usage_property_size_dual","usage_property_size_es","usage_property_size_gs","usage_gas_description","usage_gbp_description_gs","usage_kwh_description","usage_gbp_description_es","gas_only","elec_only","same_supplier","dual_active","electricityPaymentType_validated","gasPaymentType_validated","electricity_payment_type_id","electricity_payment_type_method","gas_payment_type_id","gas_payment_type_method","general_unit_rate_elec","unit_rate","general_unit_rate_gas","unitRateElecRef","collection","doc","unitRateElec","get","then","exists","data","catch","error","unitRateGasRef","unitRateGas","copy_electricityPaymentType","copy_gasPaymentType","tariff_description","unit_rate_elec","unit_rate_gas","tariff_description_elec","elec_tariff","tariff_description_gas","gas_tariff","usage_kwh_entered","usage_gbp_entered_es","usage_gbp_entered","usage_size_entered_es","usage_size_entered","usage_gas_entered","usage_gbp_entered_gs","usage_size_entered_gs","usage_size_entered_dual","usage_validated","copy_usage_validated"],"mappings":"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","sourcesContent":["import React, { useState, lazy, Suspense, useEffect } from \"react\";\n// Firebase\nimport { db } from \"../../firebase/firebase\";\n\n// Components\nimport Navbar from \"../../components/Navbar/Navbar\";\nimport Footer from \"../../components/Footer/Footer\";\nimport Overlay from \"../../components/Overlay/Overlay\";\nconst FormPostCode = lazy(() => import('../../components/FormCards/FormPostCode/FormPostCode'));\nconst FormAddress = lazy(() => import('../../components/FormCards/FormAddress/FormAddress'));\nconst FormFuelType = lazy(() => import('../../components/FormCards/FormFuelType/FormFuelType'));\nconst FormMpanMprn = lazy(() => import('../../components/FormCards/FormMPN-MPRN/FormMpanMprn'));\nconst FormSupply = lazy(() => import('../../components/FormCards/FormSupply/FormSupply'));\nconst FormE7 = lazy(() => import('../../components/FormCards/FormE7/FormE7'));\nconst FormTariffs = lazy(() => import('../../components/FormCards/FormTariffs/FormTariffs'));\nconst FormUsageKWH = lazy(() => import('../../components/FormCards/FormsUsage/FormUsageKWH/FormUsageKWH'));\nconst FormUsageGAS = lazy(() => import('../../components/FormCards/FormsUsage/FormUsageGAS/FormUsageGAS'));\nconst FormUsageGBP_es = lazy(() => import('../../components/FormCards/FormsUsage/FormUsageGBP_es/FormUsageGBP_es'));\nconst FormUsageGBP_gs = lazy(() => import('../../components/FormCards/FormsUsage/FormUsageGBP_gs/FormUsageGBP_gs'));\nconst FormUsageAVG = lazy(() => import('../../components/FormCards/FormsUsage/FormUsageAVG/FormUsageAVG'));\nconst FormDebt = lazy(() => import('../../components/FormCards/FormDebt/FormDebt'));\nconst FormCompare = lazy(() => import('../../components/FormCards/FormCompare/FormCompare'));\nconst FormDetails = lazy(() => import('../../components/FormCards/FormDetails/FormDetails'));\nconst FormBankDetails = lazy(() => import('../../components/FormCards/FormBankDetails/FormBankDetails'));\nconst FormRating = lazy(() => import('../../components/FormCards/FormRating/FormRating'));\nconst FormSuccessful = lazy(() => import('../../components/FormCards/FormSuccessful/FormSuccessful'));\n\nfunction Home({ user }) {\n    /* -- STATES -- */\n    // Progress bar \n    const [progressBar, updateProgressBar] = useState({ step: 0 });\n\n    // Script\n    const [showScript, updateShowScript] = useState(true);\n\n    // Customer Postcode State\n    const [customerPostCode, updateCustomerPostCode] = useState({\n        postcode: \"\"\n    });\n\n    // Customer Address\n    const [customerAddres, updateCustomerAddress] = useState({});\n\n    // Use gas \n    const [useGas, updateUseGas] = useState({});\n\n    // Fuel\n    const [fuel, updateFuel] = useState({});\n\n    // Customer Electricity Information\n    const [electricityInformation, updateElectricityInformation] = useState({});\n\n    // Customer Gas Information\n    const [gasInformation, updateGasInformation] = useState({});\n\n    // Customer supplier information\n    const [supplierInformation, updateSupplierInformation] = useState({});\n\n    // Customer Information\n    const [customerInformation, updateCustomerInformation] = useState({});\n\n    // Customer Electricity Payment Type\n    const [electricityPaymentType, updateElectricityPaymentType] = useState({});\n\n    // Customer Gas Payment Type\n    const [gasPaymentType, updateGasPaymentType] = useState({});\n\n    // Customer Economy 7\n    const [economy7, updateEconomy7] = useState({});\n\n    /** -- VIEWS states -- */\n\n    // Show Overlay\n    const [showOverlay, updateShowOverlay] = useState(false);\n\n    // Show Form PostCode\n    const [showFormPostCode, updateShowFormPostCode] = useState(false);\n\n    // Show Form Address\n    const [showFormAddres, updateShowFormAddres] = useState(false);\n\n    // Show form Fuel type\n    const [showFormFuelType, updateShowFomrFuelType] = useState(false);\n\n    // Show Form MPAN/MPRN \n    const [showFormMpanMprn, updateShowFormMpanMprn] = useState(false);\n\n    // Show Form Supply \n    const [showFormSupply, updateShowFormSupply] = useState(false);\n\n    // Show Form E7\n    const [showE7, updateShowE7] = useState(false);\n\n    // Show Form Tariffs\n    const [showFormTariffs, updateShowFormTariffs] = useState(false);\n\n    // Show Form Usage KWH\n    const [showFormUsageKWH, updateShowFormUsageKWH] = useState(false);\n\n    // Show Form Usage GAS\n    const [showFormUsageGAS, updateShowFormUsageGAS] = useState(false);\n\n    // Show Form Usage GBP_es\n    const [showFormUsageGBP_es, updateShowFormUsageGBP_es] = useState(false);\n\n    // Show Form Usage GBP_gs\n    const [showFormUsageGBP_gs, updateShowFormUsageGBP_gs] = useState(false);\n\n    // Show Form Usage AVG\n    const [showFormUsageAVG, updateShowFormUsageAVG] = useState(false);\n\n    // AVG for elec\n    const [avgElec, updateAvgElec] = useState(false);\n\n    // AVG for gas\n    const [avgGas, updateAvgGas] = useState(false);\n\n    // Show Form Debt\n    const [showFormDebt, updateShowFormDebt] = useState(true);\n\n    // Show Form Compare\n    const [showFormCompare, updateShowFormCompare] = useState(false);\n\n    // Show Form Details\n    const [showFormDetails, updateShowFormDetails] = useState(false);\n\n    // Show Form Bank Details\n    const [showFormBankDetails, updateShowFormBankDetails] = useState(false);\n\n    // Show rating\n    const [showFormRating, updateShowFormRating] = useState(false);\n\n    // Show Successful\n    const [showSuccessFul, updateShowSuccessFul] = useState(false);\n\n    useEffect(() => {\n\n\n        console.log(document.getElementById('push'));\n\n\n    }, [customerInformation])\n\n\n    // Add postcode to customer \n    const addPostCodeData = (postcode) => {\n        const postCodeData = postcode;\n        updateCustomerPostCode({\n            postcode: postCodeData.toUpperCase()\n        });\n    };\n\n    // Customer step\n    const customerStep = async (customer) => {\n\n        const { step, customerAddres, MPANDetails, dataGas, fuel, useGas, fuel_description, supplierInformation, electricityPaymentType, gasPaymentType, economy7, usage_property_size_dual, usage_property_size_es, usage_property_size_gs, usage_gas_description, usage_gbp_description_gs, usage_kwh_description, usage_gbp_description_es, avgElec, avgGas } = customer;\n\n        // Postcode\n        const { postcode } = customerAddres;\n\n        // Variables\n        let gas_only;\n        let elec_only;\n        let same_supplier;\n        let dual_active;\n\n        if (step > 1) {\n            /**-- Assign Values   */\n            gas_only = fuel_description.gas_only;\n            elec_only = fuel_description.elec_only;\n            same_supplier = fuel_description.same_supplier;\n            dual_active = fuel_description.dual_active;\n        }\n\n        // Variables for electricity and gas payment methods validated\n        let electricityPaymentType_validated;\n        let gasPaymentType_validated;\n\n        // Validation Electricity payment type\n        let electricity_payment_type_id;\n        let electricity_payment_type_method;\n\n        // Validation Gas payment type\n        let gas_payment_type_id;\n        let gas_payment_type_method;\n\n        // Default unit rate for electricity\n        const general_unit_rate_elec = { unit_rate: 17 };\n\n        // Default unit rate for gas\n        const general_unit_rate_gas = { unit_rate: 27 };\n\n        /**-- Unit rate for electricity --*/\n\n        // DocRef Unit Rate Elec\n        let unitRateElecRef = await db.collection(\"unitRates\").doc('unit_rate_svt_elec');\n\n        let unitRateElec = await unitRateElecRef.get().then((doc) => {\n            if (doc.exists) {\n\n                return doc.data();\n\n            } else {\n\n                // console.log(general_unit_rate_elec);\n\n                return general_unit_rate_elec;\n            }\n        }).catch((error) => {\n\n            console.log(\"Error getting document:\", error);\n            // console.log(general_unit_rate_elec);\n\n            return general_unit_rate_elec;\n        });\n\n        /**-- Unit rate for gas --*/\n\n        // DocRef Unit Rate gas\n        let unitRateGasRef = await db.collection(\"unitRates\").doc('unit_rate_svt_gas');\n\n        let unitRateGas = await unitRateGasRef.get().then((doc) => {\n            if (doc.exists) {\n\n                return doc.data();\n\n            } else {\n\n                // console.log(general_unit_rate_elec);\n\n                return general_unit_rate_gas;\n            }\n        }).catch((error) => {\n\n            console.log(\"Error getting document:\", error);\n            // console.log(general_unit_rate_elec);\n\n            return general_unit_rate_gas;\n        });\n\n        // Step 0 - Enter your postcode\n        switch (step) {\n            case 0:\n                console.log('Step 0');\n\n                // Update progress bar\n                updateProgressBar({ ...progressBar, step: 1 });\n                // Add postcode to customerData\n                addPostCodeData(postcode);\n                // Hidde Form Post Code\n                updateShowFormPostCode(false);\n                // Show Form Address\n                updateShowFormAddres(true);\n                // Hide Overlay\n                updateShowOverlay(false);\n                break;\n\n            // Step 1 - Enter your full address\n            case 1:\n                console.log('Step 1');\n\n                // Add postcode to customerData\n                addPostCodeData(postcode);\n\n                // Update customer address\n                updateCustomerAddress({ ...customerAddres });\n\n                // Update Electricity information\n                updateElectricityInformation({ ...electricityInformation, MPANDetails });\n\n                // Update Gas information\n                updateGasInformation({ ...gasInformation, dataGas });\n\n                // Update progress bar\n                updateProgressBar({ ...progressBar, step: 2 });\n                // Hide Address\n                updateShowFormAddres(false);\n                // Show Form Fuel type\n                updateShowFomrFuelType(true);\n                // Hide Overlay\n                updateShowOverlay(false);\n\n                break;\n\n            // Step 2 - Choose your fuel type\n            case 2:\n                console.log('Step 2');\n\n                // Update customer address\n                updateCustomerAddress({ ...customerAddres });\n\n                // Update Electricity information\n                updateElectricityInformation({ ...electricityInformation, MPANDetails });\n\n                // Update Gas information\n                updateGasInformation({ ...gasInformation, dataGas });\n\n                // Update fuel state\n                updateFuel({ ...fuel });\n\n                // Update useGas\n                updateUseGas({ ...useGas });\n\n                // Update Customer\n                updateCustomerInformation({\n                    ...customerInformation,\n                    fuel_description\n                });\n\n                // Update progress bar\n                updateProgressBar({ ...progressBar, step: 3 });\n                // Hide Address\n                updateShowFormAddres(false);\n                // Show MPAN/MPRN\n                updateShowFormMpanMprn(true);\n                // Hide Overlay\n                updateShowOverlay(false);\n\n                break;\n\n            // Step 3 - Supply number\n            case 3:\n                console.log('Step 3');\n\n                // Update customer address\n                updateCustomerAddress({ ...customerAddres });\n\n                // Update Electricity information\n                updateElectricityInformation({ ...electricityInformation, MPANDetails });\n\n                // Update Gas information\n                updateGasInformation({ ...gasInformation, dataGas });\n\n                // Update fuel state\n                updateFuel({ ...fuel });\n\n                // Update useGas\n                updateUseGas({ ...useGas });\n\n                // Update Supplier Information\n                updateSupplierInformation({ ...supplierInformation });\n\n                // Update Customer\n                updateCustomerInformation({\n                    ...customerInformation,\n                    fuel_description\n                });\n\n                // Update progress bar\n                updateProgressBar({ ...progressBar, step: 4 });\n                // Hide Address\n                updateShowFormAddres(false);\n                // Show Form Supply\n                updateShowFormSupply(true);\n                // Hide Overlay\n                updateShowOverlay(false);\n\n                break;\n\n            // Step 4 - Choose your energy supplier(s)\n            case 4:\n                console.log('Step 4');\n\n                // Update customer address\n                updateCustomerAddress({ ...customerAddres });\n\n                // Update Electricity information\n                updateElectricityInformation({ ...electricityInformation, MPANDetails });\n\n                // Update Gas information\n                updateGasInformation({ ...gasInformation, dataGas });\n\n                // Update fuel state\n                updateFuel({ ...fuel });\n\n                // Update useGas\n                updateUseGas({ ...useGas });\n\n                // Update Supplier Information\n                updateSupplierInformation({ ...supplierInformation });\n\n                /**-- Payment type validation --*/\n\n                // Validation Electricity payment type\n                electricity_payment_type_id = electricityPaymentType.electricity_payment_type_id;\n                electricity_payment_type_method = electricityPaymentType.electricity_payment_type_method;\n\n                if ((electricity_payment_type_id === '') && (electricity_payment_type_method === '')) {\n                    // Delete Electricity payment type if it is empty\n                    const copy_electricityPaymentType = { ...electricityPaymentType };\n                    delete copy_electricityPaymentType['electricity_payment_type_id'];\n                    delete copy_electricityPaymentType['electricity_payment_type_method'];\n                    // Update Electricity payment type\n                    updateElectricityPaymentType({ ...copy_electricityPaymentType });\n                    // Assigning validated value\n                    electricityPaymentType_validated = copy_electricityPaymentType;\n                } else {\n                    // Update Electricity payment type\n                    updateElectricityPaymentType({ ...electricityPaymentType });\n                    // Assigning validated value\n                    electricityPaymentType_validated = electricityPaymentType;\n                }\n\n                // Validation Gas payment type\n                gas_payment_type_id = gasPaymentType.gas_payment_type_id;\n                gas_payment_type_method = gasPaymentType.gas_payment_type_method;\n\n                if ((gas_payment_type_id === '') && (gas_payment_type_method === '')) {\n                    // Delete Gas payment type if it is empty\n                    const copy_gasPaymentType = { ...gasPaymentType };\n                    delete copy_gasPaymentType['gas_payment_type_id'];\n                    delete copy_gasPaymentType['gas_payment_type_method'];\n                    // Update Gas payment type\n                    updateGasPaymentType({ ...copy_gasPaymentType });\n                    // Assigning validated value\n                    gasPaymentType_validated = copy_gasPaymentType;\n                } else {\n                    // Update Gas payment type\n                    updateGasPaymentType({ ...gasPaymentType });\n                    // Assigning validated value\n                    gasPaymentType_validated = gasPaymentType;\n                }\n\n                // Update customer information\n                updateCustomerInformation({\n                    ...customerInformation,\n                    customerAddres,\n                    useGas,\n                    fuel,\n                    supplierInformation,\n                    electricityPaymentType: electricityPaymentType_validated,\n                    gasPaymentType: gasPaymentType_validated,\n                    fuel_description,\n                });\n\n                // Update progress bar\n                updateProgressBar({ ...progressBar, step: 5 });\n                // Hide Address\n                updateShowFormAddres(false);\n                // Show FormE7\n                updateShowE7(true);\n                // Hide Overlay\n                updateShowOverlay(false);\n\n                break;\n\n            // Step 5\n            case 5:\n                console.log('Step 5');\n\n                // Update customer address\n                updateCustomerAddress({ ...customerAddres });\n\n                // Update Electricity information\n                updateElectricityInformation({ ...electricityInformation, MPANDetails });\n\n                // Update Gas information\n                updateGasInformation({ ...gasInformation, dataGas });\n\n                // Update fuel state\n                updateFuel({ ...fuel });\n\n                // Update useGas\n                updateUseGas({ ...useGas });\n\n                // Update Supplier Information\n                updateSupplierInformation({ ...supplierInformation });\n\n                /**-- Payment type validation --*/\n\n                // Validation Electricity payment type\n                electricity_payment_type_id = electricityPaymentType.electricity_payment_type_id;\n                electricity_payment_type_method = electricityPaymentType.electricity_payment_type_method;\n\n                if ((electricity_payment_type_id === '') && (electricity_payment_type_method === '')) {\n                    // Delete Electricity payment type if it is empty\n                    const copy_electricityPaymentType = { ...electricityPaymentType };\n                    delete copy_electricityPaymentType['electricity_payment_type_id'];\n                    delete copy_electricityPaymentType['electricity_payment_type_method'];\n                    // Update Electricity payment type\n                    updateElectricityPaymentType({ ...copy_electricityPaymentType });\n                    // Assigning validated value\n                    electricityPaymentType_validated = copy_electricityPaymentType;\n                } else {\n                    // Update Electricity payment type\n                    updateElectricityPaymentType({ ...electricityPaymentType });\n                    // Assigning validated value\n                    electricityPaymentType_validated = electricityPaymentType;\n                }\n\n                // Validation Gas payment type\n                gas_payment_type_id = gasPaymentType.gas_payment_type_id;\n                gas_payment_type_method = gasPaymentType.gas_payment_type_method;\n\n                if ((gas_payment_type_id === '') && (gas_payment_type_method === '')) {\n                    // Delete Gas payment type if it is empty\n                    const copy_gasPaymentType = { ...gasPaymentType };\n                    delete copy_gasPaymentType['gas_payment_type_id'];\n                    delete copy_gasPaymentType['gas_payment_type_method'];\n                    // Update Gas payment type\n                    updateGasPaymentType({ ...copy_gasPaymentType });\n                    // Assigning validated value\n                    gasPaymentType_validated = copy_gasPaymentType;\n                } else {\n                    // Update Gas payment type\n                    updateGasPaymentType({ ...gasPaymentType });\n                    // Assigning validated value\n                    gasPaymentType_validated = gasPaymentType;\n                }\n\n                // Update Economy 7\n                updateEconomy7({\n                    economy7: {\n                        ...economy7\n                    }\n                });\n\n                /**-- Assign Tariff description  */\n\n                // elec_only\n                if (elec_only) {\n                    console.log('elec_only, Assign Tariff description');\n\n                    // Update customer information\n                    updateCustomerInformation({\n                        ...customerInformation,\n                        customerAddres,\n                        useGas,\n                        fuel,\n                        supplierInformation,\n                        electricityPaymentType: electricityPaymentType_validated,\n                        gasPaymentType: gasPaymentType_validated,\n                        fuel_description,\n                        economy7,\n                        tariff_description: {\n                            unit_rate: unitRateElec.unit_rate\n                        }\n                    });\n                }\n\n                // gas_only\n                if (gas_only) {\n                    console.log('gas_only, Assign Tariff description');\n\n                    // Update customer information\n                    updateCustomerInformation({\n                        ...customerInformation,\n                        customerAddres,\n                        useGas,\n                        fuel,\n                        supplierInformation,\n                        electricityPaymentType: electricityPaymentType_validated,\n                        gasPaymentType: gasPaymentType_validated,\n                        fuel_description,\n                        economy7,\n                        tariff_description: {\n                            unit_rate: unitRateGas.unit_rate\n                        }\n                    });\n                }\n\n                // dual_active\n                if (dual_active) {\n                    // same_supplier\n                    if (same_supplier) {\n                        console.log('Same supplier true, Assign Tariff description');\n\n                        // Update customer information\n                        updateCustomerInformation({\n                            ...customerInformation,\n                            customerAddres,\n                            useGas,\n                            fuel,\n                            supplierInformation,\n                            electricityPaymentType: electricityPaymentType_validated,\n                            gasPaymentType: gasPaymentType_validated,\n                            fuel_description,\n                            economy7,\n                            tariff_description: {\n                                unit_rate_elec: unitRateElec.unit_rate,\n                                unit_rate_gas: unitRateGas.unit_rate,\n                            }\n                        });\n                    } else {\n                        console.log('Same supplier false, Assign Tariff description');\n\n                        // Update customer information\n                        updateCustomerInformation({\n                            ...customerInformation,\n                            customerAddres,\n                            useGas,\n                            fuel,\n                            supplierInformation,\n                            electricityPaymentType: electricityPaymentType_validated,\n                            gasPaymentType: gasPaymentType_validated,\n                            fuel_description,\n                            economy7,\n                            tariff_description_elec: {\n                                elec_tariff: {\n                                    unit_rate: unitRateElec.unit_rate\n                                }\n                            },\n                            tariff_description_gas: {\n                                gas_tariff: {\n                                    unit_rate: unitRateGas.unit_rate\n                                }\n                            }\n                        });\n                    }\n                }\n\n                // Update progress bar\n                updateProgressBar({ ...progressBar, step: 6 });\n                // Hide Address\n                updateShowFormAddres(false);\n\n                // Conditional to usage section\n                if (gas_only) {\n                    // Show Gas\n                    updateShowFormUsageGAS(true)\n                } else {\n                    // Show KWH\n                    updateShowFormUsageKWH(true);\n                }\n\n                // Hide Overlay\n                updateShowOverlay(false);\n\n                break;\n\n            // Step 6\n            case 6:\n                console.log('Step 6');\n\n                // Update customer address\n                updateCustomerAddress({ ...customerAddres });\n\n                // Update Electricity information\n                updateElectricityInformation({ ...electricityInformation, MPANDetails });\n\n                // Update Gas information\n                updateGasInformation({ ...gasInformation, dataGas });\n\n                // Update fuel state\n                updateFuel({ ...fuel });\n\n                // Update useGas\n                updateUseGas({ ...useGas });\n\n                // Update Supplier Information\n                updateSupplierInformation({ ...supplierInformation });\n\n                /**-- Payment type validation --*/\n\n                // Validation Electricity payment type\n                electricity_payment_type_id = electricityPaymentType.electricity_payment_type_id;\n                electricity_payment_type_method = electricityPaymentType.electricity_payment_type_method;\n\n                if ((electricity_payment_type_id === '') && (electricity_payment_type_method === '')) {\n                    // Delete Electricity payment type if it is empty\n                    const copy_electricityPaymentType = { ...electricityPaymentType };\n                    delete copy_electricityPaymentType['electricity_payment_type_id'];\n                    delete copy_electricityPaymentType['electricity_payment_type_method'];\n                    // Update Electricity payment type\n                    updateElectricityPaymentType({ ...copy_electricityPaymentType });\n                    // Assigning validated value\n                    electricityPaymentType_validated = copy_electricityPaymentType;\n                } else {\n                    // Update Electricity payment type\n                    updateElectricityPaymentType({ ...electricityPaymentType });\n                    // Assigning validated value\n                    electricityPaymentType_validated = electricityPaymentType;\n                }\n\n                // Validation Gas payment type\n                gas_payment_type_id = gasPaymentType.gas_payment_type_id;\n                gas_payment_type_method = gasPaymentType.gas_payment_type_method;\n\n                if ((gas_payment_type_id === '') && (gas_payment_type_method === '')) {\n                    // Delete Gas payment type if it is empty\n                    const copy_gasPaymentType = { ...gasPaymentType };\n                    delete copy_gasPaymentType['gas_payment_type_id'];\n                    delete copy_gasPaymentType['gas_payment_type_method'];\n                    // Update Gas payment type\n                    updateGasPaymentType({ ...copy_gasPaymentType });\n                    // Assigning validated value\n                    gasPaymentType_validated = copy_gasPaymentType;\n                } else {\n                    // Update Gas payment type\n                    updateGasPaymentType({ ...gasPaymentType });\n                    // Assigning validated value\n                    gasPaymentType_validated = gasPaymentType;\n                }\n\n                // Update Economy 7\n                updateEconomy7({\n                    economy7: {\n                        ...economy7\n                    }\n                });\n\n                /**-- Assign Tariff description && Usage */\n\n                // Entered usage boolean values \n                // Elec\n                const usage_kwh_entered = usage_kwh_description.usage_kwh_entered;\n                const usage_gbp_entered_es = usage_gbp_description_es.usage_gbp_entered;\n                const usage_size_entered_es = usage_property_size_es.usage_size_entered;\n\n                // Gas\n                const usage_gas_entered = usage_gas_description.usage_kwh_entered;\n                const usage_gbp_entered_gs = usage_gbp_description_gs.usage_gbp_entered;\n                const usage_size_entered_gs = usage_property_size_gs.usage_size_entered;\n\n                // Dual\n                const usage_size_entered_dual = usage_property_size_dual.usage_size_entered;\n\n                // usage_validated\n                const usage_validated = {\n                    usage_kwh_description,\n                    usage_gbp_description_es,\n                    usage_gas_description,\n                    usage_gbp_description_gs,\n                    usage_property_size_es,\n                    usage_property_size_gs,\n                    usage_property_size_dual\n                };\n\n                // copy_usage_validated\n                let copy_usage_validated = { ...usage_validated };\n\n                /**-- Electricity Values --*/\n\n                // Validation usage_kwh_entered\n                if (usage_kwh_entered) {\n                    delete copy_usage_validated['usage_gbp_description_es'];\n                    delete copy_usage_validated['usage_property_size_es'];\n                    delete copy_usage_validated['usage_property_size_dual'];\n                }\n\n                //  Validation usage_gbp_entered_es\n                if (usage_gbp_entered_es) {\n                    delete copy_usage_validated['usage_property_size_es'];\n                    delete copy_usage_validated['usage_property_size_dual'];\n                }\n\n                // Validation usage_size_entered_es\n                if (usage_size_entered_es) {\n                    delete copy_usage_validated['usage_property_size_dual'];\n                    delete copy_usage_validated['usage_property_size_gs'];\n                }\n\n                /**-- Gas Values --*/\n\n                // usage_gas_entered\n                if (usage_gas_entered) {\n                    delete copy_usage_validated['usage_gbp_description_gs'];\n                    delete copy_usage_validated['usage_property_size_gs'];\n                    delete copy_usage_validated['usage_property_size_dual'];\n                }\n\n                // Validation usage_gbp_entered_gs\n                if (usage_gbp_entered_gs) {\n                    delete copy_usage_validated['usage_property_size_gs'];\n                    delete copy_usage_validated['usage_property_size_dual'];\n                }\n\n                // Validation usage_size_entered_gs\n                if (usage_size_entered_gs) {\n                    delete copy_usage_validated['usage_property_size_dual'];\n                    delete copy_usage_validated['usage_property_size_es'];\n                }\n\n                /**-- Dual Values --*/\n\n                // Validation usage_size_entered_dual\n                if (usage_size_entered_dual) {\n                    delete copy_usage_validated['usage_property_size_es'];\n                    delete copy_usage_validated['usage_property_size_gs'];\n                }\n\n                // elec_only\n                if (elec_only) {\n                    console.log('elec_only, Assign Tariff description');\n\n                    delete copy_usage_validated['usage_gas_description'];\n                    delete copy_usage_validated['usage_gbp_description_gs'];\n                    delete copy_usage_validated['usage_property_size_gs'];\n                    delete copy_usage_validated['usage_property_size_dual'];\n\n                    // Update customer information\n                    updateCustomerInformation({\n                        ...customerInformation,\n                        customerAddres,\n                        useGas,\n                        fuel,\n                        supplierInformation,\n                        electricityPaymentType: electricityPaymentType_validated,\n                        gasPaymentType: gasPaymentType_validated,\n                        fuel_description,\n                        economy7,\n                        tariff_description: {\n                            unit_rate: unitRateElec.unit_rate\n                        },\n                        ...copy_usage_validated\n                    });\n                }\n\n                // gas_only\n                if (gas_only) {\n                    console.log('gas_only, Assign Tariff description');\n\n                    delete copy_usage_validated['usage_kwh_description'];\n                    delete copy_usage_validated['usage_gbp_description_es'];\n                    delete copy_usage_validated['usage_property_size_es'];\n                    delete copy_usage_validated['usage_property_size_dual'];\n\n                    // Update customer information\n                    updateCustomerInformation({\n                        ...customerInformation,\n                        customerAddres,\n                        useGas,\n                        fuel,\n                        supplierInformation,\n                        electricityPaymentType: electricityPaymentType_validated,\n                        gasPaymentType: gasPaymentType_validated,\n                        fuel_description,\n                        economy7,\n                        tariff_description: {\n                            unit_rate: unitRateGas.unit_rate\n                        },\n                        ...copy_usage_validated\n                    });\n                }\n\n                // dual_active\n                if (dual_active) {\n                    // same_supplier\n                    if (same_supplier) {\n                        console.log('Same supplier true, Assign Tariff description');\n\n                        // Update customer information\n                        updateCustomerInformation({\n                            ...customerInformation,\n                            customerAddres,\n                            useGas,\n                            fuel,\n                            supplierInformation,\n                            electricityPaymentType: electricityPaymentType_validated,\n                            gasPaymentType: gasPaymentType_validated,\n                            fuel_description,\n                            economy7,\n                            tariff_description: {\n                                unit_rate_elec: unitRateElec.unit_rate,\n                                unit_rate_gas: unitRateGas.unit_rate,\n                            },\n                            ...copy_usage_validated\n                        });\n\n                    } else {\n                        console.log('Same supplier false, Assign Tariff description');\n\n                        // Update customer information\n                        updateCustomerInformation({\n                            ...customerInformation,\n                            customerAddres,\n                            useGas,\n                            fuel,\n                            supplierInformation,\n                            electricityPaymentType: electricityPaymentType_validated,\n                            gasPaymentType: gasPaymentType_validated,\n                            fuel_description,\n                            economy7,\n                            tariff_description_elec: {\n                                elec_tariff: {\n                                    unit_rate: unitRateElec.unit_rate\n                                }\n                            },\n                            tariff_description_gas: {\n                                gas_tariff: {\n                                    unit_rate: unitRateGas.unit_rate\n                                }\n                            },\n                            ...copy_usage_validated\n                        });\n                    }\n                }\n\n                // Update AvgElec\n                updateAvgElec(avgElec);\n                // Update AvgGas\n                updateAvgGas(avgGas);\n\n                // Update progress bar\n                updateProgressBar({ ...progressBar, step: 7 });\n                // Hide Form Address\n                updateShowFormAddres(false);\n                // Show Compare\n                updateShowFormCompare(true);\n\n                // Hide Overlay\n                updateShowOverlay(false);\n\n                break;\n\n            // Step 7\n            case 7:\n                console.log('Step 7');\n                break;\n            default:\n                break;\n        }\n    }\n\n    // States control\n    // console.log('De aqui para abajo');\n    // console.log(customerAddres);\n    // console.log(useGas);\n    // console.log(fuel);   \n    // console.log(electricityInformation);\n    // console.log(gasInformation);\n    // console.log(supplierInformation);\n    console.log(customerInformation);\n    // console.log(electricityPaymentType);\n    // console.log(gasPaymentType);\n    // console.log(economy7);\n\n    // console.log(electricityInformation);\n    // console.log(gasInformation);\n    // console.log(supplierInformation);\n    // console.log(customerInformation);\n    // console.log(electricityPaymentType);\n    // console.log(customerAddres);\n    // console.log(economy7);\n    // console.log(useGas);\n    // console.log(fuel);\n\n    return (\n        <>\n            {/* Navbar */}\n            <Navbar\n                progressBar={progressBar}\n                user={user}\n            />\n\n            {/* Overlay */}\n            {showOverlay ? <Overlay text={'Loading data, please wait...'} spinner={true} /> : null}\n\n            <>\n                {/* Postcode form*/}\n                {showFormPostCode ?\n                    (\n                        <Suspense fallback={<Overlay text={'Loading data, please wait...'} spinner={true} />}>\n                            <FormPostCode\n                                addPostCodeData={addPostCodeData}\n                                progressBar={progressBar}\n                                showScript={showScript}\n                                updateShowFormPostCode={updateShowFormPostCode}\n                                updateShowFormAddres={updateShowFormAddres}\n                                updateProgressBar={updateProgressBar}\n                                updateShowScript={updateShowScript}\n                            />\n                        </Suspense>\n                    )\n                    :\n                    (\n                        null\n                    )\n                }\n\n                {/* Address form*/}\n                {showFormAddres ?\n                    (\n                        <Suspense fallback={<Overlay text={'Loading data, please wait...'} spinner={true} />}>\n                            <FormAddress\n                                postcodeValue={customerPostCode.postcode}\n                                gasInformation={gasInformation}\n                                electricityInformation={electricityInformation}\n                                progressBar={progressBar}\n                                showScript={showScript}\n                                customerStep={customerStep}\n                                updateCustomerAddress={updateCustomerAddress}\n                                updateGasInformation={updateGasInformation}\n                                updateElectricityInformation={updateElectricityInformation}\n                                updateShowFormPostCode={updateShowFormPostCode}\n                                updateShowFormAddres={updateShowFormAddres}\n                                updateShowOverlay={updateShowOverlay}\n                                updateProgressBar={updateProgressBar}\n                                updateShowScript={updateShowScript}\n                                updateShowFomrFuelType={updateShowFomrFuelType}\n                            />\n                        </Suspense>\n                    )\n                    :\n                    (\n                        null\n                    )\n                }\n\n                {/* Fuel type */}\n                {showFormFuelType ?\n                    (\n                        <Suspense fallback={<Overlay text={'Loading data, please wait...'} spinner={true} />}>\n                            <FormFuelType\n                                customerInformation={customerInformation}\n                                showScript={showScript}\n                                fuel={fuel}\n                                useGas={useGas}\n                                electricityInformation={electricityInformation}\n                                gasInformation={gasInformation}\n                                supplierInformation={supplierInformation}\n                                customerAddres={customerAddres}\n                                progressBar={progressBar}\n                                updateCustomerInformation={updateCustomerInformation}\n                                updateFuel={updateFuel}\n                                updateUseGas={updateUseGas}\n                                updateElectricityInformation={updateElectricityInformation}\n                                updateGasInformation={updateGasInformation}\n                                updateSupplierInformation={updateSupplierInformation}\n                                updateCustomerAddress={updateCustomerAddress}\n                                updateShowFomrFuelType={updateShowFomrFuelType}\n                                updateShowFormMpanMprn={updateShowFormMpanMprn}\n                                updateShowFormAddres={updateShowFormAddres}\n                                updateProgressBar={updateProgressBar}\n                            />\n                        </Suspense>\n                    )\n                    :\n                    null\n                }\n\n                {/* MPAN/MPRN form*/}\n                {showFormMpanMprn ?\n                    (\n                        <Suspense fallback={<Overlay text={'Loading data, please wait...'} spinner={true} />}>\n                            <FormMpanMprn\n                                customerAddres={customerAddres}\n                                electricityInformation={electricityInformation}\n                                gasInformation={gasInformation}\n                                customerInformation={customerInformation}\n                                useGas={useGas}\n                                fuel={fuel}\n                                progressBar={progressBar}\n                                showScript={showScript}\n                                updateCustomerAddress={updateCustomerAddress}\n                                updateElectricityInformation={updateElectricityInformation}\n                                updateGasInformation={updateGasInformation}\n                                updateCustomerInformation={updateCustomerInformation}\n                                updateProgressBar={updateProgressBar}\n                                updateShowFormMpanMprn={updateShowFormMpanMprn}\n                                updateShowFormSupply={updateShowFormSupply}\n                                updateShowFomrFuelType={updateShowFomrFuelType}\n                                updateShowOverlay={updateShowOverlay}\n                            />\n                        </Suspense>\n                    )\n                    :\n                    (\n                        null\n                    )\n                }\n                {/* Supplier Information form*/}\n                {showFormSupply ?\n                    (\n                        <Suspense fallback={<Overlay text={'Loading data, please wait...'} spinner={true} />}>\n                            <FormSupply\n                                customerAddres={customerAddres}\n                                electricityInformation={electricityInformation}\n                                gasInformation={gasInformation}\n                                supplierInformation={supplierInformation}\n                                useGas={useGas}\n                                fuel={fuel}\n                                customerInformation={customerInformation}\n                                electricityPaymentType={electricityPaymentType}\n                                gasPaymentType={gasPaymentType}\n                                progressBar={progressBar}\n                                showScript={showScript}\n                                updateCustomerAddress={updateCustomerAddress}\n                                updateShowFormMpanMprn={updateShowFormMpanMprn}\n                                updateShowFormSupply={updateShowFormSupply}\n                                updateShowE7={updateShowE7}\n                                updateSupplierInformation={updateSupplierInformation}\n                                updateElectricityInformation={updateElectricityInformation}\n                                updateGasInformation={updateGasInformation}\n                                updateCustomerInformation={updateCustomerInformation}\n                                updateElectricityPaymentType={updateElectricityPaymentType}\n                                updateGasPaymentType={updateGasPaymentType}\n                                updateFuel={updateFuel}\n                                updateProgressBar={updateProgressBar}\n                            />\n                        </Suspense>\n                    )\n                    :\n                    (\n                        null\n                    )\n                }\n                {/* Economy 7 form */}\n                {showE7 ?\n                    (\n                        <Suspense fallback={<Overlay text={'Loading data, please wait...'} spinner={true} />}>\n                            <FormE7\n                                economy7={economy7}\n                                customerInformation={customerInformation}\n                                electricityPaymentType={electricityPaymentType}\n                                gasPaymentType={gasPaymentType}\n                                electricityInformation={electricityInformation}\n                                gasInformation={gasInformation}\n                                supplierInformation={supplierInformation}\n                                progressBar={progressBar}\n                                showScript={showScript}\n                                updateEconomy7={updateEconomy7}\n                                updateCustomerInformation={updateCustomerInformation}\n                                updateShowFormSupply={updateShowFormSupply}\n                                updateShowE7={updateShowE7}\n                                updateShowFormTariffs={updateShowFormTariffs}\n                                updateElectricityPaymentType={updateElectricityPaymentType}\n                                updateGasPaymentType={updateGasPaymentType}\n                                updateProgressBar={updateProgressBar}\n                                updateShowOverlay={updateShowOverlay}\n                                updateSupplierInformation={updateSupplierInformation}\n                                updateGasInformation={updateGasInformation}\n                                updateElectricityInformation={updateElectricityInformation}\n                                updateShowFormUsageKWH={updateShowFormUsageKWH}\n                                updateShowFormUsageGAS={updateShowFormUsageGAS}\n                            />\n                        </Suspense>\n                    )\n                    :\n                    (\n                        null\n                    )\n                }\n                {/* Form Tariffs */}\n                {showFormTariffs ?\n                    (\n                        <Suspense fallback={<Overlay text={'Loading data, please wait...'} spinner={true} />}>\n                            <FormTariffs\n                                customerInformation={customerInformation}\n                                showScript={showScript}\n                                progressBar={progressBar}\n                                updateShowE7={updateShowE7}\n                                updateShowFormTariffs={updateShowFormTariffs}\n                                updateShowOverlay={updateShowOverlay}\n                                updateCustomerInformation={updateCustomerInformation}\n                                updateElectricityPaymentType={updateElectricityPaymentType}\n                                updateShowFormUsageKWH={updateShowFormUsageKWH}\n                                updateShowFormUsageGAS={updateShowFormUsageGAS}\n                                updateProgressBar={updateProgressBar}\n                            />\n                        </Suspense>\n                    )\n                    :\n                    (\n                        null\n                    )\n                }\n                {/* Form Usage */}\n                {showFormUsageKWH ?\n                    (\n                        <Suspense fallback={<Overlay text={'Loading data, please wait...'} spinner={true} />}>\n                            <FormUsageKWH\n                                customerInformation={customerInformation}\n                                progressBar={progressBar}\n                                showScript={showScript}\n                                updateAvgElec={updateAvgElec}\n                                updateCustomerInformation={updateCustomerInformation}\n                                updateShowFormUsageKWH={updateShowFormUsageKWH}\n                                updateShowFormUsageGAS={updateShowFormUsageGAS}\n                                updateShowFormUsageGBP_es={updateShowFormUsageGBP_es}\n                                updateShowFormCompare={updateShowFormCompare}\n                                updateShowFormTariffs={updateShowFormTariffs}\n                                updateProgressBar={updateProgressBar}\n                                updateShowOverlay={updateShowOverlay}\n                                updateShowE7={updateShowE7}\n                            />\n                        </Suspense>\n                    )\n                    :\n                    null\n                }\n                {/* Form Usage */}\n                {showFormUsageGAS ?\n                    (\n                        <Suspense fallback={<Overlay text={'Loading data, please wait...'} spinner={true} />}>\n                            <FormUsageGAS\n                                customerInformation={customerInformation}\n                                progressBar={progressBar}\n                                avgElec={avgElec}\n                                showScript={showScript}\n                                updateCustomerInformation={updateCustomerInformation}\n                                updateShowFormUsageGAS={updateShowFormUsageGAS}\n                                updateShowFormUsageKWH={updateShowFormUsageKWH}\n                                updateShowFormUsageGBP_gs={updateShowFormUsageGBP_gs}\n                                updateShowFormUsageGBP_es={updateShowFormUsageGBP_es}\n                                updateShowFormUsageAVG={updateShowFormUsageAVG}\n                                updateShowFormCompare={updateShowFormCompare}\n                                updateShowFormTariffs={updateShowFormTariffs}\n                                updateAvgGas={updateAvgGas}\n                                updateAvgElec={updateAvgElec}\n                                updateProgressBar={updateProgressBar}\n                                updateShowOverlay={updateShowOverlay}\n                                updateShowE7={updateShowE7}\n                            />\n                        </Suspense>\n                    )\n                    :\n                    null\n                }\n                {/* Form Usage GBP */}\n                {showFormUsageGBP_es ?\n                    (\n                        <Suspense fallback={<Overlay text={'Loading data, please wait...'} spinner={true} />}>\n                            <FormUsageGBP_es\n                                customerInformation={customerInformation}\n                                progressBar={progressBar}\n                                showScript={showScript}\n                                updateCustomerInformation={updateCustomerInformation}\n                                updateShowFormUsageKWH={updateShowFormUsageKWH}\n                                updateShowFormUsageGBP_es={updateShowFormUsageGBP_es}\n                                updateShowFormUsageGBP_es={updateShowFormUsageGBP_es}\n                                updateShowFormUsageAVG={updateShowFormUsageAVG}\n                                updateShowFormUsageGAS={updateShowFormUsageGAS}\n                                updateShowFormCompare={updateShowFormCompare}\n                                updateAvgElec={updateAvgElec}\n                                updateProgressBar={updateProgressBar}\n                            />\n                        </Suspense>\n                    )\n                    :\n                    null\n                }\n                {/* Form Usage GBP */}\n                {showFormUsageGBP_gs ?\n                    (\n                        <Suspense fallback={<Overlay text={'Loading data, please wait...'} spinner={true} />}>\n                            <FormUsageGBP_gs\n                                customerInformation={customerInformation}\n                                avgElec={avgElec}\n                                progressBar={progressBar}\n                                showScript={showScript}\n                                updateCustomerInformation={updateCustomerInformation}\n                                updateShowFormUsageGAS={updateShowFormUsageGAS}\n                                updateShowFormUsageGBP_gs={updateShowFormUsageGBP_gs}\n                                updateShowFormUsageAVG={updateShowFormUsageAVG}\n                                updateShowFormCompare={updateShowFormCompare}\n                                updateAvgGas={updateAvgGas}\n                                updateProgressBar={updateProgressBar}\n                            />\n                        </Suspense>\n                    )\n                    :\n                    null\n                }\n                {/* Form Usage AVG*/}\n                {showFormUsageAVG ?\n                    (\n                        <Suspense fallback={<Overlay text={'Loading data, please wait...'} spinner={true} />}>\n                            <FormUsageAVG\n                                customerInformation={customerInformation}\n                                avgElec={avgElec}\n                                avgGas={avgGas}\n                                progressBar={progressBar}\n                                showScript={showScript}\n                                updateCustomerInformation={updateCustomerInformation}\n                                updateShowFormUsageAVG={updateShowFormUsageAVG}\n                                updateShowFormUsageGBP_es={updateShowFormUsageGBP_es}\n                                updateShowFormUsageGBP_gs={updateShowFormUsageGBP_gs}\n                                updateShowFormUsageGAS={updateShowFormUsageGAS}\n                                updateShowFormCompare={updateShowFormCompare}\n                                updateProgressBar={updateProgressBar}\n                            />\n                        </Suspense>\n                    )\n                    :\n                    null\n                }\n                {/* Form Debt */}\n                {showFormDebt ?\n                    (\n                        <Suspense fallback={<Overlay text={'Loading data, please wait...'} spinner={true} />}>\n                            <FormDebt\n                                customerInformation={customerInformation}\n                                showScript={showScript}\n                                updateCustomerInformation={updateCustomerInformation}\n                            />\n                        </Suspense>\n                    )\n                    :\n                    null\n                }\n                {/* Form Compare */}\n                {showFormCompare ?\n                    (\n                        <Suspense fallback={<Overlay text={'Loading data, please wait...'} spinner={true} />}>\n                            <FormCompare\n                                customerInformation={customerInformation}\n                                user={user}\n                                electricityInformation={electricityInformation}\n                                gasInformation={gasInformation}\n                                avgElec={avgElec}\n                                avgGas={avgGas}\n                                showScript={showScript}\n                                progressBar={progressBar}\n                                updateCustomerInformation={updateCustomerInformation}\n                                updateShowOverlay={updateShowOverlay}\n                                updateShowFormCompare={updateShowFormCompare}\n                                updateShowFormUsageKWH={updateShowFormUsageKWH}\n                                updateShowFormUsageGBP_es={updateShowFormUsageGBP_es}\n                                updateShowFormUsageAVG={updateShowFormUsageAVG}\n                                updateShowFormUsageGAS={updateShowFormUsageGAS}\n                                updateShowFormUsageGBP_gs={updateShowFormUsageGBP_gs}\n                                updateShowFormDetails={updateShowFormDetails}\n                                updateProgressBar={updateProgressBar}\n                            />\n                        </Suspense>\n                    )\n                    :\n                    null\n                }\n                {/* Form Details */}\n                {showFormDetails ?\n                    (\n                        <Suspense fallback={<Overlay text={'Loading data, please wait...'} spinner={true} />}>\n                            <FormDetails\n                                customerInformation={customerInformation}\n                                progressBar={progressBar}\n                                updateCustomerInformation={updateCustomerInformation}\n                                updateShowFormCompare={updateShowFormCompare}\n                                updateShowFormDetails={updateShowFormDetails}\n                                updateProgressBar={updateProgressBar}\n                                updateShowFormBankDetails={updateShowFormBankDetails}\n                                updateShowOverlay={updateShowOverlay}\n                            />\n                        </Suspense>\n                    )\n                    :\n                    null\n                }\n                {/* Form Bank Details */}\n                {showFormBankDetails ?\n                    (\n                        <Suspense fallback={<Overlay text={'Loading data, please wait...'} spinner={true} />}>\n                            <FormBankDetails\n                                customerInformation={customerInformation}\n                                progressBar={progressBar}\n                                updateCustomerInformation={updateCustomerInformation}\n                                updateShowFormDetails={updateShowFormDetails}\n                                updateProgressBar={updateProgressBar}\n                                updateShowFormBankDetails={updateShowFormBankDetails}\n                                updateShowFormRating={updateShowFormRating}\n                                updateShowOverlay={updateShowOverlay}\n                            />\n                        </Suspense>\n                    )\n                    :\n                    null\n                }\n                {/* Form rating */}\n                {showFormRating ?\n                    (\n                        <FormRating\n                            customerInformation={customerInformation}\n                            updateCustomerInformation={updateCustomerInformation}\n                            updateShowFormRating={updateShowFormRating}\n                            updateShowSuccessFul={updateShowSuccessFul}\n                        />\n                    )\n                    :\n                    null\n                }\n                {/* Form successful */}\n                {showSuccessFul ?\n                    (\n                        <FormSuccessful\n\n                        />\n                    )\n                    :\n                    null\n                }\n            </>\n            {/* Footer */}\n            <Footer />\n        </>\n    )\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/juanlugo/Desktop/sp-firebase/src/pages/LoginPage/Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; // Components\n\nimport Error from \"../../components/Error/Error\"; // CSS\n\nimport \"./Login.css\"; // Firebase\n\nimport { db, auth, googleProvider } from \"../../firebase/firebase\";\nimport firebase from \"firebase/app\"; // Images\n\nimport MoneyMan from \"../../assets/img/moneyMan.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Login() {\n  _s();\n\n  /**-- STATES --*/\n  // User state\n  const [user, setUser] = useState({\n    email: \"\",\n    password: \"\"\n  }); // Error state\n\n  const [error, updateError] = useState(false);\n  const [errorMessage, updateErrorMessage] = useState({\n    message: ''\n  }); // Taking user values\n\n  const {\n    email,\n    password\n  } = user;\n\n  const onChange = e => {\n    setUser({ ...user,\n      [e.target.name]: e.target.value.replace(/ /g, \"\")\n    });\n  }; // Check session method\n\n\n  const checkSessionMethod = email => {\n    let signInMethodsForEmail = auth.fetchSignInMethodsForEmail(email).then(res => {\n      return res[0];\n    });\n    return signInMethodsForEmail;\n  };\n\n  const dispatchModal = e => {\n    e.preventDefault();\n    document.getElementById(\"modal\").style.display = 'flex';\n  }; // Submit form\n\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    const email = user.email;\n    const password = user.password; // Email field validation\n\n    if (email === \"\") {\n      updateErrorMessage({ ...errorMessage,\n        message: 'Email is required'\n      }); // Show error\n\n      updateError(true);\n      return;\n    } // Password field validation\n\n\n    if (password === \"\") {\n      updateErrorMessage({ ...errorMessage,\n        message: 'Password is required'\n      }); // Show error\n\n      updateError(true);\n      return;\n    } // Method type\n\n\n    const methodType = await checkSessionMethod(email);\n    updateErrorMessage({ ...errorMessage,\n      message: 'Email address already in use.'\n    }); // Checking method type\n\n    if (methodType === 'google.com') {\n      // Error message\n      updateErrorMessage({ ...errorMessage,\n        message: 'Please, sign in with your Google account'\n      }); // Show error\n\n      updateError(true);\n      return;\n    } // Dispatch Sign in function\n\n\n    await auth.signInWithEmailAndPassword(email, password).then(userCredential => {\n      console.log('Success'); // console.log(userCredential.user.uid);\n      // Firebase\n\n      db.collection('signInLogs').add({\n        email,\n        signInTime: firebase.firestore.FieldValue.serverTimestamp()\n      });\n    }).catch(error => {\n      console.error(error);\n\n      switch (error.code) {\n        case 'auth/email-already-in-use':\n          updateErrorMessage({ ...errorMessage,\n            message: 'Email address already in use.'\n          });\n          break;\n\n        case 'auth/invalid-email':\n          updateErrorMessage({ ...errorMessage,\n            message: 'Email address is invalid.'\n          });\n          break;\n\n        case 'auth/operation-not-allowed':\n          updateErrorMessage({ ...errorMessage,\n            message: 'Error during sign up.'\n          });\n          break;\n\n        case 'auth/weak-password':\n          updateErrorMessage({ ...errorMessage,\n            message: 'Password is not strong enough. Add additional characters including special characters and numbers.'\n          });\n          break;\n\n        case 'auth/wrong-password':\n          updateErrorMessage({ ...errorMessage,\n            message: 'Password is wrong'\n          });\n          break;\n\n        case 'auth/user-not-found':\n          updateErrorMessage({ ...errorMessage,\n            message: 'User not found, try with your google account instead'\n          });\n          break;\n\n        default:\n          updateErrorMessage({ ...errorMessage,\n            message: error.message\n          });\n          break;\n      }\n\n      updateError(true);\n    });\n  };\n\n  const signInWithGoogle = async e => {\n    e.preventDefault(); // auth.signInWithRedirect(googleProvider);\n\n    await auth.signInWithPopup(googleProvider).then(result => {\n      // Email\n      const email = result.user.email; // Firebase\n\n      db.collection('signInLogs').add({\n        email,\n        signInTime: firebase.firestore.FieldValue.serverTimestamp()\n      });\n    }).catch(error => {\n      // Handle Errors here.\n      var errorCode = error.code;\n      var errorMessage = error.message; // The email of the user's account used.\n\n      var email = error.email; // The firebase.auth.AuthCredential type that was used.\n\n      var credential = error.credential;\n\n      if (errorCode) {\n        console.error(errorCode);\n      }\n\n      if (errorMessage) {\n        console.error(errorMessage);\n      }\n\n      if (email) {\n        console.error(email);\n      }\n\n      if (credential) {\n        console.error(credential);\n      }\n\n      return;\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"some-page-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title-column\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"login-title\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"Utility Switchboard\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Savings Portal\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 37\n                }, this), \".\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"login-btn-container\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn-login\",\n                onClick: e => dispatchModal(e),\n                children: \"Sign In\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal animate__animated animate__pulse\",\n              id: \"modal\",\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: e => onSubmit(e),\n                className: \"modal-content\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"modal-logo\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: \"https://utilityswitchboard.com/wp-content/uploads/2021/07/usb-favicon.png\",\n                    alt: \"\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-field\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"email\",\n                    id: \"email\",\n                    name: \"email\",\n                    placeholder: \"Introduce email\",\n                    value: email || '',\n                    onChange: onChange,\n                    placeholder: \"Email\",\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 188,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-field\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"password\",\n                    id: \"password\",\n                    name: \"password\",\n                    placeholder: \"Introduce password\",\n                    value: password || '',\n                    onChange: onChange,\n                    placeholder: \"Password\",\n                    autoComplete: \"on\",\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 201,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 37\n                }, this), error ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"error-modal\",\n                  children: /*#__PURE__*/_jsxDEV(Error, {\n                    message: errorMessage.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 215,\n                    columnNumber: 70\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 41\n                }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"login-btn-container\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn-login\",\n                    children: \"Sign In\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 219,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Or sign in using\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"google-btn\",\n                  onClick: e => signInWithGoogle(e),\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      className: \"google-icon\",\n                      src: \"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\",\n                      loading: \"lazy\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 226,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 225,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-column\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"image-container\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: MoneyMan,\n                alt: \"Saving Money\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Login, \"Z2X43vDoq4vZO0Z3RUdmsdyxTyE=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/juanlugo/Desktop/sp-firebase/src/pages/LoginPage/Login.jsx"],"names":["React","useState","Error","db","auth","googleProvider","firebase","MoneyMan","Login","user","setUser","email","password","error","updateError","errorMessage","updateErrorMessage","message","onChange","e","target","name","value","replace","checkSessionMethod","signInMethodsForEmail","fetchSignInMethodsForEmail","then","res","dispatchModal","preventDefault","document","getElementById","style","display","onSubmit","methodType","signInWithEmailAndPassword","userCredential","console","log","collection","add","signInTime","firestore","FieldValue","serverTimestamp","catch","code","signInWithGoogle","signInWithPopup","result","errorCode","credential"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n// Components\nimport Error from \"../../components/Error/Error\";\n// CSS\nimport \"./Login.css\";\n// Firebase\nimport { db, auth, googleProvider } from \"../../firebase/firebase\";\nimport firebase from \"firebase/app\";\n// Images\nimport MoneyMan from \"../../assets/img/moneyMan.png\";\n\nfunction Login() {\n\n    /**-- STATES --*/\n\n    // User state\n    const [user, setUser] = useState({\n        email: \"\",\n        password: \"\",\n    });\n\n    // Error state\n    const [error, updateError] = useState(false);\n    const [errorMessage, updateErrorMessage] = useState({ message: '' });\n\n    // Taking user values\n    const { email, password } = user;\n    const onChange = (e) => {\n        setUser({\n            ...user,\n            [e.target.name]: e.target.value.replace(/ /g, \"\"),\n        });\n    };\n\n    // Check session method\n    const checkSessionMethod = (email) => {\n\n        let signInMethodsForEmail = auth.fetchSignInMethodsForEmail(email).then((res) => {\n            return res[0];\n        });\n\n        return signInMethodsForEmail;\n\n    };\n\n    const dispatchModal = (e) => {\n        e.preventDefault();\n\n        document.getElementById(\"modal\").style.display = 'flex';\n    }\n\n    // Submit form\n    const onSubmit = async (e) => {\n        e.preventDefault();\n\n        const email = user.email;\n        const password = user.password;\n\n        // Email field validation\n        if (email === \"\") {\n            updateErrorMessage({ ...errorMessage, message: 'Email is required' });\n            // Show error\n            updateError(true);\n            return;\n        }\n\n        // Password field validation\n        if (password === \"\") {\n            updateErrorMessage({ ...errorMessage, message: 'Password is required' });\n            // Show error\n            updateError(true);\n            return;\n        }\n\n        // Method type\n        const methodType = await checkSessionMethod(email);\n\n        updateErrorMessage({ ...errorMessage, message: 'Email address already in use.' });\n\n        // Checking method type\n        if (methodType === 'google.com') {\n            // Error message\n            updateErrorMessage({ ...errorMessage, message: 'Please, sign in with your Google account' });\n            // Show error\n            updateError(true);\n            return;\n        }\n\n        // Dispatch Sign in function\n        await auth.signInWithEmailAndPassword(email, password).then((userCredential) => {\n            console.log('Success')\n            // console.log(userCredential.user.uid);\n            // Firebase\n            db.collection('signInLogs').add({\n                email,\n                signInTime: firebase.firestore.FieldValue.serverTimestamp(),\n            });\n        }).catch(error => {\n            console.error(error);\n            switch (error.code) {\n                case 'auth/email-already-in-use':\n                    updateErrorMessage({ ...errorMessage, message: 'Email address already in use.' });\n                    break;\n                case 'auth/invalid-email':\n                    updateErrorMessage({ ...errorMessage, message: 'Email address is invalid.' });\n                    break;\n                case 'auth/operation-not-allowed':\n                    updateErrorMessage({ ...errorMessage, message: 'Error during sign up.' });\n                    break;\n                case 'auth/weak-password':\n                    updateErrorMessage({ ...errorMessage, message: 'Password is not strong enough. Add additional characters including special characters and numbers.' });\n                    break;\n                case 'auth/wrong-password':\n                    updateErrorMessage({ ...errorMessage, message: 'Password is wrong' });\n                    break;\n                case 'auth/user-not-found':\n                    updateErrorMessage({ ...errorMessage, message: 'User not found, try with your google account instead' });\n                    break;\n                default:\n                    updateErrorMessage({ ...errorMessage, message: error.message });\n                    break;\n            }\n            updateError(true);\n        });\n    };\n\n    const signInWithGoogle = async (e) => {\n        e.preventDefault();\n\n        // auth.signInWithRedirect(googleProvider);\n        await auth.signInWithPopup(googleProvider)\n            .then((result) => {\n                // Email\n                const email = result.user.email;\n\n                // Firebase\n                db.collection('signInLogs').add({\n                    email,\n                    signInTime: firebase.firestore.FieldValue.serverTimestamp(),\n                });\n            })\n            .catch((error) => {\n                // Handle Errors here.\n                var errorCode = error.code;\n                var errorMessage = error.message;\n                // The email of the user's account used.\n                var email = error.email;\n                // The firebase.auth.AuthCredential type that was used.\n                var credential = error.credential;\n\n                if (errorCode) { console.error(errorCode); }\n\n                if (errorMessage) { console.error(errorMessage); }\n\n                if (email) { console.error(email); }\n\n                if (credential) { console.error(credential); }\n\n                return;\n            });\n    };\n\n    return (\n        <>\n            <div className=\"some-page-wrapper\">\n                <div className=\"row\">\n                    <div className=\"column\">\n                        <div className=\"title-column\">\n                            <div className=\"login-title\">\n                                <h1>Utility Switchboard</h1>\n                                <h1>\n                                    <span>Savings Portal</span>.\n                                </h1>\n                            </div>\n\n                            <div className=\"login-btn-container\">\n                                <button className=\"btn-login\" onClick={(e) => dispatchModal(e)}>Sign In</button>\n                            </div>\n\n                            <div className=\"modal animate__animated animate__pulse\" id=\"modal\">\n                                <form onSubmit={(e) => onSubmit(e)} className=\"modal-content\">\n\n                                    <div className=\"modal-logo\">\n                                        <img src={\"https://utilityswitchboard.com/wp-content/uploads/2021/07/usb-favicon.png\"} alt=\"\" />\n                                    </div>\n\n                                    <div className=\"form-field\">\n                                        <input\n                                            type=\"email\"\n                                            id=\"email\"\n                                            name=\"email\"\n                                            placeholder=\"Introduce email\"\n                                            value={email || ''}\n                                            onChange={onChange}\n                                            placeholder=\"Email\"\n                                            required\n                                        />\n                                    </div>\n\n                                    <div className=\"form-field\">\n                                        <input\n                                            type=\"password\"\n                                            id=\"password\"\n                                            name=\"password\"\n                                            placeholder=\"Introduce password\"\n                                            value={password || ''}\n                                            onChange={onChange}\n                                            placeholder=\"Password\"\n                                            autoComplete=\"on\"\n                                            required\n                                        />\n                                    </div>\n\n                                    {error ? (\n                                        <div className=\"error-modal\"><Error message={errorMessage.message} /></div>\n                                    ) : null}\n\n                                    <div className=\"login-btn-container\">\n                                        <button className=\"btn-login\">Sign In</button>\n                                    </div>\n\n                                    <p>Or sign in using</p>\n\n                                    <button className=\"google-btn\" onClick={(e) => signInWithGoogle(e)}>\n                                        <div>\n                                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" loading=\"lazy\" />\n                                        </div>\n                                    </button>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"column\">\n                        <div className=\"image-column\">\n                            <div className=\"image-container\">\n                                <img src={MoneyMan} alt=\"Saving Money\" />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}
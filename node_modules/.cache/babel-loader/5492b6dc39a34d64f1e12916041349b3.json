{"ast":null,"code":"import _slicedToArray from\"/Users/juanlugo/Desktop/sp-firebase/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import\"./useAddress.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var useAddress=function useAddress(label,initialState,optionsAddress){// Custom Hook State\nvar _useState=useState(initialState),_useState2=_slicedToArray(_useState,2),state=_useState2[0],updateState=_useState2[1];var Selection=function Selection(){return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:\"selection-address-container\",children:/*#__PURE__*/_jsx(\"select\",{onChange:function onChange(e){return updateState(e.target.value);},defaultValue:[state],className:\"select-address\",id:\"select\",multiple:true,children:optionsAddress.map(function(option){return/*#__PURE__*/_jsx(\"option\",{value:option.id,children:option.summaryline},option.id);})})})});};// State return, interface and fn to modificate the state\nreturn[state,Selection,updateState];};export default useAddress;","map":{"version":3,"sources":["/Users/juanlugo/Desktop/sp-firebase/src/hooks/useAddress/useAddress.jsx"],"names":["React","useState","useAddress","label","initialState","optionsAddress","state","updateState","Selection","e","target","value","map","option","id","summaryline"],"mappings":"0JAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAO,kBAAP,C,gGAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAQC,YAAR,CAAsBC,cAAtB,CAAyC,CAC1D;AACA,cAA6BJ,QAAQ,CAACG,YAAD,CAArC,wCAAOE,KAAP,eAAcC,WAAd,eAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,sBAChB,sCACE,YAAK,SAAS,CAAC,6BAAf,uBAEE,eACE,QAAQ,CAAE,kBAACC,CAAD,QAAOF,CAAAA,WAAW,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlB,EADZ,CAEE,YAAY,CAAE,CAACL,KAAD,CAFhB,CAGE,SAAS,CAAC,gBAHZ,CAIE,EAAE,CAAC,QAJL,CAKE,QAAQ,KALV,UAQGD,cAAc,CAACO,GAAf,CAAmB,SAACC,MAAD,qBAClB,eAAwB,KAAK,CAAEA,MAAM,CAACC,EAAtC,UACED,MAAM,CAACE,WADT,EAAaF,MAAM,CAACC,EAApB,CADkB,EAAnB,CARH,EAFF,EADF,EADgB,EAAlB,CAsBA;AACA,MAAO,CAACR,KAAD,CAAQE,SAAR,CAAmBD,WAAnB,CAAP,CACD,CA5BD,CA8BA,cAAeL,CAAAA,UAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./useAddress.css\";\n\nconst useAddress = (label, initialState, optionsAddress) => {\n  // Custom Hook State\n  const [state, updateState] = useState(initialState);\n\n  const Selection = () => (\n    <>\n      <div className=\"selection-address-container\">\n        {/* <label>{label}</label> */}\n        <select\n          onChange={(e) => updateState(e.target.value)}\n          defaultValue={[state]}\n          className=\"select-address\"\n          id=\"select\"\n          multiple\n        >\n          {/* <option value=\"\">- Select -</option> */}\n          {optionsAddress.map((option) => (\n            <option key={option.id} value={option.id}>\n             {option.summaryline}\n            </option>\n          ))}\n        </select>\n      </div>\n    </>\n  );\n\n  // State return, interface and fn to modificate the state\n  return [state, Selection, updateState];\n};\n\nexport default useAddress;\n"]},"metadata":{},"sourceType":"module"}
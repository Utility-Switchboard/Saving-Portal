{"ast":null,"code":"var _jsxFileName = \"/Users/juanlugo/Desktop/sp-firebase/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { lazy, Suspense, useEffect, useState } from \"react\"; // React Router\n\nimport { Switch, Route, Redirect } from 'react-router-dom'; // IdleTimerContainer\n\nimport IdleTimerContainer from './components/IdleTimerContainer/IdleTimerContainer'; // Firebase\n\nimport { auth, createUserProfileDocument } from './firebase/firebase'; // Components\n\nimport Overlay from './components/Overlay/Overlay'; // Pages\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Home = /*#__PURE__*/lazy(_c = () => import('../src/pages/HomePage/Home'));\n_c2 = Home;\nconst Login = /*#__PURE__*/lazy(_c3 = () => import('../src/pages/LoginPage/Login'));\n_c4 = Login;\n\nfunction App() {\n  _s();\n\n  /**-- States --*/\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isLoading, updateIsLoading] = useState(true);\n  const [userInfo, updateUserInfo] = useState(null);\n  useEffect(() => {\n    (async () => {\n      // Session\n      await auth.onAuthStateChanged(user => {\n        if (user) {\n          // console.log('is logged');\n          // Create User profile\n          createUserProfileDocument(user); // Update states\n\n          updateIsLoading(false);\n          updateUserInfo(user);\n          setIsAuthenticated(true);\n        } else {\n          // console.log('is not logged');\n          // setIsAuthenticated\n          setIsAuthenticated(false); // updateIsLoading\n\n          updateIsLoading(false);\n        }\n      });\n    })();\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Overlay, {\n      text: 'Checking the session...',\n      spinner: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    children: /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(Overlay, {\n        text: 'Loading data, please wait...',\n        spinner: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 29\n      }, this),\n      children: isAuthenticated ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/home\",\n          render: props => /*#__PURE__*/_jsxDEV(Home, {\n            user: userInfo,\n            ...props\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 56\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(IdleTimerContainer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n          to: `/home`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          component: Login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"2B0j0lBlfw+Pms1d0xYG0o4PGn8=\");\n\n_c5 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Home$lazy\");\n$RefreshReg$(_c2, \"Home\");\n$RefreshReg$(_c3, \"Login$lazy\");\n$RefreshReg$(_c4, \"Login\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"sources":["/Users/juanlugo/Desktop/sp-firebase/src/App.jsx"],"names":["React","lazy","Suspense","useEffect","useState","Switch","Route","Redirect","IdleTimerContainer","auth","createUserProfileDocument","Overlay","Home","Login","App","isAuthenticated","setIsAuthenticated","isLoading","updateIsLoading","userInfo","updateUserInfo","onAuthStateChanged","user","props"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,QAAtB,EAAgCC,SAAhC,EAA2CC,QAA3C,QAA2D,OAA3D,C,CACA;;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,QAAxB,QAAwC,kBAAxC,C,CACA;;AACA,OAAOC,kBAAP,MAA+B,oDAA/B,C,CACA;;AACA,SAASC,IAAT,EAAeC,yBAAf,QAAgD,qBAAhD,C,CAEA;;AACA,OAAOC,OAAP,MAAoB,8BAApB,C,CAEA;;;;AACA,MAAMC,IAAI,gBAAGX,IAAI,MAAC,MAAM,OAAO,4BAAP,CAAP,CAAjB;MAAMW,I;AACN,MAAMC,KAAK,gBAAGZ,IAAI,OAAC,MAAM,OAAO,8BAAP,CAAP,CAAlB;MAAMY,K;;AAEN,SAASC,GAAT,GAAe;AAAA;;AAEb;AACA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCZ,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM,CAACa,SAAD,EAAYC,eAAZ,IAA+Bd,QAAQ,CAAC,IAAD,CAA7C;AACA,QAAM,CAACe,QAAD,EAAWC,cAAX,IAA6BhB,QAAQ,CAAC,IAAD,CAA3C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,KAAC,YAAY;AACX;AACA,YAAMM,IAAI,CAACY,kBAAL,CAAyBC,IAAD,IAAU;AACtC,YAAIA,IAAJ,EAAU;AACR;AAEA;AACAZ,UAAAA,yBAAyB,CAACY,IAAD,CAAzB,CAJQ,CAKR;;AACAJ,UAAAA,eAAe,CAAC,KAAD,CAAf;AACAE,UAAAA,cAAc,CAACE,IAAD,CAAd;AACAN,UAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD,SATD,MASO;AACL;AACA;AACAA,UAAAA,kBAAkB,CAAC,KAAD,CAAlB,CAHK,CAIL;;AACAE,UAAAA,eAAe,CAAC,KAAD,CAAf;AACD;AACF,OAjBK,CAAN;AAkBD,KApBD;AAqBD,GAtBQ,EAsBN,EAtBM,CAAT;;AAwBA,MAAID,SAAJ,EAAe;AACb,wBAAO,QAAC,OAAD;AAAS,MAAA,IAAI,EAAE,yBAAf;AAA0C,MAAA,OAAO,EAAE;AAAnD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACI,QAAC,MAAD;AAAA,2BACE,QAAC,QAAD;AAAU,MAAA,QAAQ,eAAE,QAAC,OAAD;AAAS,QAAA,IAAI,EAAE,8BAAf;AAA+C,QAAA,OAAO,EAAE;AAAxD;AAAA;AAAA;AAAA;AAAA,cAApB;AAAA,gBACGF,eAAe,gBAEZ;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,MAAM,EAAGQ,KAAD,iBAAW,QAAC,IAAD;AAAM,YAAA,IAAI,EAAEJ,QAAZ;AAAA,eAA0BI;AAA1B;AAAA;AAAA;AAAA;AAAA;AAAvC;AAAA;AAAA;AAAA;AAAA,gBADF,eAGE,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,gBAHF,eAKE,QAAC,QAAD;AAAU,UAAA,EAAE,EAAG;AAAf;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA,sBAFY,gBAYZ;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,GAAlB;AAAsB,UAAA,SAAS,EAAEV;AAAjC;AAAA;AAAA;AAAA;AAAA,gBADF,eAGE,QAAC,QAAD;AAAU,UAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAbN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBD;;GA5DQC,G;;MAAAA,G;AA8DT,eAAeA,GAAf","sourcesContent":["import React, { lazy, Suspense, useEffect, useState } from \"react\";\n// React Router\nimport { Switch, Route, Redirect } from 'react-router-dom';\n// IdleTimerContainer\nimport IdleTimerContainer from './components/IdleTimerContainer/IdleTimerContainer';\n// Firebase\nimport { auth, createUserProfileDocument } from './firebase/firebase';\n\n// Components\nimport Overlay from './components/Overlay/Overlay';\n\n// Pages\nconst Home = lazy(() => import('../src/pages/HomePage/Home'));\nconst Login = lazy(() => import('../src/pages/LoginPage/Login'));\n\nfunction App() {\n  \n  /**-- States --*/\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isLoading, updateIsLoading] = useState(true);\n  const [userInfo, updateUserInfo] = useState(null);\n\n  useEffect(() => {\n    (async () => {\n      // Session\n      await auth.onAuthStateChanged((user) => {\n        if (user) {\n          // console.log('is logged');\n\n          // Create User profile\n          createUserProfileDocument(user);\n          // Update states\n          updateIsLoading(false);\n          updateUserInfo(user);\n          setIsAuthenticated(true);\n        } else {\n          // console.log('is not logged');\n          // setIsAuthenticated\n          setIsAuthenticated(false);\n          // updateIsLoading\n          updateIsLoading(false);\n        }\n      });\n    })();\n  }, []);\n\n  if (isLoading) {\n    return <Overlay text={'Checking the session...'} spinner={true} />\n  }\n  \n  return (\n      <Switch>\n        <Suspense fallback={<Overlay text={'Loading data, please wait...'} spinner={true} />}>\n          {isAuthenticated ?\n            (\n              <>\n                <Route path='/home' render={(props) => <Home user={userInfo} {...props} />} />\n                {/* Checking activity */}\n                <IdleTimerContainer />\n                {/* Redirect */}\n                <Redirect to={`/home`} />\n              </>\n            )\n            :\n            (\n              <>\n                <Route exact path='/' component={Login} />\n                {/* Redirect */}\n                <Redirect to=\"/\" /> \n              </>\n            )\n          }\n        </Suspense>\n      </Switch>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
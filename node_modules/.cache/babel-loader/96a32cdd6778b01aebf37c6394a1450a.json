{"ast":null,"code":"import _regeneratorRuntime from\"/Users/juanlugo/Desktop/sp-firebase/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/juanlugo/Desktop/sp-firebase/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import firebase from\"firebase/app\";import\"firebase/auth\";import\"firebase/firestore\";// Firebase Config\nvar firebaseConfig={apiKey:process.env.REACT_APP_apiKey,authDomain:process.env.REACT_APP_authDomain,projectId:process.env.REACT_APP_projectId,storageBucket:process.env.REACT_APP_storageBucket,messagingSenderId:process.env.REACT_APP_messagingSenderId,appId:process.env.REACT_APP_appId,measurementId:process.env.REACT_APP_measurementId};// Firebase App\nvar firebaseApp=firebase.initializeApp(firebaseConfig);// DB\nvar db=firebaseApp.firestore();// Auth\nvar auth=firebase.auth();// Google Provider\nvar googleProvider=new firebase.auth.GoogleAuthProvider();// Enable offline mode\nfirebase.firestore().enablePersistence().catch(function(err){if(err.code==='failed-precondition'){// Multiple tabs open, persistence can only be enabled\n// in one tab at a a time.\n// ...\nconsole.log(err);}else if(err.code==='unimplemented'){// The current browser does not support all of the\n// features required to enable persistence\n// ...\nconsole.log(err);}});// Function to create user profile document\nvar createUserProfileDocument=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(user){var docRef,snapShot,displayName,email,createdAt,display_name;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:// Document ref\ndocRef=db.collection(\"users\").doc(user.uid);// snapShot\n_context.next=3;return docRef.get();case 3:snapShot=_context.sent;if(snapShot.exists){_context.next=16;break;}displayName=user.displayName,email=user.email;createdAt=new Date();if(!!displayName){display_name=displayName;}else{display_name=email;}_context.prev=8;_context.next=11;return docRef.set({displayName:display_name,email:email,createdAt:createdAt,breakStart:{},breakEnd:{}});case 11:_context.next=16;break;case 13:_context.prev=13;_context.t0=_context[\"catch\"](8);console.log('Error Creating User',_context.t0.message);case 16:return _context.abrupt(\"return\",docRef);case 17:case\"end\":return _context.stop();}}},_callee,null,[[8,13]]);}));return function createUserProfileDocument(_x){return _ref.apply(this,arguments);};}();export{db,auth,googleProvider,createUserProfileDocument};","map":{"version":3,"sources":["/Users/juanlugo/Desktop/sp-firebase/src/firebase/firebase.js"],"names":["firebase","firebaseConfig","apiKey","process","env","REACT_APP_apiKey","authDomain","REACT_APP_authDomain","projectId","REACT_APP_projectId","storageBucket","REACT_APP_storageBucket","messagingSenderId","REACT_APP_messagingSenderId","appId","REACT_APP_appId","measurementId","REACT_APP_measurementId","firebaseApp","initializeApp","db","firestore","auth","googleProvider","GoogleAuthProvider","enablePersistence","catch","err","code","console","log","createUserProfileDocument","user","docRef","collection","doc","uid","get","snapShot","exists","displayName","email","createdAt","Date","display_name","set","breakStart","breakEnd","message"],"mappings":"iTAAA,MAAOA,CAAAA,QAAP,KAAqB,cAArB,CACA,MAAO,eAAP,CACA,MAAO,oBAAP,CAEA;AACA,GAAMC,CAAAA,cAAc,CAAG,CACrBC,MAAM,CAAEC,OAAO,CAACC,GAAR,CAAYC,gBADC,CAErBC,UAAU,CAAEH,OAAO,CAACC,GAAR,CAAYG,oBAFH,CAGrBC,SAAS,CAAEL,OAAO,CAACC,GAAR,CAAYK,mBAHF,CAIrBC,aAAa,CAAEP,OAAO,CAACC,GAAR,CAAYO,uBAJN,CAKrBC,iBAAiB,CAAET,OAAO,CAACC,GAAR,CAAYS,2BALV,CAMrBC,KAAK,CAAEX,OAAO,CAACC,GAAR,CAAYW,eANE,CAOrBC,aAAa,CAAEb,OAAO,CAACC,GAAR,CAAYa,uBAPN,CAAvB,CAUA;AACA,GAAMC,CAAAA,WAAW,CAAGlB,QAAQ,CAACmB,aAAT,CAAuBlB,cAAvB,CAApB,CAEA;AACA,GAAMmB,CAAAA,EAAE,CAAGF,WAAW,CAACG,SAAZ,EAAX,CAEA;AACA,GAAMC,CAAAA,IAAI,CAAGtB,QAAQ,CAACsB,IAAT,EAAb,CAEA;AACA,GAAMC,CAAAA,cAAc,CAAG,GAAIvB,CAAAA,QAAQ,CAACsB,IAAT,CAAcE,kBAAlB,EAAvB,CAEA;AACAxB,QAAQ,CAACqB,SAAT,GAAqBI,iBAArB,GACGC,KADH,CACS,SAACC,GAAD,CAAS,CACd,GAAIA,GAAG,CAACC,IAAJ,GAAa,qBAAjB,CAAwC,CACtC;AACA;AACA;AACAC,OAAO,CAACC,GAAR,CAAYH,GAAZ,EACD,CALD,IAKO,IAAIA,GAAG,CAACC,IAAJ,GAAa,eAAjB,CAAkC,CACvC;AACA;AACA;AACAC,OAAO,CAACC,GAAR,CAAYH,GAAZ,EACD,CACF,CAbH,EAeA;AACA,GAAMI,CAAAA,yBAAyB,0FAAG,iBAAOC,IAAP,+KAChC;AACMC,MAF0B,CAEjBb,EAAE,CAACc,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2BH,IAAI,CAACI,GAAhC,CAFiB,CAIhC;AAJgC,sBAKTH,CAAAA,MAAM,CAACI,GAAP,EALS,QAK1BC,QAL0B,kBAO3BA,QAAQ,CAACC,MAPkB,0BAStBC,WATsB,CASCR,IATD,CAStBQ,WATsB,CASTC,KATS,CASCT,IATD,CASTS,KATS,CAUxBC,SAVwB,CAUZ,GAAIC,CAAAA,IAAJ,EAVY,CAc9B,GAAI,CAAC,CAACH,WAAN,CAAmB,CACjBI,YAAY,CAAGJ,WAAf,CACD,CAFD,IAEO,CACLI,YAAY,CAAGH,KAAf,CACD,CAlB6B,uCAqBtBR,CAAAA,MAAM,CAACY,GAAP,CAAW,CACfL,WAAW,CAAEI,YADE,CAEfH,KAAK,CAALA,KAFe,CAGfC,SAAS,CAATA,SAHe,CAIfI,UAAU,CAAE,EAJG,CAKfC,QAAQ,CAAE,EALK,CAAX,CArBsB,0FA6B5BlB,OAAO,CAACC,GAAR,CAAY,qBAAZ,CAAmC,YAAMkB,OAAzC,EA7B4B,wCAiCzBf,MAjCyB,uEAAH,kBAAzBF,CAAAA,yBAAyB,4CAA/B,CAoCA,OAASX,EAAT,CAAaE,IAAb,CAAmBC,cAAnB,CAAmCQ,yBAAnC","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\n// Firebase Config\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_apiKey,\n  authDomain: process.env.REACT_APP_authDomain,\n  projectId: process.env.REACT_APP_projectId,\n  storageBucket: process.env.REACT_APP_storageBucket,\n  messagingSenderId: process.env.REACT_APP_messagingSenderId,\n  appId: process.env.REACT_APP_appId,\n  measurementId: process.env.REACT_APP_measurementId\n};\n\n// Firebase App\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\n\n// DB\nconst db = firebaseApp.firestore();\n\n// Auth\nconst auth = firebase.auth();\n\n// Google Provider\nconst googleProvider = new firebase.auth.GoogleAuthProvider();\n\n// Enable offline mode\nfirebase.firestore().enablePersistence()\n  .catch((err) => {\n    if (err.code === 'failed-precondition') {\n      // Multiple tabs open, persistence can only be enabled\n      // in one tab at a a time.\n      // ...\n      console.log(err);\n    } else if (err.code === 'unimplemented') {\n      // The current browser does not support all of the\n      // features required to enable persistence\n      // ...\n      console.log(err);\n    }\n  });\n\n// Function to create user profile document\nconst createUserProfileDocument = async (user) => {\n  // Document ref\n  const docRef = db.collection(\"users\").doc(user.uid);\n\n  // snapShot\n  const snapShot = await docRef.get();\n\n  if (!snapShot.exists) {\n\n    const { displayName, email } = user;\n    const createdAt = new Date();\n\n    let display_name;\n\n    if (!!displayName) {\n      display_name = displayName;\n    } else {\n      display_name = email;\n    }\n\n    try {\n      await docRef.set({\n        displayName: display_name,\n        email,\n        createdAt,\n        breakStart: {},\n        breakEnd: {}\n      })\n    } catch (error) {\n      console.log('Error Creating User', error.message);\n    }\n  }\n\n  return docRef;\n}\n\nexport { db, auth, googleProvider, createUserProfileDocument };"]},"metadata":{},"sourceType":"module"}
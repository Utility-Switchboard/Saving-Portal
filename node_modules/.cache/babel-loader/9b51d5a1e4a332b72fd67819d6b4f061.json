{"ast":null,"code":"import _defineProperty from\"/Users/juanlugo/Desktop/sp-firebase/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _regeneratorRuntime from\"/Users/juanlugo/Desktop/sp-firebase/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/Users/juanlugo/Desktop/sp-firebase/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"/Users/juanlugo/Desktop/sp-firebase/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/juanlugo/Desktop/sp-firebase/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,lazy,Suspense}from\"react\";// Firebase\nimport{db}from\"../../firebase/firebase\";// Components\nimport Navbar from\"../../components/Navbar/Navbar\";import Footer from\"../../components/Footer/Footer\";import Overlay from\"../../components/Overlay/Overlay\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var FormPostCode=/*#__PURE__*/lazy(function(){return import('../../components/FormCards/FormPostCode/FormPostCode');});var FormAddress=/*#__PURE__*/lazy(function(){return import('../../components/FormCards/FormAddress/FormAddress');});var FormFuelType=/*#__PURE__*/lazy(function(){return import('../../components/FormCards/FormFuelType/FormFuelType');});var FormMpanMprn=/*#__PURE__*/lazy(function(){return import('../../components/FormCards/FormMPN-MPRN/FormMpanMprn');});var FormSupply=/*#__PURE__*/lazy(function(){return import('../../components/FormCards/FormSupply/FormSupply');});var FormE7=/*#__PURE__*/lazy(function(){return import('../../components/FormCards/FormE7/FormE7');});// const FormTariffs = lazy(() => import('../../components/FormCards/FormTariffs/FormTariffs'));\nvar FormUsageKWH=/*#__PURE__*/lazy(function(){return import('../../components/FormCards/FormsUsage/FormUsageKWH/FormUsageKWH');});var FormUsageGAS=/*#__PURE__*/lazy(function(){return import('../../components/FormCards/FormsUsage/FormUsageGAS/FormUsageGAS');});var FormUsageGBP_es=/*#__PURE__*/lazy(function(){return import('../../components/FormCards/FormsUsage/FormUsageGBP_es/FormUsageGBP_es');});var FormUsageGBP_gs=/*#__PURE__*/lazy(function(){return import('../../components/FormCards/FormsUsage/FormUsageGBP_gs/FormUsageGBP_gs');});var FormUsageAVG=/*#__PURE__*/lazy(function(){return import('../../components/FormCards/FormsUsage/FormUsageAVG/FormUsageAVG');});var FormDebt=/*#__PURE__*/lazy(function(){return import('../../components/FormCards/FormDebt/FormDebt');});var FormCompare=/*#__PURE__*/lazy(function(){return import('../../components/FormCards/FormCompare/FormCompare');});var FormDetails=/*#__PURE__*/lazy(function(){return import('../../components/FormCards/FormDetails/FormDetails');});var FormBankDetails=/*#__PURE__*/lazy(function(){return import('../../components/FormCards/FormBankDetails/FormBankDetails');});var FormRating=/*#__PURE__*/lazy(function(){return import('../../components/FormCards/FormRating/FormRating');});var FormSuccessful=/*#__PURE__*/lazy(function(){return import('../../components/FormCards/FormSuccessful/FormSuccessful');});function Home(_ref){var _jsx2;var user=_ref.user;/* -- STATES -- */ // Progress bar \nvar _useState=useState({step:0}),_useState2=_slicedToArray(_useState,2),progressBar=_useState2[0],updateProgressBar=_useState2[1];// Script\nvar _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),showScript=_useState4[0],updateShowScript=_useState4[1];// Customer Postcode State\nvar _useState5=useState({postcode:\"\"}),_useState6=_slicedToArray(_useState5,2),customerPostCode=_useState6[0],updateCustomerPostCode=_useState6[1];// Customer Address\nvar _useState7=useState({}),_useState8=_slicedToArray(_useState7,2),customerAddres=_useState8[0],updateCustomerAddress=_useState8[1];// Use gas \nvar _useState9=useState({}),_useState10=_slicedToArray(_useState9,2),useGas=_useState10[0],updateUseGas=_useState10[1];// Fuel\nvar _useState11=useState({}),_useState12=_slicedToArray(_useState11,2),fuel=_useState12[0],updateFuel=_useState12[1];// Customer Electricity Information\nvar _useState13=useState({}),_useState14=_slicedToArray(_useState13,2),electricityInformation=_useState14[0],updateElectricityInformation=_useState14[1];// Customer Gas Information\nvar _useState15=useState({}),_useState16=_slicedToArray(_useState15,2),gasInformation=_useState16[0],updateGasInformation=_useState16[1];// Customer supplier information\nvar _useState17=useState({}),_useState18=_slicedToArray(_useState17,2),supplierInformation=_useState18[0],updateSupplierInformation=_useState18[1];// Customer Information\nvar _useState19=useState({}),_useState20=_slicedToArray(_useState19,2),customerInformation=_useState20[0],updateCustomerInformation=_useState20[1];// Customer Electricity Payment Type\nvar _useState21=useState({}),_useState22=_slicedToArray(_useState21,2),electricityPaymentType=_useState22[0],updateElectricityPaymentType=_useState22[1];// Customer Gas Payment Type\nvar _useState23=useState({}),_useState24=_slicedToArray(_useState23,2),gasPaymentType=_useState24[0],updateGasPaymentType=_useState24[1];// Customer Economy 7\nvar _useState25=useState({}),_useState26=_slicedToArray(_useState25,2),economy7=_useState26[0],updateEconomy7=_useState26[1];/** -- VIEWS states -- */ // Show Overlay\nvar _useState27=useState(false),_useState28=_slicedToArray(_useState27,2),showOverlay=_useState28[0],updateShowOverlay=_useState28[1];// Show Form PostCode\nvar _useState29=useState(true),_useState30=_slicedToArray(_useState29,2),showFormPostCode=_useState30[0],updateShowFormPostCode=_useState30[1];// Show Form Address\nvar _useState31=useState(false),_useState32=_slicedToArray(_useState31,2),showFormAddres=_useState32[0],updateShowFormAddres=_useState32[1];// Show form Fuel type\nvar _useState33=useState(false),_useState34=_slicedToArray(_useState33,2),showFormFuelType=_useState34[0],updateShowFomrFuelType=_useState34[1];// Show Form MPAN/MPRN \nvar _useState35=useState(false),_useState36=_slicedToArray(_useState35,2),showFormMpanMprn=_useState36[0],updateShowFormMpanMprn=_useState36[1];// Show Form Supply \nvar _useState37=useState(false),_useState38=_slicedToArray(_useState37,2),showFormSupply=_useState38[0],updateShowFormSupply=_useState38[1];// Show Form E7\nvar _useState39=useState(false),_useState40=_slicedToArray(_useState39,2),showE7=_useState40[0],updateShowE7=_useState40[1];// Show Form Tariffs\nvar _useState41=useState(false),_useState42=_slicedToArray(_useState41,2),showFormTariffs=_useState42[0],updateShowFormTariffs=_useState42[1];// Show Form Usage KWH\nvar _useState43=useState(false),_useState44=_slicedToArray(_useState43,2),showFormUsageKWH=_useState44[0],updateShowFormUsageKWH=_useState44[1];// Show Form Usage GAS\nvar _useState45=useState(false),_useState46=_slicedToArray(_useState45,2),showFormUsageGAS=_useState46[0],updateShowFormUsageGAS=_useState46[1];// Show Form Usage GBP_es\nvar _useState47=useState(false),_useState48=_slicedToArray(_useState47,2),showFormUsageGBP_es=_useState48[0],updateShowFormUsageGBP_es=_useState48[1];// Show Form Usage GBP_gs\nvar _useState49=useState(false),_useState50=_slicedToArray(_useState49,2),showFormUsageGBP_gs=_useState50[0],updateShowFormUsageGBP_gs=_useState50[1];// Show Form Usage AVG\nvar _useState51=useState(false),_useState52=_slicedToArray(_useState51,2),showFormUsageAVG=_useState52[0],updateShowFormUsageAVG=_useState52[1];// AVG for elec\nvar _useState53=useState(false),_useState54=_slicedToArray(_useState53,2),avgElec=_useState54[0],updateAvgElec=_useState54[1];// AVG for gas\nvar _useState55=useState(false),_useState56=_slicedToArray(_useState55,2),avgGas=_useState56[0],updateAvgGas=_useState56[1];// Show Form Debt\nvar _useState57=useState(false),_useState58=_slicedToArray(_useState57,2),showFormDebt=_useState58[0],updateShowFormDebt=_useState58[1];// Show Form Compare\nvar _useState59=useState(false),_useState60=_slicedToArray(_useState59,2),showFormCompare=_useState60[0],updateShowFormCompare=_useState60[1];// Show Form Details\nvar _useState61=useState(false),_useState62=_slicedToArray(_useState61,2),showFormDetails=_useState62[0],updateShowFormDetails=_useState62[1];// Show Form Bank Details\nvar _useState63=useState(false),_useState64=_slicedToArray(_useState63,2),showFormBankDetails=_useState64[0],updateShowFormBankDetails=_useState64[1];// Show rating\nvar _useState65=useState(false),_useState66=_slicedToArray(_useState65,2),showFormRating=_useState66[0],updateShowFormRating=_useState66[1];// Show Successful\nvar _useState67=useState(false),_useState68=_slicedToArray(_useState67,2),showSuccessFul=_useState68[0],updateShowSuccessFul=_useState68[1];// Add postcode to customer \nvar addPostCodeData=function addPostCodeData(postcode){var postCodeData=postcode;updateCustomerPostCode({postcode:postCodeData.toUpperCase()});};// Customer step\nvar customerStep=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(customer){var step,customerAddres,MPANDetails,dataGas,fuel,useGas,fuel_description,supplierInformation,electricityPaymentType,gasPaymentType,economy7,usage_property_size_dual,usage_property_size_es,usage_property_size_gs,usage_gas_description,usage_gbp_description_gs,usage_kwh_description,usage_gbp_description_es,avgElec,avgGas,debt,postcode,gas_only,elec_only,same_supplier,dual_active,electricityPaymentType_validated,gasPaymentType_validated,electricity_payment_type_id,electricity_payment_type_method,gas_payment_type_id,gas_payment_type_method,general_unit_rate_elec,general_unit_rate_gas,unitRateElecRef,unitRateElec,unitRateGasRef,unitRateGas,copy_electricityPaymentType,copy_gasPaymentType,_copy_electricityPaymentType,_copy_gasPaymentType,_copy_electricityPaymentType2,_copy_gasPaymentType2,usage_kwh_entered,usage_gbp_entered_es,usage_size_entered_es,usage_gas_entered,usage_gbp_entered_gs,usage_size_entered_gs,usage_size_entered_dual,usage_validated,copy_usage_validated;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:step=customer.step,customerAddres=customer.customerAddres,MPANDetails=customer.MPANDetails,dataGas=customer.dataGas,fuel=customer.fuel,useGas=customer.useGas,fuel_description=customer.fuel_description,supplierInformation=customer.supplierInformation,electricityPaymentType=customer.electricityPaymentType,gasPaymentType=customer.gasPaymentType,economy7=customer.economy7,usage_property_size_dual=customer.usage_property_size_dual,usage_property_size_es=customer.usage_property_size_es,usage_property_size_gs=customer.usage_property_size_gs,usage_gas_description=customer.usage_gas_description,usage_gbp_description_gs=customer.usage_gbp_description_gs,usage_kwh_description=customer.usage_kwh_description,usage_gbp_description_es=customer.usage_gbp_description_es,avgElec=customer.avgElec,avgGas=customer.avgGas,debt=customer.debt;console.log('Aqui aqui');console.log(debt);// Postcode\npostcode=customerAddres.postcode;// Variables\nif(step>1){/**-- Assign Values   */gas_only=fuel_description.gas_only;elec_only=fuel_description.elec_only;same_supplier=fuel_description.same_supplier;dual_active=fuel_description.dual_active;}// Variables for electricity and gas payment methods validated\n// Default unit rate for electricity\ngeneral_unit_rate_elec={unit_rate:17};// Default unit rate for gas\ngeneral_unit_rate_gas={unit_rate:27};/**-- Unit rate for electricity --*/ // DocRef Unit Rate Elec\n_context.next=9;return db.collection(\"unitRates\").doc('unit_rate_svt_elec');case 9:unitRateElecRef=_context.sent;_context.next=12;return unitRateElecRef.get().then(function(doc){if(doc.exists){return doc.data();}else{// console.log(general_unit_rate_elec);\nreturn general_unit_rate_elec;}}).catch(function(error){console.log(\"Error getting document:\",error);// console.log(general_unit_rate_elec);\n// console.log(general_unit_rate_elec);\nreturn general_unit_rate_elec;});case 12:unitRateElec=_context.sent;_context.next=15;return db.collection(\"unitRates\").doc('unit_rate_svt_gas');case 15:unitRateGasRef=_context.sent;_context.next=18;return unitRateGasRef.get().then(function(doc){if(doc.exists){return doc.data();}else{// console.log(general_unit_rate_elec);\nreturn general_unit_rate_gas;}}).catch(function(error){console.log(\"Error getting document:\",error);// console.log(general_unit_rate_elec);\n// console.log(general_unit_rate_elec);\nreturn general_unit_rate_gas;});case 18:unitRateGas=_context.sent;_context.t0=step;_context.next=_context.t0===0?22:_context.t0===1?29:_context.t0===2?39:_context.t0===3?51:_context.t0===4?64:_context.t0===5?83:_context.t0===6?105:_context.t0===7?107:_context.t0===8?147:149;break;case 22:console.log('Step 0');// Update progress bar\nupdateProgressBar(_objectSpread(_objectSpread({},progressBar),{},{step:1}));// Add postcode to customerData\naddPostCodeData(postcode);// Hidde Form Post Code\nupdateShowFormPostCode(false);// Show Form Address\nupdateShowFormAddres(true);// Hide Overlay\nupdateShowOverlay(false);return _context.abrupt(\"break\",150);case 29:console.log('Step 1');// Add postcode to customerData\naddPostCodeData(postcode);// Update customer address\nupdateCustomerAddress(_objectSpread({},customerAddres));// Update Electricity information\nupdateElectricityInformation(_objectSpread(_objectSpread({},electricityInformation),{},{MPANDetails:MPANDetails}));// Update Gas information\nupdateGasInformation(_objectSpread(_objectSpread({},gasInformation),{},{dataGas:dataGas}));// Update progress bar\nupdateProgressBar(_objectSpread(_objectSpread({},progressBar),{},{step:2}));// Hide Address\nupdateShowFormAddres(false);// Show Form Fuel type\nupdateShowFomrFuelType(true);// Hide Overlay\nupdateShowOverlay(false);return _context.abrupt(\"break\",150);case 39:console.log('Step 2');// Update customer address\nupdateCustomerAddress(_objectSpread({},customerAddres));// Update Electricity information\nupdateElectricityInformation(_objectSpread(_objectSpread({},electricityInformation),{},{MPANDetails:MPANDetails}));// Update Gas information\nupdateGasInformation(_objectSpread(_objectSpread({},gasInformation),{},{dataGas:dataGas}));// Update fuel state\nupdateFuel(_objectSpread({},fuel));// Update useGas\nupdateUseGas(_objectSpread({},useGas));// Update Customer\nupdateCustomerInformation(_objectSpread(_objectSpread({},customerInformation),{},{fuel_description:fuel_description}));// Update progress bar\nupdateProgressBar(_objectSpread(_objectSpread({},progressBar),{},{step:3}));// Hide Address\nupdateShowFormAddres(false);// Show MPAN/MPRN\nupdateShowFormMpanMprn(true);// Hide Overlay\nupdateShowOverlay(false);return _context.abrupt(\"break\",150);case 51:console.log('Step 3');// Update customer address\nupdateCustomerAddress(_objectSpread({},customerAddres));// Update Electricity information\nupdateElectricityInformation(_objectSpread(_objectSpread({},electricityInformation),{},{MPANDetails:MPANDetails}));// Update Gas information\nupdateGasInformation(_objectSpread(_objectSpread({},gasInformation),{},{dataGas:dataGas}));// Update fuel state\nupdateFuel(_objectSpread({},fuel));// Update useGas\nupdateUseGas(_objectSpread({},useGas));// Update Supplier Information\nupdateSupplierInformation(_objectSpread({},supplierInformation));// Update Customer\nupdateCustomerInformation(_objectSpread(_objectSpread({},customerInformation),{},{fuel_description:fuel_description}));// Update progress bar\nupdateProgressBar(_objectSpread(_objectSpread({},progressBar),{},{step:4}));// Hide Address\nupdateShowFormAddres(false);// Show Form Supply\nupdateShowFormSupply(true);// Hide Overlay\nupdateShowOverlay(false);return _context.abrupt(\"break\",150);case 64:console.log('Step 4');// Update customer address\nupdateCustomerAddress(_objectSpread({},customerAddres));// Update Electricity information\nupdateElectricityInformation(_objectSpread(_objectSpread({},electricityInformation),{},{MPANDetails:MPANDetails}));// Update Gas information\nupdateGasInformation(_objectSpread(_objectSpread({},gasInformation),{},{dataGas:dataGas}));// Update fuel state\nupdateFuel(_objectSpread({},fuel));// Update useGas\nupdateUseGas(_objectSpread({},useGas));// Update Supplier Information\nupdateSupplierInformation(_objectSpread({},supplierInformation));/**-- Payment type validation --*/ // Validation Electricity payment type\nelectricity_payment_type_id=electricityPaymentType.electricity_payment_type_id;electricity_payment_type_method=electricityPaymentType.electricity_payment_type_method;if(electricity_payment_type_id===''&&electricity_payment_type_method===''){// Delete Electricity payment type if it is empty\ncopy_electricityPaymentType=_objectSpread({},electricityPaymentType);delete copy_electricityPaymentType['electricity_payment_type_id'];delete copy_electricityPaymentType['electricity_payment_type_method'];// Update Electricity payment type\nupdateElectricityPaymentType(_objectSpread({},copy_electricityPaymentType));// Assigning validated value\nelectricityPaymentType_validated=copy_electricityPaymentType;}else{// Update Electricity payment type\nupdateElectricityPaymentType(_objectSpread({},electricityPaymentType));// Assigning validated value\nelectricityPaymentType_validated=electricityPaymentType;}// Validation Gas payment type\ngas_payment_type_id=gasPaymentType.gas_payment_type_id;gas_payment_type_method=gasPaymentType.gas_payment_type_method;if(gas_payment_type_id===''&&gas_payment_type_method===''){// Delete Gas payment type if it is empty\ncopy_gasPaymentType=_objectSpread({},gasPaymentType);delete copy_gasPaymentType['gas_payment_type_id'];delete copy_gasPaymentType['gas_payment_type_method'];// Update Gas payment type\nupdateGasPaymentType(_objectSpread({},copy_gasPaymentType));// Assigning validated value\ngasPaymentType_validated=copy_gasPaymentType;}else{// Update Gas payment type\nupdateGasPaymentType(_objectSpread({},gasPaymentType));// Assigning validated value\ngasPaymentType_validated=gasPaymentType;}// Update customer information\nupdateCustomerInformation(_objectSpread(_objectSpread({},customerInformation),{},{customerAddres:customerAddres,useGas:useGas,fuel:fuel,supplierInformation:supplierInformation,electricityPaymentType:electricityPaymentType_validated,gasPaymentType:gasPaymentType_validated,fuel_description:fuel_description}));// Update progress bar\nupdateProgressBar(_objectSpread(_objectSpread({},progressBar),{},{step:5}));// Hide Address\nupdateShowFormAddres(false);// Show FormE7\nupdateShowE7(true);// Hide Overlay\nupdateShowOverlay(false);return _context.abrupt(\"break\",150);case 83:console.log('Step 5');// Update customer address\nupdateCustomerAddress(_objectSpread({},customerAddres));// Update Electricity information\nupdateElectricityInformation(_objectSpread(_objectSpread({},electricityInformation),{},{MPANDetails:MPANDetails}));// Update Gas information\nupdateGasInformation(_objectSpread(_objectSpread({},gasInformation),{},{dataGas:dataGas}));// Update fuel state\nupdateFuel(_objectSpread({},fuel));// Update useGas\nupdateUseGas(_objectSpread({},useGas));// Update Supplier Information\nupdateSupplierInformation(_objectSpread({},supplierInformation));/**-- Payment type validation --*/ // Validation Electricity payment type\nelectricity_payment_type_id=electricityPaymentType.electricity_payment_type_id;electricity_payment_type_method=electricityPaymentType.electricity_payment_type_method;if(electricity_payment_type_id===''&&electricity_payment_type_method===''){// Delete Electricity payment type if it is empty\n_copy_electricityPaymentType=_objectSpread({},electricityPaymentType);delete _copy_electricityPaymentType['electricity_payment_type_id'];delete _copy_electricityPaymentType['electricity_payment_type_method'];// Update Electricity payment type\nupdateElectricityPaymentType(_objectSpread({},_copy_electricityPaymentType));// Assigning validated value\nelectricityPaymentType_validated=_copy_electricityPaymentType;}else{// Update Electricity payment type\nupdateElectricityPaymentType(_objectSpread({},electricityPaymentType));// Assigning validated value\nelectricityPaymentType_validated=electricityPaymentType;}// Validation Gas payment type\ngas_payment_type_id=gasPaymentType.gas_payment_type_id;gas_payment_type_method=gasPaymentType.gas_payment_type_method;if(gas_payment_type_id===''&&gas_payment_type_method===''){// Delete Gas payment type if it is empty\n_copy_gasPaymentType=_objectSpread({},gasPaymentType);delete _copy_gasPaymentType['gas_payment_type_id'];delete _copy_gasPaymentType['gas_payment_type_method'];// Update Gas payment type\nupdateGasPaymentType(_objectSpread({},_copy_gasPaymentType));// Assigning validated value\ngasPaymentType_validated=_copy_gasPaymentType;}else{// Update Gas payment type\nupdateGasPaymentType(_objectSpread({},gasPaymentType));// Assigning validated value\ngasPaymentType_validated=gasPaymentType;}// Update Economy 7\nupdateEconomy7({economy7:_objectSpread({},economy7)});/**-- Assign Tariff description  */ // elec_only\nif(elec_only){console.log('elec_only, Assign Tariff description');// Update customer information\nupdateCustomerInformation(_objectSpread(_objectSpread({},customerInformation),{},{customerAddres:customerAddres,useGas:useGas,fuel:fuel,supplierInformation:supplierInformation,electricityPaymentType:electricityPaymentType_validated,gasPaymentType:gasPaymentType_validated,fuel_description:fuel_description,economy7:economy7,tariff_description:{unit_rate:unitRateElec.unit_rate}}));}// gas_only\nif(gas_only){console.log('gas_only, Assign Tariff description');// Update customer information\nupdateCustomerInformation(_objectSpread(_objectSpread({},customerInformation),{},{customerAddres:customerAddres,useGas:useGas,fuel:fuel,supplierInformation:supplierInformation,electricityPaymentType:electricityPaymentType_validated,gasPaymentType:gasPaymentType_validated,fuel_description:fuel_description,economy7:economy7,tariff_description:{unit_rate:unitRateGas.unit_rate}}));}// dual_active\nif(dual_active){// same_supplier\nif(same_supplier){console.log('Same supplier true, Assign Tariff description');// Update customer information\nupdateCustomerInformation(_objectSpread(_objectSpread({},customerInformation),{},{customerAddres:customerAddres,useGas:useGas,fuel:fuel,supplierInformation:supplierInformation,electricityPaymentType:electricityPaymentType_validated,gasPaymentType:gasPaymentType_validated,fuel_description:fuel_description,economy7:economy7,tariff_description:{unit_rate_elec:unitRateElec.unit_rate,unit_rate_gas:unitRateGas.unit_rate}}));}else{console.log('Same supplier false, Assign Tariff description');// Update customer information\nupdateCustomerInformation(_objectSpread(_objectSpread({},customerInformation),{},{customerAddres:customerAddres,useGas:useGas,fuel:fuel,supplierInformation:supplierInformation,electricityPaymentType:electricityPaymentType_validated,gasPaymentType:gasPaymentType_validated,fuel_description:fuel_description,economy7:economy7,tariff_description_elec:{elec_tariff:{unit_rate:unitRateElec.unit_rate}},tariff_description_gas:{gas_tariff:{unit_rate:unitRateGas.unit_rate}}}));}}// Update progress bar\nupdateProgressBar(_objectSpread(_objectSpread({},progressBar),{},{step:6}));// Hide Address\nupdateShowFormAddres(false);// Conditional to usage section\nif(gas_only){// Show Gas\nupdateShowFormUsageGAS(true);}else{// Show KWH\nupdateShowFormUsageKWH(true);}// Hide Overlay\nupdateShowOverlay(false);return _context.abrupt(\"break\",150);case 105:console.log('Step 6');return _context.abrupt(\"break\",150);case 107:console.log('Step 7');// Update customer address\nupdateCustomerAddress(_objectSpread({},customerAddres));// Update Electricity information\nupdateElectricityInformation(_objectSpread(_objectSpread({},electricityInformation),{},{MPANDetails:MPANDetails}));// Update Gas information\nupdateGasInformation(_objectSpread(_objectSpread({},gasInformation),{},{dataGas:dataGas}));// Update fuel state\nupdateFuel(_objectSpread({},fuel));// Update useGas\nupdateUseGas(_objectSpread({},useGas));// Update Supplier Information\nupdateSupplierInformation(_objectSpread({},supplierInformation));/**-- Payment type validation --*/ // Validation Electricity payment type\nelectricity_payment_type_id=electricityPaymentType.electricity_payment_type_id;electricity_payment_type_method=electricityPaymentType.electricity_payment_type_method;if(electricity_payment_type_id===''&&electricity_payment_type_method===''){// Delete Electricity payment type if it is empty\n_copy_electricityPaymentType2=_objectSpread({},electricityPaymentType);delete _copy_electricityPaymentType2['electricity_payment_type_id'];delete _copy_electricityPaymentType2['electricity_payment_type_method'];// Update Electricity payment type\nupdateElectricityPaymentType(_objectSpread({},_copy_electricityPaymentType2));// Assigning validated value\nelectricityPaymentType_validated=_copy_electricityPaymentType2;}else{// Update Electricity payment type\nupdateElectricityPaymentType(_objectSpread({},electricityPaymentType));// Assigning validated value\nelectricityPaymentType_validated=electricityPaymentType;}// Validation Gas payment type\ngas_payment_type_id=gasPaymentType.gas_payment_type_id;gas_payment_type_method=gasPaymentType.gas_payment_type_method;if(gas_payment_type_id===''&&gas_payment_type_method===''){// Delete Gas payment type if it is empty\n_copy_gasPaymentType2=_objectSpread({},gasPaymentType);delete _copy_gasPaymentType2['gas_payment_type_id'];delete _copy_gasPaymentType2['gas_payment_type_method'];// Update Gas payment type\nupdateGasPaymentType(_objectSpread({},_copy_gasPaymentType2));// Assigning validated value\ngasPaymentType_validated=_copy_gasPaymentType2;}else{// Update Gas payment type\nupdateGasPaymentType(_objectSpread({},gasPaymentType));// Assigning validated value\ngasPaymentType_validated=gasPaymentType;}// Update Economy 7\nupdateEconomy7({economy7:_objectSpread({},economy7)});/**-- Assign Tariff description && Usage */ // Entered usage boolean values \n// Elec\nusage_kwh_entered=usage_kwh_description.usage_kwh_entered;usage_gbp_entered_es=usage_gbp_description_es.usage_gbp_entered;usage_size_entered_es=usage_property_size_es.usage_size_entered;// Gas\nusage_gas_entered=usage_gas_description.usage_kwh_entered;usage_gbp_entered_gs=usage_gbp_description_gs.usage_gbp_entered;usage_size_entered_gs=usage_property_size_gs.usage_size_entered;// Dual\nusage_size_entered_dual=usage_property_size_dual.usage_size_entered;// usage_validated\nusage_validated={usage_kwh_description:usage_kwh_description,usage_gbp_description_es:usage_gbp_description_es,usage_gas_description:usage_gas_description,usage_gbp_description_gs:usage_gbp_description_gs,usage_property_size_es:usage_property_size_es,usage_property_size_gs:usage_property_size_gs,usage_property_size_dual:usage_property_size_dual};// copy_usage_validated\ncopy_usage_validated=_objectSpread({},usage_validated);/**-- Electricity Values --*/ // Validation usage_kwh_entered\nif(usage_kwh_entered){delete copy_usage_validated['usage_gbp_description_es'];delete copy_usage_validated['usage_property_size_es'];delete copy_usage_validated['usage_property_size_dual'];}//  Validation usage_gbp_entered_es\nif(usage_gbp_entered_es){delete copy_usage_validated['usage_property_size_es'];delete copy_usage_validated['usage_property_size_dual'];}// Validation usage_size_entered_es\nif(usage_size_entered_es){delete copy_usage_validated['usage_property_size_dual'];delete copy_usage_validated['usage_property_size_gs'];}/**-- Gas Values --*/ // usage_gas_entered\nif(usage_gas_entered){delete copy_usage_validated['usage_gbp_description_gs'];delete copy_usage_validated['usage_property_size_gs'];delete copy_usage_validated['usage_property_size_dual'];}// Validation usage_gbp_entered_gs\nif(usage_gbp_entered_gs){delete copy_usage_validated['usage_property_size_gs'];delete copy_usage_validated['usage_property_size_dual'];}// Validation usage_size_entered_gs\nif(usage_size_entered_gs){delete copy_usage_validated['usage_property_size_dual'];delete copy_usage_validated['usage_property_size_es'];}/**-- Dual Values --*/ // Validation usage_size_entered_dual\nif(usage_size_entered_dual){delete copy_usage_validated['usage_property_size_es'];delete copy_usage_validated['usage_property_size_gs'];}// elec_only\nif(elec_only){console.log('elec_only, Assign Tariff description');delete copy_usage_validated['usage_gas_description'];delete copy_usage_validated['usage_gbp_description_gs'];delete copy_usage_validated['usage_property_size_gs'];delete copy_usage_validated['usage_property_size_dual'];// Update customer information\nupdateCustomerInformation(_objectSpread(_objectSpread({},customerInformation),{},{customerAddres:customerAddres,useGas:useGas,fuel:fuel,supplierInformation:supplierInformation,electricityPaymentType:electricityPaymentType_validated,gasPaymentType:gasPaymentType_validated,fuel_description:fuel_description,economy7:economy7,tariff_description:{unit_rate:unitRateElec.unit_rate},debt:debt},copy_usage_validated));}// gas_only\nif(gas_only){console.log('gas_only, Assign Tariff description');delete copy_usage_validated['usage_kwh_description'];delete copy_usage_validated['usage_gbp_description_es'];delete copy_usage_validated['usage_property_size_es'];delete copy_usage_validated['usage_property_size_dual'];// Update customer information\nupdateCustomerInformation(_objectSpread(_objectSpread({},customerInformation),{},{customerAddres:customerAddres,useGas:useGas,fuel:fuel,supplierInformation:supplierInformation,electricityPaymentType:electricityPaymentType_validated,gasPaymentType:gasPaymentType_validated,fuel_description:fuel_description,economy7:economy7,tariff_description:{unit_rate:unitRateGas.unit_rate},debt:debt},copy_usage_validated));}// dual_active\nif(dual_active){// same_supplier\nif(same_supplier){console.log('Same supplier true, Assign Tariff description');// Update customer information\nupdateCustomerInformation(_objectSpread(_objectSpread({},customerInformation),{},{customerAddres:customerAddres,useGas:useGas,fuel:fuel,supplierInformation:supplierInformation,electricityPaymentType:electricityPaymentType_validated,gasPaymentType:gasPaymentType_validated,fuel_description:fuel_description,economy7:economy7,tariff_description:{unit_rate_elec:unitRateElec.unit_rate,unit_rate_gas:unitRateGas.unit_rate},debt:debt},copy_usage_validated));}else{console.log('Same supplier false, Assign Tariff description');// Update customer information\nupdateCustomerInformation(_objectSpread(_objectSpread({},customerInformation),{},{customerAddres:customerAddres,useGas:useGas,fuel:fuel,supplierInformation:supplierInformation,electricityPaymentType:electricityPaymentType_validated,gasPaymentType:gasPaymentType_validated,fuel_description:fuel_description,economy7:economy7,tariff_description_elec:{elec_tariff:{unit_rate:unitRateElec.unit_rate}},tariff_description_gas:{gas_tariff:{unit_rate:unitRateGas.unit_rate}},debt:debt},copy_usage_validated));}}// Update AvgElec\nupdateAvgElec(avgElec);// Update AvgGas\nupdateAvgGas(avgGas);// Update progress bar\nupdateProgressBar(_objectSpread(_objectSpread({},progressBar),{},{step:8}));// Hide Form Address\nupdateShowFormAddres(false);// Show Compare\nupdateShowFormCompare(true);// Hide Overlay\nupdateShowOverlay(false);return _context.abrupt(\"break\",150);case 147:console.log('Step 8');return _context.abrupt(\"break\",150);case 149:return _context.abrupt(\"break\",150);case 150:case\"end\":return _context.stop();}}},_callee);}));return function customerStep(_x){return _ref2.apply(this,arguments);};}();// States control\n// console.log('De aqui para abajo');\n// console.log(customerAddres);\n// console.log(useGas);\n// console.log(fuel);   \n// console.log(electricityInformation);\n// console.log(gasInformation);\n// console.log(supplierInformation);\nconsole.log(customerInformation);// console.log(electricityPaymentType);\n// console.log(gasPaymentType);\n// console.log(economy7);\n// console.log(electricityInformation);\n// console.log(gasInformation);\n// console.log(supplierInformation);\n// console.log(customerInformation);\n// console.log(electricityPaymentType);\n// console.log(customerAddres);\n// console.log(economy7);\n// console.log(useGas);\n// console.log(fuel);\nreturn/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Navbar,{progressBar:progressBar,user:user}),showOverlay?/*#__PURE__*/_jsx(Overlay,{text:'Loading data, please wait...',spinner:true}):null,/*#__PURE__*/_jsxs(_Fragment,{children:[showFormPostCode?/*#__PURE__*/_jsx(Suspense,{fallback:/*#__PURE__*/_jsx(Overlay,{text:'Loading data, please wait...',spinner:true}),children:/*#__PURE__*/_jsx(FormPostCode,{addPostCodeData:addPostCodeData,progressBar:progressBar,showScript:showScript,updateShowFormPostCode:updateShowFormPostCode,updateShowFormAddres:updateShowFormAddres,updateProgressBar:updateProgressBar,updateShowScript:updateShowScript})}):null,showFormAddres?/*#__PURE__*/_jsx(Suspense,{fallback:/*#__PURE__*/_jsx(Overlay,{text:'Loading data, please wait...',spinner:true}),children:/*#__PURE__*/_jsx(FormAddress,{postcodeValue:customerPostCode.postcode,gasInformation:gasInformation,electricityInformation:electricityInformation,progressBar:progressBar,showScript:showScript,customerStep:customerStep,updateCustomerAddress:updateCustomerAddress,updateGasInformation:updateGasInformation,updateElectricityInformation:updateElectricityInformation,updateShowFormPostCode:updateShowFormPostCode,updateShowFormAddres:updateShowFormAddres,updateShowOverlay:updateShowOverlay,updateProgressBar:updateProgressBar,updateShowScript:updateShowScript,updateShowFomrFuelType:updateShowFomrFuelType})}):null,showFormFuelType?/*#__PURE__*/_jsx(Suspense,{fallback:/*#__PURE__*/_jsx(Overlay,{text:'Loading data, please wait...',spinner:true}),children:/*#__PURE__*/_jsx(FormFuelType,{customerInformation:customerInformation,showScript:showScript,fuel:fuel,useGas:useGas,electricityInformation:electricityInformation,gasInformation:gasInformation,supplierInformation:supplierInformation,customerAddres:customerAddres,progressBar:progressBar,updateCustomerInformation:updateCustomerInformation,updateFuel:updateFuel,updateUseGas:updateUseGas,updateElectricityInformation:updateElectricityInformation,updateGasInformation:updateGasInformation,updateSupplierInformation:updateSupplierInformation,updateCustomerAddress:updateCustomerAddress,updateShowFomrFuelType:updateShowFomrFuelType,updateShowFormMpanMprn:updateShowFormMpanMprn,updateShowFormAddres:updateShowFormAddres,updateProgressBar:updateProgressBar})}):null,showFormMpanMprn?/*#__PURE__*/_jsx(Suspense,{fallback:/*#__PURE__*/_jsx(Overlay,{text:'Loading data, please wait...',spinner:true}),children:/*#__PURE__*/_jsx(FormMpanMprn,{customerAddres:customerAddres,electricityInformation:electricityInformation,gasInformation:gasInformation,customerInformation:customerInformation,useGas:useGas,fuel:fuel,progressBar:progressBar,showScript:showScript,updateCustomerAddress:updateCustomerAddress,updateElectricityInformation:updateElectricityInformation,updateGasInformation:updateGasInformation,updateCustomerInformation:updateCustomerInformation,updateProgressBar:updateProgressBar,updateShowFormMpanMprn:updateShowFormMpanMprn,updateShowFormSupply:updateShowFormSupply,updateShowFomrFuelType:updateShowFomrFuelType,updateShowOverlay:updateShowOverlay})}):null,showFormSupply?/*#__PURE__*/_jsx(Suspense,{fallback:/*#__PURE__*/_jsx(Overlay,{text:'Loading data, please wait...',spinner:true}),children:/*#__PURE__*/_jsx(FormSupply,{customerAddres:customerAddres,electricityInformation:electricityInformation,gasInformation:gasInformation,supplierInformation:supplierInformation,useGas:useGas,fuel:fuel,customerInformation:customerInformation,electricityPaymentType:electricityPaymentType,gasPaymentType:gasPaymentType,progressBar:progressBar,showScript:showScript,updateCustomerAddress:updateCustomerAddress,updateShowFormMpanMprn:updateShowFormMpanMprn,updateShowFormSupply:updateShowFormSupply,updateShowE7:updateShowE7,updateSupplierInformation:updateSupplierInformation,updateElectricityInformation:updateElectricityInformation,updateGasInformation:updateGasInformation,updateCustomerInformation:updateCustomerInformation,updateElectricityPaymentType:updateElectricityPaymentType,updateGasPaymentType:updateGasPaymentType,updateFuel:updateFuel,updateProgressBar:updateProgressBar})}):null,showE7?/*#__PURE__*/_jsx(Suspense,{fallback:/*#__PURE__*/_jsx(Overlay,{text:'Loading data, please wait...',spinner:true}),children:/*#__PURE__*/_jsx(FormE7,{economy7:economy7,customerInformation:customerInformation,electricityPaymentType:electricityPaymentType,gasPaymentType:gasPaymentType,electricityInformation:electricityInformation,gasInformation:gasInformation,supplierInformation:supplierInformation,progressBar:progressBar,showScript:showScript,updateEconomy7:updateEconomy7,updateCustomerInformation:updateCustomerInformation,updateShowFormSupply:updateShowFormSupply,updateShowE7:updateShowE7,updateShowFormTariffs:updateShowFormTariffs,updateElectricityPaymentType:updateElectricityPaymentType,updateGasPaymentType:updateGasPaymentType,updateProgressBar:updateProgressBar,updateShowOverlay:updateShowOverlay,updateSupplierInformation:updateSupplierInformation,updateGasInformation:updateGasInformation,updateElectricityInformation:updateElectricityInformation,updateShowFormUsageKWH:updateShowFormUsageKWH,updateShowFormUsageGAS:updateShowFormUsageGAS})}):null,showFormUsageKWH?/*#__PURE__*/_jsx(Suspense,{fallback:/*#__PURE__*/_jsx(Overlay,{text:'Loading data, please wait...',spinner:true}),children:/*#__PURE__*/_jsx(FormUsageKWH,{customerInformation:customerInformation,progressBar:progressBar,showScript:showScript,updateAvgElec:updateAvgElec,updateCustomerInformation:updateCustomerInformation,updateShowFormUsageKWH:updateShowFormUsageKWH,updateShowFormUsageGAS:updateShowFormUsageGAS,updateShowFormUsageGBP_es:updateShowFormUsageGBP_es,updateShowFormDebt:updateShowFormDebt,updateShowFormTariffs:updateShowFormTariffs,updateProgressBar:updateProgressBar,updateShowOverlay:updateShowOverlay,updateShowE7:updateShowE7})}):null,showFormUsageGAS?/*#__PURE__*/_jsx(Suspense,{fallback:/*#__PURE__*/_jsx(Overlay,{text:'Loading data, please wait...',spinner:true}),children:/*#__PURE__*/_jsx(FormUsageGAS,{customerInformation:customerInformation,progressBar:progressBar,avgElec:avgElec,showScript:showScript,updateCustomerInformation:updateCustomerInformation,updateShowFormUsageGAS:updateShowFormUsageGAS,updateShowFormUsageKWH:updateShowFormUsageKWH,updateShowFormUsageGBP_gs:updateShowFormUsageGBP_gs,updateShowFormUsageGBP_es:updateShowFormUsageGBP_es,updateShowFormUsageAVG:updateShowFormUsageAVG,updateShowFormDebt:updateShowFormDebt,updateShowFormTariffs:updateShowFormTariffs,updateAvgGas:updateAvgGas,updateAvgElec:updateAvgElec,updateProgressBar:updateProgressBar,updateShowOverlay:updateShowOverlay,updateShowE7:updateShowE7})}):null,showFormUsageGBP_es?/*#__PURE__*/_jsx(Suspense,{fallback:/*#__PURE__*/_jsx(Overlay,{text:'Loading data, please wait...',spinner:true}),children:/*#__PURE__*/_jsx(FormUsageGBP_es,(_jsx2={customerInformation:customerInformation,progressBar:progressBar,showScript:showScript,updateCustomerInformation:updateCustomerInformation,updateShowFormUsageKWH:updateShowFormUsageKWH,updateShowFormUsageGBP_es:updateShowFormUsageGBP_es},_defineProperty(_jsx2,\"updateShowFormUsageGBP_es\",updateShowFormUsageGBP_es),_defineProperty(_jsx2,\"updateShowFormUsageAVG\",updateShowFormUsageAVG),_defineProperty(_jsx2,\"updateShowFormUsageGAS\",updateShowFormUsageGAS),_defineProperty(_jsx2,\"updateShowFormDebt\",updateShowFormDebt),_defineProperty(_jsx2,\"updateAvgElec\",updateAvgElec),_defineProperty(_jsx2,\"updateProgressBar\",updateProgressBar),_jsx2))}):null,showFormUsageGBP_gs?/*#__PURE__*/_jsx(Suspense,{fallback:/*#__PURE__*/_jsx(Overlay,{text:'Loading data, please wait...',spinner:true}),children:/*#__PURE__*/_jsx(FormUsageGBP_gs,{customerInformation:customerInformation,avgElec:avgElec,progressBar:progressBar,showScript:showScript,updateCustomerInformation:updateCustomerInformation,updateShowFormUsageGAS:updateShowFormUsageGAS,updateShowFormUsageGBP_gs:updateShowFormUsageGBP_gs,updateShowFormUsageAVG:updateShowFormUsageAVG,updateShowFormDebt:updateShowFormDebt,updateAvgGas:updateAvgGas,updateProgressBar:updateProgressBar})}):null,showFormUsageAVG?/*#__PURE__*/_jsx(Suspense,{fallback:/*#__PURE__*/_jsx(Overlay,{text:'Loading data, please wait...',spinner:true}),children:/*#__PURE__*/_jsx(FormUsageAVG,{customerInformation:customerInformation,avgElec:avgElec,avgGas:avgGas,progressBar:progressBar,showScript:showScript,updateCustomerInformation:updateCustomerInformation,updateShowFormUsageAVG:updateShowFormUsageAVG,updateShowFormUsageGBP_es:updateShowFormUsageGBP_es,updateShowFormUsageGBP_gs:updateShowFormUsageGBP_gs,updateShowFormUsageGAS:updateShowFormUsageGAS,updateShowFormDebt:updateShowFormDebt,updateProgressBar:updateProgressBar})}):null,showFormDebt?/*#__PURE__*/_jsx(Suspense,{fallback:/*#__PURE__*/_jsx(Overlay,{text:'Loading data, please wait...',spinner:true}),children:/*#__PURE__*/_jsx(FormDebt,{customerInformation:customerInformation,showScript:showScript,progressBar:progressBar,updateCustomerInformation:updateCustomerInformation,updateShowFormUsageKWH:updateShowFormUsageKWH,updateShowFormUsageGBP_es:updateShowFormUsageGBP_es,updateShowFormUsageAVG:updateShowFormUsageAVG,updateProgressBar:updateProgressBar,updateShowFormUsageGAS:updateShowFormUsageGAS,updateShowFormUsageGBP_gs:updateShowFormUsageGBP_gs,updateShowFormDebt:updateShowFormDebt,updateShowFormCompare:updateShowFormCompare})}):null,showFormCompare?/*#__PURE__*/_jsx(Suspense,{fallback:/*#__PURE__*/_jsx(Overlay,{text:'Loading data, please wait...',spinner:true}),children:/*#__PURE__*/_jsx(FormCompare,{customerInformation:customerInformation,user:user,electricityInformation:electricityInformation,gasInformation:gasInformation,avgElec:avgElec,avgGas:avgGas,showScript:showScript,progressBar:progressBar,updateCustomerInformation:updateCustomerInformation,updateShowOverlay:updateShowOverlay,updateShowFormCompare:updateShowFormCompare,updateShowFormUsageKWH:updateShowFormUsageKWH,updateShowFormUsageGBP_es:updateShowFormUsageGBP_es,updateShowFormUsageAVG:updateShowFormUsageAVG,updateShowFormUsageGAS:updateShowFormUsageGAS,updateShowFormUsageGBP_gs:updateShowFormUsageGBP_gs,updateShowFormDetails:updateShowFormDetails,updateShowFormDebt:updateShowFormDebt,updateProgressBar:updateProgressBar})}):null,showFormDetails?/*#__PURE__*/_jsx(Suspense,{fallback:/*#__PURE__*/_jsx(Overlay,{text:'Loading data, please wait...',spinner:true}),children:/*#__PURE__*/_jsx(FormDetails,{customerInformation:customerInformation,progressBar:progressBar,updateCustomerInformation:updateCustomerInformation,updateShowFormCompare:updateShowFormCompare,updateShowFormDetails:updateShowFormDetails,updateProgressBar:updateProgressBar,updateShowFormBankDetails:updateShowFormBankDetails,updateShowOverlay:updateShowOverlay})}):null,showFormBankDetails?/*#__PURE__*/_jsx(Suspense,{fallback:/*#__PURE__*/_jsx(Overlay,{text:'Loading data, please wait...',spinner:true}),children:/*#__PURE__*/_jsx(FormBankDetails,{customerInformation:customerInformation,progressBar:progressBar,updateCustomerInformation:updateCustomerInformation,updateShowFormDetails:updateShowFormDetails,updateProgressBar:updateProgressBar,updateShowFormBankDetails:updateShowFormBankDetails,updateShowFormRating:updateShowFormRating,updateShowOverlay:updateShowOverlay})}):null,showFormRating?/*#__PURE__*/_jsx(FormRating,{customerInformation:customerInformation,progressBar:progressBar,updateCustomerInformation:updateCustomerInformation,updateShowFormRating:updateShowFormRating,updateShowSuccessFul:updateShowSuccessFul,updateProgressBar:updateProgressBar}):null,showSuccessFul?/*#__PURE__*/_jsx(FormSuccessful,{}):null]}),/*#__PURE__*/_jsx(Footer,{})]});}export default Home;","map":{"version":3,"sources":["/Users/juanlugo/Desktop/sp-firebase/src/pages/HomePage/Home.jsx"],"names":["React","useState","lazy","Suspense","db","Navbar","Footer","Overlay","FormPostCode","FormAddress","FormFuelType","FormMpanMprn","FormSupply","FormE7","FormUsageKWH","FormUsageGAS","FormUsageGBP_es","FormUsageGBP_gs","FormUsageAVG","FormDebt","FormCompare","FormDetails","FormBankDetails","FormRating","FormSuccessful","Home","user","step","progressBar","updateProgressBar","showScript","updateShowScript","postcode","customerPostCode","updateCustomerPostCode","customerAddres","updateCustomerAddress","useGas","updateUseGas","fuel","updateFuel","electricityInformation","updateElectricityInformation","gasInformation","updateGasInformation","supplierInformation","updateSupplierInformation","customerInformation","updateCustomerInformation","electricityPaymentType","updateElectricityPaymentType","gasPaymentType","updateGasPaymentType","economy7","updateEconomy7","showOverlay","updateShowOverlay","showFormPostCode","updateShowFormPostCode","showFormAddres","updateShowFormAddres","showFormFuelType","updateShowFomrFuelType","showFormMpanMprn","updateShowFormMpanMprn","showFormSupply","updateShowFormSupply","showE7","updateShowE7","showFormTariffs","updateShowFormTariffs","showFormUsageKWH","updateShowFormUsageKWH","showFormUsageGAS","updateShowFormUsageGAS","showFormUsageGBP_es","updateShowFormUsageGBP_es","showFormUsageGBP_gs","updateShowFormUsageGBP_gs","showFormUsageAVG","updateShowFormUsageAVG","avgElec","updateAvgElec","avgGas","updateAvgGas","showFormDebt","updateShowFormDebt","showFormCompare","updateShowFormCompare","showFormDetails","updateShowFormDetails","showFormBankDetails","updateShowFormBankDetails","showFormRating","updateShowFormRating","showSuccessFul","updateShowSuccessFul","addPostCodeData","postCodeData","toUpperCase","customerStep","customer","MPANDetails","dataGas","fuel_description","usage_property_size_dual","usage_property_size_es","usage_property_size_gs","usage_gas_description","usage_gbp_description_gs","usage_kwh_description","usage_gbp_description_es","debt","console","log","gas_only","elec_only","same_supplier","dual_active","general_unit_rate_elec","unit_rate","general_unit_rate_gas","collection","doc","unitRateElecRef","get","then","exists","data","catch","error","unitRateElec","unitRateGasRef","unitRateGas","electricity_payment_type_id","electricity_payment_type_method","copy_electricityPaymentType","electricityPaymentType_validated","gas_payment_type_id","gas_payment_type_method","copy_gasPaymentType","gasPaymentType_validated","tariff_description","unit_rate_elec","unit_rate_gas","tariff_description_elec","elec_tariff","tariff_description_gas","gas_tariff","usage_kwh_entered","usage_gbp_entered_es","usage_gbp_entered","usage_size_entered_es","usage_size_entered","usage_gas_entered","usage_gbp_entered_gs","usage_size_entered_gs","usage_size_entered_dual","usage_validated","copy_usage_validated"],"mappings":"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","sourcesContent":["import React, { useState, lazy, Suspense } from \"react\";\n// Firebase\nimport { db } from \"../../firebase/firebase\";\n\n// Components\nimport Navbar from \"../../components/Navbar/Navbar\";\nimport Footer from \"../../components/Footer/Footer\";\nimport Overlay from \"../../components/Overlay/Overlay\";\nconst FormPostCode = lazy(() => import('../../components/FormCards/FormPostCode/FormPostCode'));\nconst FormAddress = lazy(() => import('../../components/FormCards/FormAddress/FormAddress'));\nconst FormFuelType = lazy(() => import('../../components/FormCards/FormFuelType/FormFuelType'));\nconst FormMpanMprn = lazy(() => import('../../components/FormCards/FormMPN-MPRN/FormMpanMprn'));\nconst FormSupply = lazy(() => import('../../components/FormCards/FormSupply/FormSupply'));\nconst FormE7 = lazy(() => import('../../components/FormCards/FormE7/FormE7'));\n// const FormTariffs = lazy(() => import('../../components/FormCards/FormTariffs/FormTariffs'));\nconst FormUsageKWH = lazy(() => import('../../components/FormCards/FormsUsage/FormUsageKWH/FormUsageKWH'));\nconst FormUsageGAS = lazy(() => import('../../components/FormCards/FormsUsage/FormUsageGAS/FormUsageGAS'));\nconst FormUsageGBP_es = lazy(() => import('../../components/FormCards/FormsUsage/FormUsageGBP_es/FormUsageGBP_es'));\nconst FormUsageGBP_gs = lazy(() => import('../../components/FormCards/FormsUsage/FormUsageGBP_gs/FormUsageGBP_gs'));\nconst FormUsageAVG = lazy(() => import('../../components/FormCards/FormsUsage/FormUsageAVG/FormUsageAVG'));\nconst FormDebt = lazy(() => import('../../components/FormCards/FormDebt/FormDebt'));\nconst FormCompare = lazy(() => import('../../components/FormCards/FormCompare/FormCompare'));\nconst FormDetails = lazy(() => import('../../components/FormCards/FormDetails/FormDetails'));\nconst FormBankDetails = lazy(() => import('../../components/FormCards/FormBankDetails/FormBankDetails'));\nconst FormRating = lazy(() => import('../../components/FormCards/FormRating/FormRating'));\nconst FormSuccessful = lazy(() => import('../../components/FormCards/FormSuccessful/FormSuccessful'));\n\nfunction Home({ user }) {\n    /* -- STATES -- */\n    // Progress bar \n    const [progressBar, updateProgressBar] = useState({ step: 0 });\n\n    // Script\n    const [showScript, updateShowScript] = useState(true);\n\n    // Customer Postcode State\n    const [customerPostCode, updateCustomerPostCode] = useState({\n        postcode: \"\"\n    });\n\n    // Customer Address\n    const [customerAddres, updateCustomerAddress] = useState({});\n\n    // Use gas \n    const [useGas, updateUseGas] = useState({});\n\n    // Fuel\n    const [fuel, updateFuel] = useState({});\n\n    // Customer Electricity Information\n    const [electricityInformation, updateElectricityInformation] = useState({});\n\n    // Customer Gas Information\n    const [gasInformation, updateGasInformation] = useState({});\n\n    // Customer supplier information\n    const [supplierInformation, updateSupplierInformation] = useState({});\n\n    // Customer Information\n    const [customerInformation, updateCustomerInformation] = useState({});\n\n    // Customer Electricity Payment Type\n    const [electricityPaymentType, updateElectricityPaymentType] = useState({});\n\n    // Customer Gas Payment Type\n    const [gasPaymentType, updateGasPaymentType] = useState({});\n\n    // Customer Economy 7\n    const [economy7, updateEconomy7] = useState({});\n\n    /** -- VIEWS states -- */\n\n    // Show Overlay\n    const [showOverlay, updateShowOverlay] = useState(false);\n\n    // Show Form PostCode\n    const [showFormPostCode, updateShowFormPostCode] = useState(true);\n\n    // Show Form Address\n    const [showFormAddres, updateShowFormAddres] = useState(false);\n\n    // Show form Fuel type\n    const [showFormFuelType, updateShowFomrFuelType] = useState(false);\n\n    // Show Form MPAN/MPRN \n    const [showFormMpanMprn, updateShowFormMpanMprn] = useState(false);\n\n    // Show Form Supply \n    const [showFormSupply, updateShowFormSupply] = useState(false);\n\n    // Show Form E7\n    const [showE7, updateShowE7] = useState(false);\n\n    // Show Form Tariffs\n    const [showFormTariffs, updateShowFormTariffs] = useState(false);\n\n    // Show Form Usage KWH\n    const [showFormUsageKWH, updateShowFormUsageKWH] = useState(false);\n\n    // Show Form Usage GAS\n    const [showFormUsageGAS, updateShowFormUsageGAS] = useState(false);\n\n    // Show Form Usage GBP_es\n    const [showFormUsageGBP_es, updateShowFormUsageGBP_es] = useState(false);\n\n    // Show Form Usage GBP_gs\n    const [showFormUsageGBP_gs, updateShowFormUsageGBP_gs] = useState(false);\n\n    // Show Form Usage AVG\n    const [showFormUsageAVG, updateShowFormUsageAVG] = useState(false);\n\n    // AVG for elec\n    const [avgElec, updateAvgElec] = useState(false);\n\n    // AVG for gas\n    const [avgGas, updateAvgGas] = useState(false);\n\n    // Show Form Debt\n    const [showFormDebt, updateShowFormDebt] = useState(false);\n\n    // Show Form Compare\n    const [showFormCompare, updateShowFormCompare] = useState(false);\n\n    // Show Form Details\n    const [showFormDetails, updateShowFormDetails] = useState(false);\n\n    // Show Form Bank Details\n    const [showFormBankDetails, updateShowFormBankDetails] = useState(false);\n\n    // Show rating\n    const [showFormRating, updateShowFormRating] = useState(false);\n\n    // Show Successful\n    const [showSuccessFul, updateShowSuccessFul] = useState(false);\n\n    // Add postcode to customer \n    const addPostCodeData = (postcode) => {\n        const postCodeData = postcode;\n        updateCustomerPostCode({\n            postcode: postCodeData.toUpperCase()\n        });\n    };\n\n    // Customer step\n    const customerStep = async (customer) => {\n\n        const { step, customerAddres, MPANDetails, dataGas, fuel, useGas, fuel_description, supplierInformation, electricityPaymentType, gasPaymentType, economy7, usage_property_size_dual, usage_property_size_es, usage_property_size_gs, usage_gas_description, usage_gbp_description_gs, usage_kwh_description, usage_gbp_description_es, avgElec, avgGas, debt } = customer;\n\n        console.log('Aqui aqui');\n\n        console.log(debt)\n\n        // Postcode\n        const { postcode } = customerAddres;\n\n        // Variables\n        let gas_only;\n        let elec_only;\n        let same_supplier;\n        let dual_active;\n\n        if (step > 1) {\n            /**-- Assign Values   */\n            gas_only = fuel_description.gas_only;\n            elec_only = fuel_description.elec_only;\n            same_supplier = fuel_description.same_supplier;\n            dual_active = fuel_description.dual_active;\n        }\n\n        // Variables for electricity and gas payment methods validated\n        let electricityPaymentType_validated;\n        let gasPaymentType_validated;\n\n        // Validation Electricity payment type\n        let electricity_payment_type_id;\n        let electricity_payment_type_method;\n\n        // Validation Gas payment type\n        let gas_payment_type_id;\n        let gas_payment_type_method;\n\n        // Default unit rate for electricity\n        const general_unit_rate_elec = { unit_rate: 17 };\n\n        // Default unit rate for gas\n        const general_unit_rate_gas = { unit_rate: 27 };\n\n        /**-- Unit rate for electricity --*/\n\n        // DocRef Unit Rate Elec\n        let unitRateElecRef = await db.collection(\"unitRates\").doc('unit_rate_svt_elec');\n\n        let unitRateElec = await unitRateElecRef.get().then((doc) => {\n            if (doc.exists) {\n\n                return doc.data();\n\n            } else {\n\n                // console.log(general_unit_rate_elec);\n\n                return general_unit_rate_elec;\n            }\n        }).catch((error) => {\n\n            console.log(\"Error getting document:\", error);\n            // console.log(general_unit_rate_elec);\n\n            return general_unit_rate_elec;\n        });\n\n        /**-- Unit rate for gas --*/\n\n        // DocRef Unit Rate gas\n        let unitRateGasRef = await db.collection(\"unitRates\").doc('unit_rate_svt_gas');\n\n        let unitRateGas = await unitRateGasRef.get().then((doc) => {\n            if (doc.exists) {\n\n                return doc.data();\n\n            } else {\n\n                // console.log(general_unit_rate_elec);\n\n                return general_unit_rate_gas;\n            }\n        }).catch((error) => {\n\n            console.log(\"Error getting document:\", error);\n            // console.log(general_unit_rate_elec);\n\n            return general_unit_rate_gas;\n        });\n\n        // Step 0 - Enter your postcode\n        switch (step) {\n            case 0:\n                console.log('Step 0');\n\n                // Update progress bar\n                updateProgressBar({ ...progressBar, step: 1 });\n                // Add postcode to customerData\n                addPostCodeData(postcode);\n                // Hidde Form Post Code\n                updateShowFormPostCode(false);\n                // Show Form Address\n                updateShowFormAddres(true);\n                // Hide Overlay\n                updateShowOverlay(false);\n                break;\n\n            // Step 1 - Enter your full address -> Choose your fuel type\n            case 1:\n                console.log('Step 1');\n\n                // Add postcode to customerData\n                addPostCodeData(postcode);\n\n                // Update customer address\n                updateCustomerAddress({ ...customerAddres });\n\n                // Update Electricity information\n                updateElectricityInformation({ ...electricityInformation, MPANDetails });\n\n                // Update Gas information\n                updateGasInformation({ ...gasInformation, dataGas });\n\n                // Update progress bar\n                updateProgressBar({ ...progressBar, step: 2 });\n                // Hide Address\n                updateShowFormAddres(false);\n                // Show Form Fuel type\n                updateShowFomrFuelType(true);\n                // Hide Overlay\n                updateShowOverlay(false);\n\n                break;\n\n            // Step 2 - Choose your fuel type -> Supply number\n            case 2:\n                console.log('Step 2');\n\n                // Update customer address\n                updateCustomerAddress({ ...customerAddres });\n\n                // Update Electricity information\n                updateElectricityInformation({ ...electricityInformation, MPANDetails });\n\n                // Update Gas information\n                updateGasInformation({ ...gasInformation, dataGas });\n\n                // Update fuel state\n                updateFuel({ ...fuel });\n\n                // Update useGas\n                updateUseGas({ ...useGas });\n\n                // Update Customer\n                updateCustomerInformation({\n                    ...customerInformation,\n                    fuel_description\n                });\n\n                // Update progress bar\n                updateProgressBar({ ...progressBar, step: 3 });\n                // Hide Address\n                updateShowFormAddres(false);\n                // Show MPAN/MPRN\n                updateShowFormMpanMprn(true);\n                // Hide Overlay\n                updateShowOverlay(false);\n\n                break;\n\n            // Step 3 - Supply number -> Choose your energy supplier(s)\n            case 3:\n                console.log('Step 3');\n\n                // Update customer address\n                updateCustomerAddress({ ...customerAddres });\n\n                // Update Electricity information\n                updateElectricityInformation({ ...electricityInformation, MPANDetails });\n\n                // Update Gas information\n                updateGasInformation({ ...gasInformation, dataGas });\n\n                // Update fuel state\n                updateFuel({ ...fuel });\n\n                // Update useGas\n                updateUseGas({ ...useGas });\n\n                // Update Supplier Information\n                updateSupplierInformation({ ...supplierInformation });\n\n                // Update Customer\n                updateCustomerInformation({\n                    ...customerInformation,\n                    fuel_description\n                });\n\n                // Update progress bar\n                updateProgressBar({ ...progressBar, step: 4 });\n                // Hide Address\n                updateShowFormAddres(false);\n                // Show Form Supply\n                updateShowFormSupply(true);\n                // Hide Overlay\n                updateShowOverlay(false);\n\n                break;\n\n            // Step 4 - Choose your energy supplier(s) -> Economy 7\n            case 4:\n                console.log('Step 4');\n\n                // Update customer address\n                updateCustomerAddress({ ...customerAddres });\n\n                // Update Electricity information\n                updateElectricityInformation({ ...electricityInformation, MPANDetails });\n\n                // Update Gas information\n                updateGasInformation({ ...gasInformation, dataGas });\n\n                // Update fuel state\n                updateFuel({ ...fuel });\n\n                // Update useGas\n                updateUseGas({ ...useGas });\n\n                // Update Supplier Information\n                updateSupplierInformation({ ...supplierInformation });\n\n                /**-- Payment type validation --*/\n\n                // Validation Electricity payment type\n                electricity_payment_type_id = electricityPaymentType.electricity_payment_type_id;\n                electricity_payment_type_method = electricityPaymentType.electricity_payment_type_method;\n\n                if ((electricity_payment_type_id === '') && (electricity_payment_type_method === '')) {\n                    // Delete Electricity payment type if it is empty\n                    const copy_electricityPaymentType = { ...electricityPaymentType };\n                    delete copy_electricityPaymentType['electricity_payment_type_id'];\n                    delete copy_electricityPaymentType['electricity_payment_type_method'];\n                    // Update Electricity payment type\n                    updateElectricityPaymentType({ ...copy_electricityPaymentType });\n                    // Assigning validated value\n                    electricityPaymentType_validated = copy_electricityPaymentType;\n                } else {\n                    // Update Electricity payment type\n                    updateElectricityPaymentType({ ...electricityPaymentType });\n                    // Assigning validated value\n                    electricityPaymentType_validated = electricityPaymentType;\n                }\n\n                // Validation Gas payment type\n                gas_payment_type_id = gasPaymentType.gas_payment_type_id;\n                gas_payment_type_method = gasPaymentType.gas_payment_type_method;\n\n                if ((gas_payment_type_id === '') && (gas_payment_type_method === '')) {\n                    // Delete Gas payment type if it is empty\n                    const copy_gasPaymentType = { ...gasPaymentType };\n                    delete copy_gasPaymentType['gas_payment_type_id'];\n                    delete copy_gasPaymentType['gas_payment_type_method'];\n                    // Update Gas payment type\n                    updateGasPaymentType({ ...copy_gasPaymentType });\n                    // Assigning validated value\n                    gasPaymentType_validated = copy_gasPaymentType;\n                } else {\n                    // Update Gas payment type\n                    updateGasPaymentType({ ...gasPaymentType });\n                    // Assigning validated value\n                    gasPaymentType_validated = gasPaymentType;\n                }\n\n                // Update customer information\n                updateCustomerInformation({\n                    ...customerInformation,\n                    customerAddres,\n                    useGas,\n                    fuel,\n                    supplierInformation,\n                    electricityPaymentType: electricityPaymentType_validated,\n                    gasPaymentType: gasPaymentType_validated,\n                    fuel_description,\n                });\n\n                // Update progress bar\n                updateProgressBar({ ...progressBar, step: 5 });\n                // Hide Address\n                updateShowFormAddres(false);\n                // Show FormE7\n                updateShowE7(true);\n                // Hide Overlay\n                updateShowOverlay(false);\n\n                break;\n\n            // Step 5 - Economy 7 -> How much energy do you use?\n            case 5:\n                console.log('Step 5');\n\n                // Update customer address\n                updateCustomerAddress({ ...customerAddres });\n\n                // Update Electricity information\n                updateElectricityInformation({ ...electricityInformation, MPANDetails });\n\n                // Update Gas information\n                updateGasInformation({ ...gasInformation, dataGas });\n\n                // Update fuel state\n                updateFuel({ ...fuel });\n\n                // Update useGas\n                updateUseGas({ ...useGas });\n\n                // Update Supplier Information\n                updateSupplierInformation({ ...supplierInformation });\n\n                /**-- Payment type validation --*/\n\n                // Validation Electricity payment type\n                electricity_payment_type_id = electricityPaymentType.electricity_payment_type_id;\n                electricity_payment_type_method = electricityPaymentType.electricity_payment_type_method;\n\n                if ((electricity_payment_type_id === '') && (electricity_payment_type_method === '')) {\n                    // Delete Electricity payment type if it is empty\n                    const copy_electricityPaymentType = { ...electricityPaymentType };\n                    delete copy_electricityPaymentType['electricity_payment_type_id'];\n                    delete copy_electricityPaymentType['electricity_payment_type_method'];\n                    // Update Electricity payment type\n                    updateElectricityPaymentType({ ...copy_electricityPaymentType });\n                    // Assigning validated value\n                    electricityPaymentType_validated = copy_electricityPaymentType;\n                } else {\n                    // Update Electricity payment type\n                    updateElectricityPaymentType({ ...electricityPaymentType });\n                    // Assigning validated value\n                    electricityPaymentType_validated = electricityPaymentType;\n                }\n\n                // Validation Gas payment type\n                gas_payment_type_id = gasPaymentType.gas_payment_type_id;\n                gas_payment_type_method = gasPaymentType.gas_payment_type_method;\n\n                if ((gas_payment_type_id === '') && (gas_payment_type_method === '')) {\n                    // Delete Gas payment type if it is empty\n                    const copy_gasPaymentType = { ...gasPaymentType };\n                    delete copy_gasPaymentType['gas_payment_type_id'];\n                    delete copy_gasPaymentType['gas_payment_type_method'];\n                    // Update Gas payment type\n                    updateGasPaymentType({ ...copy_gasPaymentType });\n                    // Assigning validated value\n                    gasPaymentType_validated = copy_gasPaymentType;\n                } else {\n                    // Update Gas payment type\n                    updateGasPaymentType({ ...gasPaymentType });\n                    // Assigning validated value\n                    gasPaymentType_validated = gasPaymentType;\n                }\n\n                // Update Economy 7\n                updateEconomy7({\n                    economy7: {\n                        ...economy7\n                    }\n                });\n\n                /**-- Assign Tariff description  */\n\n                // elec_only\n                if (elec_only) {\n                    console.log('elec_only, Assign Tariff description');\n\n                    // Update customer information\n                    updateCustomerInformation({\n                        ...customerInformation,\n                        customerAddres,\n                        useGas,\n                        fuel,\n                        supplierInformation,\n                        electricityPaymentType: electricityPaymentType_validated,\n                        gasPaymentType: gasPaymentType_validated,\n                        fuel_description,\n                        economy7,\n                        tariff_description: {\n                            unit_rate: unitRateElec.unit_rate\n                        }\n                    });\n                }\n\n                // gas_only\n                if (gas_only) {\n                    console.log('gas_only, Assign Tariff description');\n\n                    // Update customer information\n                    updateCustomerInformation({\n                        ...customerInformation,\n                        customerAddres,\n                        useGas,\n                        fuel,\n                        supplierInformation,\n                        electricityPaymentType: electricityPaymentType_validated,\n                        gasPaymentType: gasPaymentType_validated,\n                        fuel_description,\n                        economy7,\n                        tariff_description: {\n                            unit_rate: unitRateGas.unit_rate\n                        }\n                    });\n                }\n\n                // dual_active\n                if (dual_active) {\n                    // same_supplier\n                    if (same_supplier) {\n                        console.log('Same supplier true, Assign Tariff description');\n\n                        // Update customer information\n                        updateCustomerInformation({\n                            ...customerInformation,\n                            customerAddres,\n                            useGas,\n                            fuel,\n                            supplierInformation,\n                            electricityPaymentType: electricityPaymentType_validated,\n                            gasPaymentType: gasPaymentType_validated,\n                            fuel_description,\n                            economy7,\n                            tariff_description: {\n                                unit_rate_elec: unitRateElec.unit_rate,\n                                unit_rate_gas: unitRateGas.unit_rate,\n                            }\n                        });\n                    } else {\n                        console.log('Same supplier false, Assign Tariff description');\n\n                        // Update customer information\n                        updateCustomerInformation({\n                            ...customerInformation,\n                            customerAddres,\n                            useGas,\n                            fuel,\n                            supplierInformation,\n                            electricityPaymentType: electricityPaymentType_validated,\n                            gasPaymentType: gasPaymentType_validated,\n                            fuel_description,\n                            economy7,\n                            tariff_description_elec: {\n                                elec_tariff: {\n                                    unit_rate: unitRateElec.unit_rate\n                                }\n                            },\n                            tariff_description_gas: {\n                                gas_tariff: {\n                                    unit_rate: unitRateGas.unit_rate\n                                }\n                            }\n                        });\n                    }\n                }\n\n                // Update progress bar\n                updateProgressBar({ ...progressBar, step: 6 });\n                // Hide Address\n                updateShowFormAddres(false);\n\n                // Conditional to usage section\n                if (gas_only) {\n                    // Show Gas\n                    updateShowFormUsageGAS(true)\n                } else {\n                    // Show KWH\n                    updateShowFormUsageKWH(true);\n                }\n\n                // Hide Overlay\n                updateShowOverlay(false);\n\n                break;\n            \n            // Step 6 - How much energy do you use? -> Existing debt\n            case 6:\n                console.log('Step 6');\n                break;\n\n            // Step 7 - How much energy do you use? -> Compare section\n            case 7:\n                console.log('Step 7');\n\n                // Update customer address\n                updateCustomerAddress({ ...customerAddres });\n\n                // Update Electricity information\n                updateElectricityInformation({ ...electricityInformation, MPANDetails });\n\n                // Update Gas information\n                updateGasInformation({ ...gasInformation, dataGas });\n\n                // Update fuel state\n                updateFuel({ ...fuel });\n\n                // Update useGas\n                updateUseGas({ ...useGas });\n\n                // Update Supplier Information\n                updateSupplierInformation({ ...supplierInformation });\n\n                /**-- Payment type validation --*/\n\n                // Validation Electricity payment type\n                electricity_payment_type_id = electricityPaymentType.electricity_payment_type_id;\n                electricity_payment_type_method = electricityPaymentType.electricity_payment_type_method;\n\n                if ((electricity_payment_type_id === '') && (electricity_payment_type_method === '')) {\n                    // Delete Electricity payment type if it is empty\n                    const copy_electricityPaymentType = { ...electricityPaymentType };\n                    delete copy_electricityPaymentType['electricity_payment_type_id'];\n                    delete copy_electricityPaymentType['electricity_payment_type_method'];\n                    // Update Electricity payment type\n                    updateElectricityPaymentType({ ...copy_electricityPaymentType });\n                    // Assigning validated value\n                    electricityPaymentType_validated = copy_electricityPaymentType;\n                } else {\n                    // Update Electricity payment type\n                    updateElectricityPaymentType({ ...electricityPaymentType });\n                    // Assigning validated value\n                    electricityPaymentType_validated = electricityPaymentType;\n                }\n\n                // Validation Gas payment type\n                gas_payment_type_id = gasPaymentType.gas_payment_type_id;\n                gas_payment_type_method = gasPaymentType.gas_payment_type_method;\n\n                if ((gas_payment_type_id === '') && (gas_payment_type_method === '')) {\n                    // Delete Gas payment type if it is empty\n                    const copy_gasPaymentType = { ...gasPaymentType };\n                    delete copy_gasPaymentType['gas_payment_type_id'];\n                    delete copy_gasPaymentType['gas_payment_type_method'];\n                    // Update Gas payment type\n                    updateGasPaymentType({ ...copy_gasPaymentType });\n                    // Assigning validated value\n                    gasPaymentType_validated = copy_gasPaymentType;\n                } else {\n                    // Update Gas payment type\n                    updateGasPaymentType({ ...gasPaymentType });\n                    // Assigning validated value\n                    gasPaymentType_validated = gasPaymentType;\n                }\n\n                // Update Economy 7\n                updateEconomy7({\n                    economy7: {\n                        ...economy7\n                    }\n                });\n\n                /**-- Assign Tariff description && Usage */\n\n                // Entered usage boolean values \n                // Elec\n                const usage_kwh_entered = usage_kwh_description.usage_kwh_entered;\n                const usage_gbp_entered_es = usage_gbp_description_es.usage_gbp_entered;\n                const usage_size_entered_es = usage_property_size_es.usage_size_entered;\n\n                // Gas\n                const usage_gas_entered = usage_gas_description.usage_kwh_entered;\n                const usage_gbp_entered_gs = usage_gbp_description_gs.usage_gbp_entered;\n                const usage_size_entered_gs = usage_property_size_gs.usage_size_entered;\n\n                // Dual\n                const usage_size_entered_dual = usage_property_size_dual.usage_size_entered;\n\n                // usage_validated\n                const usage_validated = {\n                    usage_kwh_description,\n                    usage_gbp_description_es,\n                    usage_gas_description,\n                    usage_gbp_description_gs,\n                    usage_property_size_es,\n                    usage_property_size_gs,\n                    usage_property_size_dual\n                };\n\n                // copy_usage_validated\n                let copy_usage_validated = { ...usage_validated };\n\n                /**-- Electricity Values --*/\n\n                // Validation usage_kwh_entered\n                if (usage_kwh_entered) {\n                    delete copy_usage_validated['usage_gbp_description_es'];\n                    delete copy_usage_validated['usage_property_size_es'];\n                    delete copy_usage_validated['usage_property_size_dual'];\n                }\n\n                //  Validation usage_gbp_entered_es\n                if (usage_gbp_entered_es) {\n                    delete copy_usage_validated['usage_property_size_es'];\n                    delete copy_usage_validated['usage_property_size_dual'];\n                }\n\n                // Validation usage_size_entered_es\n                if (usage_size_entered_es) {\n                    delete copy_usage_validated['usage_property_size_dual'];\n                    delete copy_usage_validated['usage_property_size_gs'];\n                }\n\n                /**-- Gas Values --*/\n\n                // usage_gas_entered\n                if (usage_gas_entered) {\n                    delete copy_usage_validated['usage_gbp_description_gs'];\n                    delete copy_usage_validated['usage_property_size_gs'];\n                    delete copy_usage_validated['usage_property_size_dual'];\n                }\n\n                // Validation usage_gbp_entered_gs\n                if (usage_gbp_entered_gs) {\n                    delete copy_usage_validated['usage_property_size_gs'];\n                    delete copy_usage_validated['usage_property_size_dual'];\n                }\n\n                // Validation usage_size_entered_gs\n                if (usage_size_entered_gs) {\n                    delete copy_usage_validated['usage_property_size_dual'];\n                    delete copy_usage_validated['usage_property_size_es'];\n                }\n\n                /**-- Dual Values --*/\n\n                // Validation usage_size_entered_dual\n                if (usage_size_entered_dual) {\n                    delete copy_usage_validated['usage_property_size_es'];\n                    delete copy_usage_validated['usage_property_size_gs'];\n                }\n\n                // elec_only\n                if (elec_only) {\n                    console.log('elec_only, Assign Tariff description');\n\n                    delete copy_usage_validated['usage_gas_description'];\n                    delete copy_usage_validated['usage_gbp_description_gs'];\n                    delete copy_usage_validated['usage_property_size_gs'];\n                    delete copy_usage_validated['usage_property_size_dual'];\n\n                    // Update customer information\n                    updateCustomerInformation({\n                        ...customerInformation,\n                        customerAddres,\n                        useGas,\n                        fuel,\n                        supplierInformation,\n                        electricityPaymentType: electricityPaymentType_validated,\n                        gasPaymentType: gasPaymentType_validated,\n                        fuel_description,\n                        economy7,\n                        tariff_description: {\n                            unit_rate: unitRateElec.unit_rate\n                        },\n                        debt,\n                        ...copy_usage_validated\n                    });\n                }\n\n                // gas_only\n                if (gas_only) {\n                    console.log('gas_only, Assign Tariff description');\n\n                    delete copy_usage_validated['usage_kwh_description'];\n                    delete copy_usage_validated['usage_gbp_description_es'];\n                    delete copy_usage_validated['usage_property_size_es'];\n                    delete copy_usage_validated['usage_property_size_dual'];\n\n                    // Update customer information\n                    updateCustomerInformation({\n                        ...customerInformation,\n                        customerAddres,\n                        useGas,\n                        fuel,\n                        supplierInformation,\n                        electricityPaymentType: electricityPaymentType_validated,\n                        gasPaymentType: gasPaymentType_validated,\n                        fuel_description,\n                        economy7,\n                        tariff_description: {\n                            unit_rate: unitRateGas.unit_rate\n                        },\n                        debt,\n                        ...copy_usage_validated\n                    });\n                }\n\n                // dual_active\n                if (dual_active) {\n                    // same_supplier\n                    if (same_supplier) {\n                        console.log('Same supplier true, Assign Tariff description');\n\n                        // Update customer information\n                        updateCustomerInformation({\n                            ...customerInformation,\n                            customerAddres,\n                            useGas,\n                            fuel,\n                            supplierInformation,\n                            electricityPaymentType: electricityPaymentType_validated,\n                            gasPaymentType: gasPaymentType_validated,\n                            fuel_description,\n                            economy7,\n                            tariff_description: {\n                                unit_rate_elec: unitRateElec.unit_rate,\n                                unit_rate_gas: unitRateGas.unit_rate,\n                            },\n                            debt,\n                            ...copy_usage_validated\n                        });\n\n                    } else {\n                        console.log('Same supplier false, Assign Tariff description');\n\n                        // Update customer information\n                        updateCustomerInformation({\n                            ...customerInformation,\n                            customerAddres,\n                            useGas,\n                            fuel,\n                            supplierInformation,\n                            electricityPaymentType: electricityPaymentType_validated,\n                            gasPaymentType: gasPaymentType_validated,\n                            fuel_description,\n                            economy7,\n                            tariff_description_elec: {\n                                elec_tariff: {\n                                    unit_rate: unitRateElec.unit_rate\n                                }\n                            },\n                            tariff_description_gas: {\n                                gas_tariff: {\n                                    unit_rate: unitRateGas.unit_rate\n                                }\n                            },\n                            debt,\n                            ...copy_usage_validated\n                        });\n                    }\n                }\n\n                // Update AvgElec\n                updateAvgElec(avgElec);\n                // Update AvgGas\n                updateAvgGas(avgGas);\n\n                // Update progress bar\n                updateProgressBar({ ...progressBar, step: 8 });\n                // Hide Form Address\n                updateShowFormAddres(false);\n                // Show Compare\n                updateShowFormCompare(true);\n\n                // Hide Overlay\n                updateShowOverlay(false);\n\n                break;\n\n            // Step 8\n            case 8:\n                console.log('Step 8');\n                break;\n            default:\n                break;\n        }\n    }\n\n    // States control\n    // console.log('De aqui para abajo');\n    // console.log(customerAddres);\n    // console.log(useGas);\n    // console.log(fuel);   \n    // console.log(electricityInformation);\n    // console.log(gasInformation);\n    // console.log(supplierInformation);\n    console.log(customerInformation);\n    // console.log(electricityPaymentType);\n    // console.log(gasPaymentType);\n    // console.log(economy7);\n\n    // console.log(electricityInformation);\n    // console.log(gasInformation);\n    // console.log(supplierInformation);\n    // console.log(customerInformation);\n    // console.log(electricityPaymentType);\n    // console.log(customerAddres);\n    // console.log(economy7);\n    // console.log(useGas);\n    // console.log(fuel);\n\n    return (\n        <>\n            {/* Navbar */}\n            <Navbar\n                progressBar={progressBar}\n                user={user}\n            />\n\n            {/* Overlay */}\n            {showOverlay ? <Overlay text={'Loading data, please wait...'} spinner={true} /> : null}\n\n            <>\n                {/* Postcode form*/}\n                {showFormPostCode ?\n                    (\n                        <Suspense fallback={<Overlay text={'Loading data, please wait...'} spinner={true} />}>\n                            <FormPostCode\n                                addPostCodeData={addPostCodeData}\n                                progressBar={progressBar}\n                                showScript={showScript}\n                                updateShowFormPostCode={updateShowFormPostCode}\n                                updateShowFormAddres={updateShowFormAddres}\n                                updateProgressBar={updateProgressBar}\n                                updateShowScript={updateShowScript}\n                            />\n                        </Suspense>\n                    )\n                    :\n                    (\n                        null\n                    )\n                }\n\n                {/* Address form*/}\n                {showFormAddres ?\n                    (\n                        <Suspense fallback={<Overlay text={'Loading data, please wait...'} spinner={true} />}>\n                            <FormAddress\n                                postcodeValue={customerPostCode.postcode}\n                                gasInformation={gasInformation}\n                                electricityInformation={electricityInformation}\n                                progressBar={progressBar}\n                                showScript={showScript}\n                                customerStep={customerStep}\n                                updateCustomerAddress={updateCustomerAddress}\n                                updateGasInformation={updateGasInformation}\n                                updateElectricityInformation={updateElectricityInformation}\n                                updateShowFormPostCode={updateShowFormPostCode}\n                                updateShowFormAddres={updateShowFormAddres}\n                                updateShowOverlay={updateShowOverlay}\n                                updateProgressBar={updateProgressBar}\n                                updateShowScript={updateShowScript}\n                                updateShowFomrFuelType={updateShowFomrFuelType}\n                            />\n                        </Suspense>\n                    )\n                    :\n                    (\n                        null\n                    )\n                }\n\n                {/* Fuel type */}\n                {showFormFuelType ?\n                    (\n                        <Suspense fallback={<Overlay text={'Loading data, please wait...'} spinner={true} />}>\n                            <FormFuelType\n                                customerInformation={customerInformation}\n                                showScript={showScript}\n                                fuel={fuel}\n                                useGas={useGas}\n                                electricityInformation={electricityInformation}\n                                gasInformation={gasInformation}\n                                supplierInformation={supplierInformation}\n                                customerAddres={customerAddres}\n                                progressBar={progressBar}\n                                updateCustomerInformation={updateCustomerInformation}\n                                updateFuel={updateFuel}\n                                updateUseGas={updateUseGas}\n                                updateElectricityInformation={updateElectricityInformation}\n                                updateGasInformation={updateGasInformation}\n                                updateSupplierInformation={updateSupplierInformation}\n                                updateCustomerAddress={updateCustomerAddress}\n                                updateShowFomrFuelType={updateShowFomrFuelType}\n                                updateShowFormMpanMprn={updateShowFormMpanMprn}\n                                updateShowFormAddres={updateShowFormAddres}\n                                updateProgressBar={updateProgressBar}\n                            />\n                        </Suspense>\n                    )\n                    :\n                    null\n                }\n\n                {/* MPAN/MPRN form*/}\n                {showFormMpanMprn ?\n                    (\n                        <Suspense fallback={<Overlay text={'Loading data, please wait...'} spinner={true} />}>\n                            <FormMpanMprn\n                                customerAddres={customerAddres}\n                                electricityInformation={electricityInformation}\n                                gasInformation={gasInformation}\n                                customerInformation={customerInformation}\n                                useGas={useGas}\n                                fuel={fuel}\n                                progressBar={progressBar}\n                                showScript={showScript}\n                                updateCustomerAddress={updateCustomerAddress}\n                                updateElectricityInformation={updateElectricityInformation}\n                                updateGasInformation={updateGasInformation}\n                                updateCustomerInformation={updateCustomerInformation}\n                                updateProgressBar={updateProgressBar}\n                                updateShowFormMpanMprn={updateShowFormMpanMprn}\n                                updateShowFormSupply={updateShowFormSupply}\n                                updateShowFomrFuelType={updateShowFomrFuelType}\n                                updateShowOverlay={updateShowOverlay}\n                            />\n                        </Suspense>\n                    )\n                    :\n                    (\n                        null\n                    )\n                }\n                {/* Supplier Information form*/}\n                {showFormSupply ?\n                    (\n                        <Suspense fallback={<Overlay text={'Loading data, please wait...'} spinner={true} />}>\n                            <FormSupply\n                                customerAddres={customerAddres}\n                                electricityInformation={electricityInformation}\n                                gasInformation={gasInformation}\n                                supplierInformation={supplierInformation}\n                                useGas={useGas}\n                                fuel={fuel}\n                                customerInformation={customerInformation}\n                                electricityPaymentType={electricityPaymentType}\n                                gasPaymentType={gasPaymentType}\n                                progressBar={progressBar}\n                                showScript={showScript}\n                                updateCustomerAddress={updateCustomerAddress}\n                                updateShowFormMpanMprn={updateShowFormMpanMprn}\n                                updateShowFormSupply={updateShowFormSupply}\n                                updateShowE7={updateShowE7}\n                                updateSupplierInformation={updateSupplierInformation}\n                                updateElectricityInformation={updateElectricityInformation}\n                                updateGasInformation={updateGasInformation}\n                                updateCustomerInformation={updateCustomerInformation}\n                                updateElectricityPaymentType={updateElectricityPaymentType}\n                                updateGasPaymentType={updateGasPaymentType}\n                                updateFuel={updateFuel}\n                                updateProgressBar={updateProgressBar}\n                            />\n                        </Suspense>\n                    )\n                    :\n                    (\n                        null\n                    )\n                }\n                {/* Economy 7 form */}\n                {showE7 ?\n                    (\n                        <Suspense fallback={<Overlay text={'Loading data, please wait...'} spinner={true} />}>\n                            <FormE7\n                                economy7={economy7}\n                                customerInformation={customerInformation}\n                                electricityPaymentType={electricityPaymentType}\n                                gasPaymentType={gasPaymentType}\n                                electricityInformation={electricityInformation}\n                                gasInformation={gasInformation}\n                                supplierInformation={supplierInformation}\n                                progressBar={progressBar}\n                                showScript={showScript}\n                                updateEconomy7={updateEconomy7}\n                                updateCustomerInformation={updateCustomerInformation}\n                                updateShowFormSupply={updateShowFormSupply}\n                                updateShowE7={updateShowE7}\n                                updateShowFormTariffs={updateShowFormTariffs}\n                                updateElectricityPaymentType={updateElectricityPaymentType}\n                                updateGasPaymentType={updateGasPaymentType}\n                                updateProgressBar={updateProgressBar}\n                                updateShowOverlay={updateShowOverlay}\n                                updateSupplierInformation={updateSupplierInformation}\n                                updateGasInformation={updateGasInformation}\n                                updateElectricityInformation={updateElectricityInformation}\n                                updateShowFormUsageKWH={updateShowFormUsageKWH}\n                                updateShowFormUsageGAS={updateShowFormUsageGAS}\n                            />\n                        </Suspense>\n                    )\n                    :\n                    (\n                        null\n                    )\n                }\n                {/* Form Tariffs\n                {showFormTariffs ?\n                    (\n                        <Suspense fallback={<Overlay text={'Loading data, please wait...'} spinner={true} />}>\n                            <FormTariffs\n                                customerInformation={customerInformation}\n                                showScript={showScript}\n                                progressBar={progressBar}\n                                updateShowE7={updateShowE7}\n                                updateShowFormTariffs={updateShowFormTariffs}\n                                updateShowOverlay={updateShowOverlay}\n                                updateCustomerInformation={updateCustomerInformation}\n                                updateElectricityPaymentType={updateElectricityPaymentType}\n                                updateShowFormUsageKWH={updateShowFormUsageKWH}\n                                updateShowFormUsageGAS={updateShowFormUsageGAS}\n                                updateProgressBar={updateProgressBar}\n                            />\n                        </Suspense>\n                    )\n                    :\n                    (\n                        null\n                    )\n                } */}\n                {/* Form Usage */}\n                {showFormUsageKWH ?\n                    (\n                        <Suspense fallback={<Overlay text={'Loading data, please wait...'} spinner={true} />}>\n                            <FormUsageKWH\n                                customerInformation={customerInformation}\n                                progressBar={progressBar}\n                                showScript={showScript}\n                                updateAvgElec={updateAvgElec}\n                                updateCustomerInformation={updateCustomerInformation}\n                                updateShowFormUsageKWH={updateShowFormUsageKWH}\n                                updateShowFormUsageGAS={updateShowFormUsageGAS}\n                                updateShowFormUsageGBP_es={updateShowFormUsageGBP_es}\n                                updateShowFormDebt={updateShowFormDebt}\n                                updateShowFormTariffs={updateShowFormTariffs}\n                                updateProgressBar={updateProgressBar}\n                                updateShowOverlay={updateShowOverlay}\n                                updateShowE7={updateShowE7}\n                            />\n                        </Suspense>\n                    )\n                    :\n                    null\n                }\n                {/* Form Usage */}\n                {showFormUsageGAS ?\n                    (\n                        <Suspense fallback={<Overlay text={'Loading data, please wait...'} spinner={true} />}>\n                            <FormUsageGAS\n                                customerInformation={customerInformation}\n                                progressBar={progressBar}\n                                avgElec={avgElec}\n                                showScript={showScript}\n                                updateCustomerInformation={updateCustomerInformation}\n                                updateShowFormUsageGAS={updateShowFormUsageGAS}\n                                updateShowFormUsageKWH={updateShowFormUsageKWH}\n                                updateShowFormUsageGBP_gs={updateShowFormUsageGBP_gs}\n                                updateShowFormUsageGBP_es={updateShowFormUsageGBP_es}\n                                updateShowFormUsageAVG={updateShowFormUsageAVG}\n                                updateShowFormDebt={updateShowFormDebt}\n                                updateShowFormTariffs={updateShowFormTariffs}\n                                updateAvgGas={updateAvgGas}\n                                updateAvgElec={updateAvgElec}\n                                updateProgressBar={updateProgressBar}\n                                updateShowOverlay={updateShowOverlay}\n                                updateShowE7={updateShowE7}\n                            />\n                        </Suspense>\n                    )\n                    :\n                    null\n                }\n                {/* Form Usage GBP */}\n                {showFormUsageGBP_es ?\n                    (\n                        <Suspense fallback={<Overlay text={'Loading data, please wait...'} spinner={true} />}>\n                            <FormUsageGBP_es\n                                customerInformation={customerInformation}\n                                progressBar={progressBar}\n                                showScript={showScript}\n                                updateCustomerInformation={updateCustomerInformation}\n                                updateShowFormUsageKWH={updateShowFormUsageKWH}\n                                updateShowFormUsageGBP_es={updateShowFormUsageGBP_es}\n                                updateShowFormUsageGBP_es={updateShowFormUsageGBP_es}\n                                updateShowFormUsageAVG={updateShowFormUsageAVG}\n                                updateShowFormUsageGAS={updateShowFormUsageGAS}\n                                updateShowFormDebt={updateShowFormDebt}\n                                updateAvgElec={updateAvgElec}\n                                updateProgressBar={updateProgressBar}\n                            />\n                        </Suspense>\n                    )\n                    :\n                    null\n                }\n                {/* Form Usage GBP */}\n                {showFormUsageGBP_gs ?\n                    (\n                        <Suspense fallback={<Overlay text={'Loading data, please wait...'} spinner={true} />}>\n                            <FormUsageGBP_gs\n                                customerInformation={customerInformation}\n                                avgElec={avgElec}\n                                progressBar={progressBar}\n                                showScript={showScript}\n                                updateCustomerInformation={updateCustomerInformation}\n                                updateShowFormUsageGAS={updateShowFormUsageGAS}\n                                updateShowFormUsageGBP_gs={updateShowFormUsageGBP_gs}\n                                updateShowFormUsageAVG={updateShowFormUsageAVG}\n                                updateShowFormDebt={updateShowFormDebt}\n                                updateAvgGas={updateAvgGas}\n                                updateProgressBar={updateProgressBar}\n                            />\n                        </Suspense>\n                    )\n                    :\n                    null\n                }\n                {/* Form Usage AVG*/}\n                {showFormUsageAVG ?\n                    (\n                        <Suspense fallback={<Overlay text={'Loading data, please wait...'} spinner={true} />}>\n                            <FormUsageAVG\n                                customerInformation={customerInformation}\n                                avgElec={avgElec}\n                                avgGas={avgGas}\n                                progressBar={progressBar}\n                                showScript={showScript}\n                                updateCustomerInformation={updateCustomerInformation}\n                                updateShowFormUsageAVG={updateShowFormUsageAVG}\n                                updateShowFormUsageGBP_es={updateShowFormUsageGBP_es}\n                                updateShowFormUsageGBP_gs={updateShowFormUsageGBP_gs}\n                                updateShowFormUsageGAS={updateShowFormUsageGAS}\n                                updateShowFormDebt={updateShowFormDebt}\n                                updateProgressBar={updateProgressBar}\n                            />\n                        </Suspense>\n                    )\n                    :\n                    null\n                }\n                {/* Form Debt */}\n                {showFormDebt ?\n                    (\n                        <Suspense fallback={<Overlay text={'Loading data, please wait...'} spinner={true} />}>\n                            <FormDebt\n                                customerInformation={customerInformation}\n                                showScript={showScript}\n                                progressBar={progressBar}\n                                updateCustomerInformation={updateCustomerInformation}\n                                updateShowFormUsageKWH={updateShowFormUsageKWH}\n                                updateShowFormUsageGBP_es={updateShowFormUsageGBP_es}\n                                updateShowFormUsageAVG={updateShowFormUsageAVG}\n                                updateProgressBar={updateProgressBar}\n                                updateShowFormUsageGAS={updateShowFormUsageGAS}\n                                updateShowFormUsageGBP_gs={updateShowFormUsageGBP_gs}\n                                updateShowFormDebt={updateShowFormDebt}\n                                updateShowFormCompare={updateShowFormCompare}\n                            />\n                        </Suspense>\n                    )\n                    :\n                    null\n                }\n                {/* Form Compare */}\n                {showFormCompare ?\n                    (\n                        <Suspense fallback={<Overlay text={'Loading data, please wait...'} spinner={true} />}>\n                            <FormCompare\n                                customerInformation={customerInformation}\n                                user={user}\n                                electricityInformation={electricityInformation}\n                                gasInformation={gasInformation}\n                                avgElec={avgElec}\n                                avgGas={avgGas}\n                                showScript={showScript}\n                                progressBar={progressBar}\n                                updateCustomerInformation={updateCustomerInformation}\n                                updateShowOverlay={updateShowOverlay}\n                                updateShowFormCompare={updateShowFormCompare}\n                                updateShowFormUsageKWH={updateShowFormUsageKWH}\n                                updateShowFormUsageGBP_es={updateShowFormUsageGBP_es}\n                                updateShowFormUsageAVG={updateShowFormUsageAVG}\n                                updateShowFormUsageGAS={updateShowFormUsageGAS}\n                                updateShowFormUsageGBP_gs={updateShowFormUsageGBP_gs}\n                                updateShowFormDetails={updateShowFormDetails}\n                                updateShowFormDebt={updateShowFormDebt}\n                                updateProgressBar={updateProgressBar}\n                            />\n                        </Suspense>\n                    )\n                    :\n                    null\n                }\n                {/* Form Details */}\n                {showFormDetails ?\n                    (\n                        <Suspense fallback={<Overlay text={'Loading data, please wait...'} spinner={true} />}>\n                            <FormDetails\n                                customerInformation={customerInformation}\n                                progressBar={progressBar}\n                                updateCustomerInformation={updateCustomerInformation}\n                                updateShowFormCompare={updateShowFormCompare}\n                                updateShowFormDetails={updateShowFormDetails}\n                                updateProgressBar={updateProgressBar}\n                                updateShowFormBankDetails={updateShowFormBankDetails}\n                                updateShowOverlay={updateShowOverlay}\n                            />\n                        </Suspense>\n                    )\n                    :\n                    null\n                }\n                {/* Form Bank Details */}\n                {showFormBankDetails ?\n                    (\n                        <Suspense fallback={<Overlay text={'Loading data, please wait...'} spinner={true} />}>\n                            <FormBankDetails\n                                customerInformation={customerInformation}\n                                progressBar={progressBar}\n                                updateCustomerInformation={updateCustomerInformation}\n                                updateShowFormDetails={updateShowFormDetails}\n                                updateProgressBar={updateProgressBar}\n                                updateShowFormBankDetails={updateShowFormBankDetails}\n                                updateShowFormRating={updateShowFormRating}\n                                updateShowOverlay={updateShowOverlay}\n                            />\n                        </Suspense>\n                    )\n                    :\n                    null\n                }\n                {/* Form rating */}\n                {showFormRating ?\n                    (\n                        <FormRating\n                            customerInformation={customerInformation}\n                            progressBar={progressBar}\n                            updateCustomerInformation={updateCustomerInformation}\n                            updateShowFormRating={updateShowFormRating}\n                            updateShowSuccessFul={updateShowSuccessFul}\n                            updateProgressBar={updateProgressBar}\n                        />\n                    )\n                    :\n                    null\n                }\n                {/* Form successful */}\n                {showSuccessFul ?\n                    (\n                        <FormSuccessful\n\n                        />\n                    )\n                    :\n                    null\n                }\n            </>\n            {/* Footer */}\n            <Footer />\n        </>\n    )\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}
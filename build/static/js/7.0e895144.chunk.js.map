{"version":3,"sources":["hooks/useAddress/useAddress.jsx","components/FormCards/FormAddress/FormAddress.jsx","components/Error/Error.jsx","components/FormCards/FormScript/FormScript.jsx","components/FormCards/FormAssistant/FormAssistant.jsx"],"names":["useAddress","label","initialState","optionsAddress","useState","state","updateState","className","onChange","e","target","value","defaultValue","id","multiple","map","option","formatted_address","toString","replace","console","log","FormAddress","postcodeValue","gasInformation","electricityInformation","progressBar","showScript","customerStep","updateCustomerAddress","updateGasInformation","updateElectricityInformation","updateShowFormPostCode","updateShowFormAddres","updateShowOverlay","updateProgressBar","updateShowFomrFuelType","doornumber","addressline1","addressline2","city","postcode","mpan","mprn","dataAddress","updateDataAddress","addressList","updateAddressList","address","SelectAddress","updateAddress","showTypeAddress","updateShowTypeAddres","error","updateError","createCustomer","updateCreateCustomer","focusAnimation","setFocusAnimation","useEffect","document","querySelector","scrollIntoView","behavior","block","inline","window","scrollTo","top","fetchAPI","a","process","url","toLowerCase","fetch","method","then","response","status","json","swal","button","icon","content","catch","undefined","response_postcode","data","addresses","forEach","item","i","selectedValue","doornumberValue","addressline1Value","addressline2Value","cityValue","town_or_city","mpanValue","mprnValue","handleChange","name","trim","sendAddress","door_typed","getElementById","addres_line1_typed","city_typed","doornumberValidate","addressValidate","cityValidate","postcodeParameters","ecoes_api","body","JSON","stringify","headers","Results","Errors","length","UtilityAddressMatches","AddressDetails","Value","responseECOESMPAN","mpan_core","detailsParameters","MPANDetails","meter_serial_number","meter_type","supplier_mpid","UtilityMatches","Meters","MeterDetails","UtilityDetails","postcode_unformatted_no_space","postcode_formated","first_two","slice","last_three","first_three","first_four","dataGas","meter_mechanism_code","current_supplier_id","gas_transport_id","hasOwnProperty","mprn_core","responseXOSERVE","postcode_formatted","doornumber_formatted","uid","db","collection","doc","docRef","getCustomerData","get","exists","customer","customerAddres","customerData","company_name_es","company_name","mpan_fetched","company_name_gs","mprn_fetched","buttons","cancel","confirm","Provider","color","size","style","marginBottom","display","flexDirection","textAlign","toUpperCase","result","set","created","firebase","firestore","FieldValue","serverTimestamp","step","goToPostcode","preventDefault","type_address","reset_doornumber","reset_line1","reset_line2","reset_city","onClick","Error","message","FormScript","FormAssistant","tips","width","type","disabled","position","handleChangeSelect","handleChangeTypeAddress","step_content","use","avgElec","avgGas","scriptHeight","setHeight","scHeight","offsetHeight","parentElement","maxHeight","tips_content","assistantHeight"],"mappings":"oUAkCeA,EA/BI,SAACC,EAAOC,EAAcC,GAEvC,MAA6BC,mBAASF,GAAtC,mBAAOG,EAAP,KAAcC,EAAd,KA0BA,MAAO,CAACD,EAxBU,kBAChB,mCACE,qBAAKE,UAAU,8BAAf,SAEE,wBACEC,SAAU,SAACC,GAAD,OAAOH,EAAYG,EAAEC,OAAOC,QACtCC,aAAc,CAACP,GACfE,UAAU,iBACVM,GAAG,SACHC,UAAQ,EALV,SAQGX,EAAeY,KAAI,SAACC,GAAD,OAClB,yBAAwBL,MAAOK,EAAOH,GAAtC,UACEG,EAAOC,kBAAkBC,WAAWC,QAAQ,OAAO,KAAKA,QAAQ,KAAM,MACtEC,QAAQC,QAFGL,EAAOH,cAWJP,I,wBCqvCbgB,UA/vCf,YAA+S,IAAxRC,EAAuR,EAAvRA,cAAeC,EAAwQ,EAAxQA,eAAgBC,EAAwP,EAAxPA,uBAAwBC,EAAgO,EAAhOA,YAAaC,EAAmN,EAAnNA,WAAYC,EAAuM,EAAvMA,aAAcC,EAAyL,EAAzLA,sBAAuBC,EAAkK,EAAlKA,qBAAsBC,EAA4I,EAA5IA,6BAA8BC,EAA8G,EAA9GA,uBAAwBC,EAAsF,EAAtFA,qBAAsBC,EAAgE,EAAhEA,kBAAmBC,EAA6C,EAA7CA,kBAAmBC,EAA0B,EAA1BA,uBAGlR,EAAyChC,mBAAS,CAChDiC,WAAY,GACZC,aAAc,GACdC,aAAc,GACdC,KAAM,GACNC,SAAU,GACVC,KAAM,GACNC,KAAM,KAPR,mBAAOC,EAAP,KAAoBC,EAApB,KAWA,EAAyCzC,mBAAS,IAAlD,mBAAO0C,EAAP,KAAoBC,EAApB,KAGA,EAAgD/C,EAC9C,GACA,GACA8C,GAHF,mBAAOE,EAAP,KAAgBC,EAAhB,KAA+BC,EAA/B,KAOA,EAAgD9C,oBAAS,GAAzD,mBAAO+C,EAAP,KAAwBC,EAAxB,KAGA,EAA6BhD,oBAAS,GAAtC,mBAAOiD,EAAP,KAAcC,EAAd,KAGA,EAA+ClD,oBAAS,GAAxD,oBAAOmD,GAAP,MAAuBC,GAAvB,MAGA,GAA4CpD,oBAAS,GAArD,qBAAOqD,GAAP,MAAuBC,GAAvB,MA8FA,GAzFAC,qBAAU,WACR,GAAIN,EAAO,CAEOO,SAASC,cAAc,UAE7BC,eAAe,CAAEC,SAAU,SAAUC,MAAO,MAAOC,OAAQ,WAKtE,CAACZ,IAGJM,qBAAU,WACRO,OAAOC,SAAS,CAAEC,IAAK,EAAGL,SAAU,aACnC,IAGHJ,qBAAU,WAKR,IAAMU,EAAQ,uCAAG,gCAAAC,EAAA,4DAEHC,8BACNC,EAHS,yCAG+BjD,EAAcJ,QAAQ,KAAM,IAAIsD,cAH/D,oBAEHF,8BAFG,yBAIiBG,MAAMF,EAAK,CACzCG,OAAQ,QACPC,MAAK,SAAUC,GAChB,OAAwB,MAApBA,EAASC,OACJD,EAASE,YAEhBC,IAAK,CACHC,OAAQ,KACRC,KAAM,OACNC,QACE,sBAAK5E,UAAU,mBAAf,UACE,mDACA,0EAQPqE,MAAK,SAAUC,GAChB,OAAOA,KACNO,OAAM,SAAU/B,GACjBjC,QAAQiC,MAAR,+CAAsDA,IACtD2B,IAAK,CACHC,OAAQ,KACRC,KAAM,OACNC,QACE,sBAAK5E,UAAU,mBAAf,UACE,mDACA,0EAlCO,eA2CW8E,KAvCpBC,EAJS,6BA6CPC,EAAOD,EAAkBE,WAG1BC,SAAQ,SAACC,EAAMC,GAClBD,EAAK7E,GAAK8E,EAAI,KAGZ7C,IAAgB,GApDP,mDAuDXC,EAAkBwC,GAvDP,sGAAH,qDA8DdlB,MACC,IAGa,KAAZrB,EAAgB,CAElB,IAAM4C,GAAgB9C,EAAYE,EAAU,GAGxC6C,GAAkBD,GAAc3E,kBAAkB,GAAGE,QAAQ,WAAY,IACzE2E,GAAoBF,GAAc3E,kBAAkBC,WAAWC,QAAQ,OAAO,KAAKA,QAAQ,KAAM,MACjG4E,GAAoB,GACpBC,GAAYJ,GAAcK,aAC1BC,GAAY,GACZC,GAAY,GAGdN,QADsBR,IAApBQ,IAAqD,KAApBA,GACjB,MAEAD,GAAc3E,kBAAkB,GAAGE,QAAQ,WAAY,IAIzE2E,QADwBT,IAAtBS,IAAyD,KAAtBA,GACjB,MAEAF,GAAc3E,kBAAkBC,WAAWC,QAAQ,OAAO,KAAKA,QAAQ,KAAM,MAIjG4E,QADwBV,IAAtBU,IAAyD,KAAtBA,GACjB,MAEA,GAIpBC,QADgBX,IAAdW,IAAyC,KAAdA,GACjB,MAEAJ,GAAcK,aAI1BC,GAAY,GAMZC,GAAY,GAMhB,IAAM9D,GAAawD,GACbvD,GAAewD,GACfvD,GAAewD,GACfvD,GAAOwD,GACPvD,GAAWlB,EACXmB,GAAOwD,GACPvD,GAAOwD,GAGbxC,qBAAU,WACRd,EAAkB,2BACbD,GADY,IAEfP,WAAYA,GACZC,aAAcA,GACdC,aAAcA,GACdC,KAAMA,GACNC,SAAUA,GACVC,KAAMA,GACNC,KAAMA,MAGRW,GAAY,KACX,CAACN,IAGJ,IAAMoD,GAAe,SAAC3F,GAAO,IAAD,EAC1BoC,EAAkB,2BACbD,GADY,uBAEdnC,EAAEC,OAAO2F,KAAO5F,EAAEC,OAAOC,MAAMQ,QAAQ,YAAa,IAAImF,QAF1C,qBAGT,IAHS,qBAIT,IAJS,MAqBbC,GAAW,uCAAG,WAAO3D,GAAP,gHAAA0B,EAAA,yDAEZkC,EAAa5C,SAAS6C,eAAe,eAAe9F,MACpD+F,EAAqB9C,SAAS6C,eAAe,SAAS9F,MACtDgG,EAAa/C,SAAS6C,eAAe,QAAQ9F,MAG9B,KAAf6F,QAAsCnB,IAAfmB,GAAuD,KAAvBE,QAAsDrB,IAAvBqB,GAAuD,KAAfC,QAAsCtB,IAAfsB,EAPzI,uBAQhBrD,GAAY,GARI,0BAWhBA,GAAY,GAXI,UAelBpB,GAAkB,GAGZ0E,EAAqBhE,EAAYP,WAAWlB,QAAQ,YAAa,IAAImF,OACrEO,EAAkBjE,EAAYN,aAAanB,QAAQ,YAAa,IAAImF,OACpEQ,EAAelE,EAAYJ,KAAKrB,QAAQ,YAAa,IAAImF,OAEpC,KAAvBM,QAAoDvB,IAAvBuB,GAAwD,KAApBC,QAA8CxB,IAApBwB,GAAkD,KAAjBC,QAAwCzB,IAAjByB,EAtBrI,iBAwBhBxD,GAAY,GAxBI,+BAgCVyD,EAAqB,CACzB,eAAkB,CAChB,IALEC,EAAYzC,uBAOhB,cAAiB,CAAC,CAChB,WAAc,CACZ,CACE,IAAO,WACP,MAAShD,EAAcJ,QAAQ,YAAa,IAAImF,QAElD,CACE,IAAO,iBACP,MAASM,OA5CD,UAmDgBlC,MAAM,+HAAgI,CACpKC,OAAQ,OACRsC,KAAMC,KAAKC,UAAUJ,GACrBK,QAAS,CACP,eAAgB,sBAEjBxC,MAAK,SAAUC,GAChB,OAAwB,MAApBA,EAASC,OACJD,EAASE,OAET3D,QAAQiC,MAAM,8DAEtBuB,MAAK,SAAUC,GAKhB,GAHuBA,EAASwC,QAAQ,GAAGC,OAAOC,QAG5B,EAAG,CAEvB,MADW,KAKX,OAD4B1C,EAASwC,QAAQ,GAAGG,sBAAsB,GAAGC,eAAe,GAAGC,SAG5FtC,OAAM,SAAU/B,GAEjB,OAAOjC,QAAQiC,MAAR,gEAAuEA,OA9EhE,WAmDVsE,EAnDU,OAkFZC,EAAY,GASE,MANhBA,EADwB,OAAtBD,QAAoDtC,IAAtBsC,EACpBA,EAAkBxG,QAAQ,YAAa,IAAImF,OAE3C,IAvFE,wBA8FRuB,EAAoB,CACxB,eAAkB,CAChB,IAAOb,GAET,cAAiB,CAAC,CAChB,WAAc,CAAC,CACb,IAAO,OACP,MAASY,OArGD,UA0GqBlD,MAAM,oIAAqI,CAC5KC,OAAQ,OACRsC,KAAMC,KAAKC,UAAUU,GACrBT,QAAS,CACP,eAAgB,sBAEjBxC,MAAK,SAAUC,GAChB,OAAwB,MAApBA,EAASC,OACJD,EAASE,OAET3D,QAAQiC,MAAM,6DAEtBuB,MAAK,SAAUC,GAChB,QAAiBQ,IAAbR,EA+BG,CASL,OAAO9C,EAA6B,2BAAKN,GAAN,IAA8BqG,YAP7C,CAClBF,UAAW,GACXG,oBAAqB,GACrBC,WAAY,GACZC,cAAe,OAjCjB,GAFuBpD,EAASwC,QAAQ,GAAGC,OAAOC,QAE5B,EAAG,CAUvBxF,EAA6B,2BAAKN,GAAN,IAA8BqG,YARtC,CAClBF,UAAW,GACXG,oBAAqB,GACrBC,WAAY,GACZC,cAAe,WAKZ,CAEL,IAAMF,EAAsBlD,EAASwC,QAAQ,GAAGa,eAAe,GAAGC,OAAO,GAAGC,aAAa,GAAGV,MACtFM,EAAanD,EAASwC,QAAQ,GAAGa,eAAe,GAAGC,OAAO,GAAGC,aAAa,GAAGV,MAC7EO,EAAgBpD,EAASwC,QAAQ,GAAGa,eAAe,GAAGG,eAAe,IAAIX,MAEzEI,EAAc,CAClBF,YACAG,sBACAC,aACAC,iBAIFlG,EAA6B,2BAAKN,GAAN,IAA8BqG,qBApJlD,uCAoKRA,EAAc,CAClBF,UAAW,GACXG,oBAAqB,GACrBC,WAAY,GACZC,cAAe,IAGjBlG,EAA6B,2BAAKN,GAAN,IAA8BqG,iBA3K5C,eAmLZQ,EAFuB7F,GAE8BtB,QAAQ,KAAM,IAEnEoH,EAAoB,GAGqB,IAAzCD,EAA8Bf,SAE5BiB,EAAYF,EAA8BG,MAAM,EAAG,GAEnDC,EAAaJ,EAA8BG,MAAM,EAAG,GAExDF,EAAoBC,EAAY,IAAME,GAIK,IAAzCJ,EAA8Bf,SAE5BoB,EAAcL,EAA8BG,MAAM,EAAG,GAErDC,EAAaJ,EAA8BG,MAAM,EAAG,GAExDF,EAAoBI,EAAc,IAAMD,GAIG,IAAzCJ,EAA8Bf,SAE5BqB,EAAaN,EAA8BG,MAAM,EAAG,GAEpDC,EAAaJ,EAA8BG,MAAM,EAAG,GAExDF,EAAoBK,EAAa,IAAMF,GAMrBnE,mCAxNJ,UA0NcG,MAAM,0HAAD,OAA2H6D,EAA3H,uBAA2J3B,EAA3J,KAAkL,CACnNjC,OAAQ,MACRyC,QAAS,CACP,eAAgB,mBAChB,OANgB7C,sCAQjBK,MAAK,SAAUC,GAChB,GAAwB,MAApBA,EAASC,OACX,OAAOD,EAASE,OAehB,OAZAjD,EAAqB,2BAChBN,GADe,IAElBqH,QAAS,CACPlG,KAAM,GACNmG,qBAAsB,GACtBC,oBAAqB,GACrBC,iBAAkB,OAItB5H,QAAQiC,MAAM,sDAXI,MAgBnBuB,MAAK,SAAUC,GAIhB,IAAgB,IAFAA,EAASoE,eAAe,QAElB,CACpB,IAAMJ,EAAUhE,EAASlC,KAAK,GACxBuG,EAAYrE,EAASlC,KAAK,GAAGA,KAEnC,OADAb,EAAqB,2BAAKN,GAAN,IAAsBqH,aACnCK,EAYP,OATApH,EAAqB,2BAChBN,GADe,IAElBqH,QAAS,CACPlG,KAJc,GAKdmG,qBAAsB,GACtBC,oBAAqB,GACrBC,iBAAkB,OAPJ,MAYnB5D,OAAM,SAAU/B,GAEjB,OAAOjC,QAAQiC,MAAR,4DAAmEA,OA5Q5D,eA0NV8F,EA1NU,YAkRE9D,KAFd6D,EAAYC,KAGdD,EAAY,GACZpH,EAAqB,2BAChBN,GADe,IAElBqH,QAAS,CACPlG,KAAM,GACNmG,qBAAsB,GACtBC,oBAAqB,GACrBC,iBAAkB,QAKlBI,EAAqBxG,EAAYH,SAAStB,QAAQ,MAAO,IAAImF,OAAO7B,cACpE4E,EAAuBzG,EAAYP,WAAWlB,QAAQ,MAAO,IAAImF,OAAO7B,cAExE6E,EAlSU,UAkSDF,EAlSC,YAkSqBC,GAlSrB,UAqSGE,IAAGC,WAAW,aAAaC,IAAIH,GArSlC,eAqSZI,EArSY,OAiTVC,EAjTU,+BAAArF,EAAA,MAiTQ,sBAAAA,EAAA,+EAAYoF,EAAOE,MAAMhF,MAAK,SAAC6E,GAErD,GAAIA,EAAII,OACN,OAAOJ,EAAIlE,UAGZH,OAAM,SAAC/B,GACRjC,QAAQC,IAAIgC,GACZjC,QAAQC,IAAI,qCARU,2CAjTR,+DA8TKsI,IA9TL,aA8TZG,EA9TY,gCAuUNC,GAHFC,EAAeF,GAGbC,eAAgBjC,GAAyBkC,EAAzBlC,YAAae,GAAYmB,EAAZnB,QAG7BxG,GAA2D0H,EAA3D1H,WAAYC,GAA+CyH,EAA/CzH,aAAcC,GAAiCwH,EAAjCxH,aAAcC,GAAmBuH,EAAnBvH,KAAMC,GAAasH,EAAbtH,SAG9CuF,GAAeF,GAAfE,WAGAc,GAAyBD,GAAzBC,qBAGFmB,GAAkBnC,GAAYoC,aAE9BC,GAAerC,GAAYF,UAG3BwC,GAAkBvB,GAAQqB,aAE1BG,GAAexB,GAAQlG,KAG7BqC,IAAK,CACHzE,UAAW,oBACX+J,QAAS,CACPC,OAAQ,SACRC,QAAS,wBAEXrF,QACE,mCACE,qBAAK5E,UAAU,sCAAf,SACE,sBAAKA,UAAU,4BAAf,UAEE,cAAC,IAAYkK,SAAb,CAAsB9J,MAAO,CAAE+J,MAAO,UAAWC,KAAM,QAAvD,SACE,cAAC,IAAD,MAGF,oBAAIC,MAAO,CAAEC,aAAc,KAA3B,0CAEA,sBAAKtK,UAAU,iCAAf,UAEE,qBAAKA,UAAU,8BAAf,SACE,sBAAKqK,MAAO,CAAEE,QAAS,OAAQC,cAAe,SAAUC,UAAW,SAAnE,UACE,yCAAW,yCAAU1I,GAAa2I,eAAvB,OAAwD,QAAjB1I,GAAyB,GAAzB,YAAmCA,GAAa0I,eAAvF,UACX,6CAAe,+BAAO5I,GAAW4I,mBACjC,sCAAQ,+BAAOzI,GAAKyI,mBACpB,0CAAY,+BAAOxI,GAASwI,wBAO5BhB,IAAuBjC,IAAkBmC,GAC1C,yDAED,KAGCF,GAEC,qBAAK1J,UAAU,8BAAf,SACE,2CAAa,+BAAO0J,UAIxB,KAICjC,GAEC,qBAAKzH,UAAU,8BAAf,SACE,6CAAe,+BAAOyH,UAI1B,KAICmC,GAEC,qBAAK5J,UAAU,8BAAf,SACE,uCAAS,+BAAO4J,UAIpB,KAMEC,IAAuBtB,IAA4BuB,GACpD,iDAED,KAGCD,GAEC,qBAAK7J,UAAU,8BAAf,SACE,2CAAa,+BAAO6J,UAIxB,KAICtB,GAEC,qBAAKvI,UAAU,8BAAf,SACE,6CAAe,+BAAOuI,UAI1B,KAICuB,GAEC,qBAAK9J,UAAU,8BAAf,SACE,uCAAS,+BAAO8J,UAIpB,iBAQXzF,MAAK,SAACsG,GAEP,IAAe,IAAXA,EAAiB,CAGnB,IAAM9B,EAAqBxG,EAAYH,SAAStB,QAAQ,MAAO,IAAImF,OAAO7B,cAEpE4E,EAAuBzG,EAAYP,WAAWlB,QAAQ,MAAO,IAAImF,OAAO7B,cAExE6E,EAAG,UAAMF,EAAN,YAA4BC,GAkDrC,OA/CAE,IAAGC,WAAW,aAAaC,IAAIH,GAAK6B,IAAI,CACtCC,QAASC,IAASC,UAAUC,WAAWC,kBACvCC,KAAM,EACN1B,eAAgB,CACd1H,WAAYO,EAAYP,WAAaO,EAAYP,WAAa,GAC9DC,aAAcM,EAAYN,aAAeM,EAAYN,aAAe,GACpEC,aAAcK,EAAYL,aAAeK,EAAYL,aAAe,GACpEC,KAAMI,EAAYJ,KAAOI,EAAYJ,KAAO,GAC5CC,SAAUG,EAAYH,SAAWG,EAAYH,SAAW,GACxDC,KAAMkF,GAAwB,GAC9BjF,KAAMuG,GAAwB,IAEhCpB,YAAa,CACXF,UAAW,GACXG,oBAAqB,GACrBC,WAAY,GACZC,cAAe,GACfiC,aAAc,IAEhBrB,QAAS,CACPlG,KAAM,GACNmG,qBAAsB,GACtBC,oBAAqB,GACrBC,iBAAkB,GAClBkB,aAAc,MAKlB5G,GAAY,GAEZzB,EAAsB,2BACjBe,GADgB,IAEnBF,KAAMkF,EACNjF,KAAMuG,KAGR/G,EAAkB,2BAAKT,GAAN,IAAmB+J,KAAM,KAE1CxJ,GAAqB,GAErBG,GAAuB,GAEvBF,GAAkB,GAClBd,QAAQC,IAAI,uDACZD,QAAQC,IAAI,kDAMd,OADAD,QAAQC,IAAI,yCACLO,EAAaoI,MAEnB5E,OAAM,SAAC/B,GAGRkG,IAAGC,WAAW,aAAaC,IAAIH,GAAK6B,IAAI,CACtCC,QAASC,IAASC,UAAUC,WAAWC,kBACvCC,KAAM,EACN1B,eAAgB,CACd1H,WAAYO,EAAYP,WAAaO,EAAYP,WAAa,GAC9DC,aAAcM,EAAYN,aAAeM,EAAYN,aAAe,GACpEC,aAAcK,EAAYL,aAAeK,EAAYL,aAAe,GACpEC,KAAMI,EAAYJ,KAAOI,EAAYJ,KAAO,GAC5CC,SAAUG,EAAYH,SAAWG,EAAYH,SAAW,GACxDC,KAAMkF,GAAwB,GAC9BjF,KAAMuG,GAAwB,IAEhCpB,YAAa,CACXF,UAAW,GACXG,oBAAqB,GACrBC,WAAY,GACZC,cAAe,GACfiC,aAAc,IAEhBrB,QAAS,CACPlG,KAAM,GACNmG,qBAAsB,GACtBC,oBAAqB,GACrBC,iBAAkB,GAClBkB,aAAc,MAIlB9I,QAAQC,IAAIgC,GAGZC,GAAY,GAEZzB,EAAsB,2BACjBe,GADgB,IAEnBF,KAAMkF,EACNjF,KAAMuG,KAGR/G,EAAkB,2BAAKT,GAAN,IAAmB+J,KAAM,KAE1CxJ,GAAqB,GAErBG,GAAuB,GAEvBF,GAAkB,GAClBd,QAAQC,IAAI,2CACZD,QAAQC,IAAI,qDAnkBA,kCA4kBhBmC,IAAqB,GAGrBF,GAAY,GAEZzB,EAAsB,2BACjBe,GADgB,IAEnBF,KAAMkF,EACNjF,KAAMuG,KAGR/G,EAAkB,2BAAKT,GAAN,IAAmB+J,KAAM,KAE1CxJ,GAAqB,GAErBG,GAAuB,GAEvBF,GAAkB,GAClBd,QAAQC,IAAI,8CACZD,QAAQC,IAAI,qCA/lBI,+DAAH,sDAumBjBsC,qBAAU,WACR,sBAAC,gCAAAW,EAAA,0DAEKf,GAFL,uBAIS6F,EAAqBxG,EAAYH,SAAStB,QAAQ,MAAO,IAAImF,OAAO7B,cAEpE4E,EAAuBzG,EAAYP,WAAWlB,QAAQ,MAAO,IAAImF,OAAO7B,cAExE6E,EART,UAQkBF,EARlB,YAQwCC,GARxC,SAWSE,IAAGC,WAAW,aAAaC,IAAIH,GAAK6B,IAAI,CAC5CC,QAASC,IAASC,UAAUC,WAAWC,kBACvCC,KAAM,EACN1B,eAAgB,CACd1H,WAAYO,EAAYP,WAAaO,EAAYP,WAAa,GAC9DC,aAAcM,EAAYN,aAAeM,EAAYN,aAAe,GACpEC,aAAcK,EAAYL,aAAeK,EAAYL,aAAe,GACpEC,KAAMI,EAAYJ,KAAOI,EAAYJ,KAAO,GAC5CC,SAAUG,EAAYH,SAAWG,EAAYH,SAAW,GACxDC,KAAMjB,EAAuBqG,YAAYF,UAAYnG,EAAuBqG,YAAYF,UAAY,GACpGjF,KAAMnB,EAAeqH,QAAQlG,KAAOnB,EAAeqH,QAAQlG,KAAO,IAEpEmF,YAAa,CACXC,oBAAqBtG,EAAuBqG,YAAYC,oBAAsBtG,EAAuBqG,YAAYC,oBAAsB,GACvIC,WAAYvG,EAAuBqG,YAAYE,WAAavG,EAAuBqG,YAAYE,WAAa,GAC5GJ,UAAWnG,EAAuBqG,YAAYF,UAAYnG,EAAuBqG,YAAYF,UAAY,GACzGK,cAAexG,EAAuBqG,YAAYG,cAAgBxG,EAAuBqG,YAAYG,cAAgB,IAEvHY,QAAS,CACPlG,KAAMnB,EAAeqH,QAAQlG,KAAOnB,EAAeqH,QAAQlG,KAAO,GAClEmG,qBAAsBtH,EAAeqH,QAAQC,qBAAuBtH,EAAeqH,QAAQC,qBAAuB,GAClHC,oBAAqBvH,EAAeqH,QAAQE,oBAAsBvH,EAAeqH,QAAQE,oBAAsB,GAC/GC,iBAAkBxH,EAAeqH,QAAQG,iBAAmBxH,EAAeqH,QAAQG,iBAAmB,MAjC7G,0CAAD,KAuCC,CAACzF,KAGJ,IAAMmI,GAAe,SAACjL,GACpBA,EAAEkL,iBAEF1J,GAAqB,GAErBD,GAAuB,GAEvBG,EAAkB,2BAAKT,GAAN,IAAmB+J,KAAM,MAItCG,GAAe,SAACnL,GACpBA,EAAEkL,iBAEF9I,EAAkB,2BACbD,GADY,IAEfP,WAAY,GACZC,aAAc,GACdC,aAAc,GACdC,KAAM,GAENE,KAAM,GACNC,KAAM,MAGRZ,EAA6B,IAC7BD,EAAqB,IACrBoB,EAAc,IACdE,GAAqB,GACrBE,GAAY,GAGZ,IAAIuI,EAAmBjI,SAAS6C,eAAe,eAC3CqF,EAAclI,SAAS6C,eAAe,SACtCsF,EAAcnI,SAAS6C,eAAe,SACtCuF,EAAapI,SAAS6C,eAAe,QACf,OAArBoF,GAA+C,OAAhBC,GAA0C,OAAhBC,GAAyC,OAAfC,IACtFH,EAAiBlL,MAAQ,GACzBmL,EAAYnL,MAAQ,GACpBoL,EAAYpL,MAAQ,GACpBqL,EAAWrL,MAAQ,KAqBvB,OACE,mCACGwC,EACa,KAAZH,EACE,yBAASzC,UAAU,uBAAnB,SACE,sBAAKA,UAAU,yBAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,sBAAKA,UAAU,eAAf,UACE,mEACA,wSAIF,8BACE,cAAC0C,EAAD,MAGF,qBAAK1C,UAAU,4BAAf,SACE,wBAAQ,UAAQ,aAAa0L,QAAS,SAACxL,GAAD,OAAOmL,GAAanL,IAA1D,wCAIS,IAAV4C,EAAiB,cAAC6I,EAAA,EAAD,CAAOC,QAAS,4BAAgC,KAGlE,sBAAK5L,UAAU,6BAAf,UACE,yBAAQA,UAAU,4BAA4B0L,QAASP,GAAvD,UACE,cAAC,IAAYjB,SAAb,CAAsB9J,MAAO,CAAE+J,MAAO,UAAWC,KAAM,QAAvD,SACE,cAAC,IAAD,CAAmBpK,UAAU,gBAFjC,aAOA,yBAAQ,UAAQ,kBAAkBA,UAAU,4BAA4B0L,QAAS,iBAAkB,KAAZjJ,EAAiBM,GAAY,GAAQ,MAA5H,qBAGE,cAAC,IAAYmH,SAAb,CAAsB9J,MAAO,CAAE+J,MAAO,OAAQC,KAAM,QAApD,SACE,cAAC,IAAD,CAAoBpK,UAAU,yBAMrCoB,EAEG,sBAAKpB,UAAU,iBAAf,UACE,qBAAKA,UAAU,iBAAf,SACE,cAAC6L,EAAA,EAAD,CAAYX,KAAM,MAGpB,qBAAKlL,UAAU,2BAAf,SACE,cAAC8L,EAAA,EAAD,CAAeC,KAAM,SAK3B,qBAAK1B,MAAO,CAAE2B,MAAO,QAArB,SACE,qBAAKhM,UAAU,oBAAf,SACE,cAAC8L,EAAA,EAAD,CAAeC,KAAM,aAQ/B,yBAAS/L,UAAU,uBAAnB,SACE,sBAAKA,UAAU,yBAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,sBAAKA,UAAU,eAAf,UACE,mEACA,wSAIF,8BACE,cAAC0C,EAAD,MAGF,qBAAK1C,UAAU,4BAAf,SACE,wBAAQ0L,QAAS,SAACxL,GAAD,OAAOmL,GAAanL,IAAIF,UAAWkD,GAAiB,uCAAyC,GAA9G,uCAIF,sBAAMlD,UAAU,+BAAhB,SACE,sBAAKA,UAAU,6BAAf,UACE,sDAGW,IAAV8C,EAAiB,cAAC6I,EAAA,EAAD,CAAOC,QAAS,4BAAgC,KAElE,sBAAK5L,UAAU,qBAAf,UACE,gDACA,qBAAK0L,QAAS,kBAAMvI,IAAmBD,KAAvC,SACE,uBACE5C,GAAG,cACHwF,KAAK,aACLmG,KAAK,OACL7L,MAAOiC,EAAYP,YAAc,GACjCoK,UAAU,SAKhB,sBAAKlM,UAAU,qBAAqBqK,MAAO,CAAC8B,SAAU,YAAtD,UACE,mDACA,qBAAKT,QAAS,kBAAMvI,IAAmBD,KAAvC,SACE,uBACE5C,GAAG,QACHwF,KAAK,eACLmG,KAAK,OACL7L,MAAOiC,EAAYN,cAAgB,GACnCmK,UAAU,MAGd,qBAAKlM,UAAU,uBAAf,SAAuCqC,EAAYN,kBAGrD,sBAAK/B,UAAU,qBAAf,UACE,8DACA,qBAAK0L,QAAS,kBAAMvI,IAAmBD,KAAvC,SACE,uBACE5C,GAAG,QACHwF,KAAK,eACLmG,KAAK,OACL7L,MAAOiC,EAAYL,cAAgB,GACnCkK,UAAU,SAKhB,sBAAKlM,UAAU,qBAAf,UACE,yCACA,qBAAK0L,QAAS,kBAAMvI,IAAmBD,KAAvC,SACE,uBACE5C,GAAG,OACHwF,KAAK,OACLmG,KAAK,OACL7L,MAAOiC,EAAYJ,MAAQ,GAC3BiK,UAAU,SAKhB,sBAAKlM,UAAU,qBAAf,UACE,6CACA,qBAAK0L,QAAS,kBAAMvI,IAAmBD,KAAvC,SACE,uBACE5C,GAAG,WACHwF,KAAK,WACLmG,KAAK,OACL7L,MAAOiC,EAAYH,UAAY,GAC/BgK,UAAU,cAQpB,sBAAKlM,UAAU,6BAAf,UACE,yBAAQA,UAAU,4BAA4B0L,QAASP,GAAvD,UACE,cAAC,IAAYjB,SAAb,CAAsB9J,MAAO,CAAE+J,MAAO,UAAWC,KAAM,QAAvD,SACE,cAAC,IAAD,CAAmBpK,UAAU,gBAFjC,aAOA,yBAAQA,UAAU,4BAA4B0L,QAAS,SAACxL,GAAD,OAAOA,EAAEkL,eAAepF,GAAY3D,KAA3F,qBAGE,cAAC,IAAY6H,SAAb,CAAsB9J,MAAO,CAAE+J,MAAO,OAAQC,KAAM,QAApD,SACE,cAAC,IAAD,CAAoBpK,UAAU,yBAMrCoB,EAEG,sBAAKpB,UAAU,iBAAf,UACE,qBAAKA,UAAU,iBAAf,SACE,cAAC6L,EAAA,EAAD,CAAYX,KAAM,MAGpB,qBAAKlL,UAAU,2BAAf,SACE,cAAC8L,EAAA,EAAD,CAAeC,KAAM,SAK3B,qBAAK1B,MAAO,CAAE2B,MAAO,QAArB,SACE,qBAAKhM,UAAU,oBAAf,SACE,cAAC8L,EAAA,EAAD,CAAeC,KAAM,aAU/B,yBAAS/L,UAAU,uBAAnB,SACE,sBAAKA,UAAU,yBAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,sBAAKA,UAAU,eAAf,UACE,mEACA,wSAIF,qBAAKC,SAAU,SAACC,GAAD,OApOF,SAACA,GAC1BA,EAAEkL,iBAEFvI,GAAqB,GACrBP,EAAkB,2BACbD,GADY,IAEfP,WAAY,GACZC,aAAc,GACdC,aAAc,GACdC,KAAM,GAENE,KAAM,GACNC,KAAM,MAwN0BgK,CAAmBlM,IAAzC,SACE,cAACwC,EAAD,MAGF,qBAAK1C,UAAU,4BAAf,SACE,wBAAQ0L,QAAS,SAACxL,GAAD,OAAOmL,GAAanL,IAArC,uCAIF,sBAAMF,UAAU,+BAA+BC,SAAU,kBAz7BvC,WAC9B,IAAMgG,EAAa5C,SAAS6C,eAAe,eAAe9F,MACpD+F,EAAqB9C,SAAS6C,eAAe,SAAS9F,MACtDgG,EAAa/C,SAAS6C,eAAe,QAAQ9F,MAG/B,KAAf6F,GAA8C,KAAvBE,GAA8C,KAAfC,GAEzDrD,GAAY,GAi7B6DsJ,IAA/D,SACE,sBAAKrM,UAAU,6BAAf,UACE,wDAGW,IAAV8C,EAAiB,cAAC6I,EAAA,EAAD,CAAOC,QAAS,4BAAgC,KAElE,sBAAK5L,UAAU,qBAAf,UACE,gDACA,uBACEM,GAAG,cACH2L,KAAK,OACL7L,MAAOiC,EAAYP,YAAc,GACjC7B,SAAU,SAACC,GAAD,OAAO2F,GAAa3F,IAC9B4F,KAAK,aACL,UAAQ,kBAIZ,sBAAK9F,UAAU,qBAAqBqK,MAAO,CAAC8B,SAAU,YAAtD,UACE,mDACA,uBACE7L,GAAG,QACH2L,KAAK,OACL7L,MAAOiC,EAAYN,cAAgB,GACnC9B,SAAU,SAACC,GAAD,OAAO2F,GAAa3F,IAC9B4F,KAAK,eACL,UAAQ,mBAIZ,sBAAK9F,UAAU,qBAAf,UACE,8DACA,uBACEM,GAAG,QACH2L,KAAK,OACL7L,MAAOiC,EAAYL,cAAgB,GACnC/B,SAAU,SAACC,GAAD,OAAO2F,GAAa3F,IAC9B4F,KAAK,eACL,UAAQ,mBAIZ,sBAAK9F,UAAU,qBAAf,UACE,yCACA,uBACEM,GAAG,OACH2L,KAAK,OACL7L,MAAOiC,EAAYJ,MAAQ,GAC3BhC,SAAU,SAACC,GAAD,OAAO2F,GAAa3F,IAC9B4F,KAAK,OACL,UAAQ,kBAIZ,sBAAK9F,UAAU,qBAAf,UACE,6CACA,uBACEM,GAAG,WACH2L,KAAK,OACL7L,MAAOY,EACPf,SAAU,SAACC,GAAD,OAAO2F,GAAa3F,IAC9B4F,KAAK,WACLoG,UAAQ,YAQhB,sBAAKlM,UAAU,6BAAf,UACE,yBAAQA,UAAU,4BAA4B0L,QAASP,GAAvD,UACE,cAAC,IAAYjB,SAAb,CAAsB9J,MAAO,CAAE+J,MAAO,UAAWC,KAAM,QAAvD,SACE,cAAC,IAAD,CAAmBpK,UAAU,gBAFjC,aAOA,yBAAQ,UAAQ,qBAAqBA,UAAU,4BAA4B0L,QAAS,SAACxL,GAAD,OAAOA,EAAEkL,eAAepF,GAAY3D,KAAxH,qBAGE,cAAC,IAAY6H,SAAb,CAAsB9J,MAAO,CAAE+J,MAAO,OAAQC,KAAM,QAApD,SACE,cAAC,IAAD,CAAoBpK,UAAU,yBAMrCoB,EAEG,sBAAKpB,UAAU,iBAAf,UACE,qBAAKA,UAAU,iBAAf,SACE,cAAC6L,EAAA,EAAD,CAAYX,KAAM,MAGpB,qBAAKlL,UAAU,2BAAf,SACE,cAAC8L,EAAA,EAAD,CAAeC,KAAM,SAK3B,qBAAK1B,MAAO,CAAE2B,MAAO,QAArB,SACE,qBAAKhM,UAAU,oBAAf,SACE,cAAC8L,EAAA,EAAD,CAAeC,KAAM,iB,gCCxwCzC,iBAaeJ,IAXD,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAEf,OACE,qBAAK,UAAQ,QAAQ5L,UAAU,kBAAkBM,GAAG,QAApD,SACE,qBAAKN,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2B4L,U,sGCiJpBC,IAjJf,YAAqD,IAa7CS,EAbcpB,EAA8B,EAA9BA,KAAMqB,EAAwB,EAAxBA,IAAKC,EAAmB,EAAnBA,QAASC,EAAU,EAAVA,OAEtC,EAAkC5M,mBAAS,IAA3C,mBAAO6M,EAAP,KAAqBC,EAArB,KA4HA,OAzHAvJ,qBAAU,WACN,IAAIwJ,EAAWvJ,SAAS6C,eAAe,kBAAkB2G,aACzDF,EAAUC,GACUvJ,SAAS6C,eAAe,oBAAoB4G,cAClDzC,MAAM0C,UAApB,UAAmCH,EAAnC,QACD,CAACF,IAMS,IAATxB,IACAoB,EACI,8BACI,+BACI,8EACA,wDAA0B,kDAA1B,gBAAiE,iDAAjE,+BAAyH,8DAAzH,0CAMH,IAATpB,IACAoB,EACI,8BACI,6BACI,oEAAsC,uCAAtC,qDAA0G,uCAA1G,YAMH,IAATpB,IACAoB,EACI,8BACI,6BACI,8GAMH,IAATpB,IACAoB,EACI,8BACI,+BACI,yQAEA,8NAMH,IAATpB,IACAoB,EACI,8BACI,+BACI,yQAEA,+QAMH,IAATpB,IACAoB,EACI,8BACI,6BACI,sEAMH,IAATpB,IACAoB,EACI,8BACI,+BACa,QAARC,EAAgB,kGAA4E,KACpF,WAARA,EAAmB,+FAAyE,KACpF,QAARA,EAAgB,0FAAoE,KAC5E,WAARA,EAAmB,uFAAiE,KAE5E,QAARA,EACG,iEAAqCC,IAAYC,EAAU,cAAgB,KAA3E,IAAmFA,IAAYD,EAAW,MAAQ,KAAlH,IAA0HA,GAAWC,EAAU,sBAAwB,KAAvK,2CAEA,WAQP,IAATvB,IACAoB,EACI,gCACI,sRAEA,wQAEA,4QAMC,IAATpB,IACAoB,EACI,gCACI,wRAEA,wQAEA,4QAMR,qBAAKtM,UAAU,mBAAmBM,GAAG,mBAAmB+J,MAAO,CAAE0C,UAAWL,GAA5E,SACI,sBAAK1M,UAAU,iBAAiBM,GAAG,iBAAnC,UACI,sBAAKN,UAAU,gBAAf,UACI,2CACA,cAAC,IAAYkK,SAAb,CAAsB9J,MAAO,CAAE+J,MAAO,UAAWC,KAAM,QAAvD,SACI,cAAC,IAAD,SAKR,mCACKkC,W,sGCUNR,IApJf,YAAkC,IAa1BkB,EAbiBjB,EAAQ,EAARA,KAGrB,EAAqClM,mBAAS,IAA9C,mBAAOoN,EAAP,KAAwBN,EAAxB,KA8HA,OA3HAvJ,qBAAU,WACN,IAAIwJ,EAAWvJ,SAAS6C,eAAe,qBAAqB2G,aAC5DF,EAAUC,GACUvJ,SAAS6C,eAAe,uBAAuB4G,cACrDzC,MAAM0C,UAApB,UAAmCH,EAAnC,QACD,CAACK,IAKS,IAATlB,IACAiB,EACI,8BACI,6BACI,6BACI,2FAOP,IAATjB,IACAiB,EACI,8BACI,6BACI,6BACI,0GAOP,IAATjB,IACAiB,EACI,8BACI,+BACI,6BACI,wIAGJ,6BACI,8IAOP,IAATjB,IACAiB,EACI,8BACI,+BACI,6BACI,wIAGJ,6BACI,8IAOP,IAATjB,IACAiB,EACI,8BACI,6BACI,6BACI,8JAOP,IAATjB,IACAiB,EACI,8BACI,6BACI,6BACI,6HAOP,IAATjB,IACAiB,EACI,8BACI,+BACI,6BACI,sJAGJ,6BACI,8IAQP,IAATjB,IACAiB,EACI,8BACI,+BACI,6BACI,wJAGJ,6BACI,8IAQhB,qBAAKhN,UAAU,sBAAsBM,GAAG,sBAAsB+J,MAAO,CAAC0C,UAAWE,GAAjF,SACI,sBAAKjN,UAAU,oBAAoBM,GAAG,oBAAtC,UACI,sBAAKN,UAAU,mBAAf,UACI,mDACA,cAAC,IAAYkK,SAAb,CAAsB9J,MAAO,CAAE+J,MAAO,UAAWC,KAAM,QAAvD,SACI,cAAC,IAAD,SAIR,sBAAKpK,UAAU,wBAAf,UACI,oDACCgN,Y","file":"static/js/7.0e895144.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./useAddress.css\";\n\nconst useAddress = (label, initialState, optionsAddress) => {\n  // Custom Hook State\n  const [state, updateState] = useState(initialState);\n  \n  const Selection = () => (\n    <>\n      <div className=\"selection-address-container\">\n        {/* <label>{label}</label> */}\n        <select\n          onChange={(e) => updateState(e.target.value)}\n          defaultValue={[state]}\n          className=\"select-address\"\n          id=\"select\"\n          multiple\n        >\n          {/* <option value=\"\">- Select -</option> */}\n          {optionsAddress.map((option) => (\n            <option key={option.id} value={option.id}>\n             {option.formatted_address.toString().replace(/,*,/g,',').replace(/,/g, \", \")}\n             {console.log()}\n            </option>\n          ))}\n        </select>\n      </div>\n    </>\n  );\n\n  // State return, interface and fn to modificate the state\n  return [state, Selection, updateState];\n};\n\nexport default useAddress;\n","import React, { useState, useEffect } from \"react\";\n// Styles\nimport \"./FormAddress.css\";\n// Firebase\nimport { db } from \"../../../firebase/firebase\";\nimport firebase from \"firebase/app\";\n// Swal\nimport swal from '@sweetalert/with-react';\n// Icons\nimport { IconContext } from \"react-icons\";\nimport { IoMdArrowDropleft, IoMdArrowDropright } from 'react-icons/io';\nimport { ImProfile } from 'react-icons/im';\n\n// Hooks\nimport useAddress from \"../../../hooks/useAddress/useAddress\";\n\n// Components\nimport FormScript from '../FormScript/FormScript';\nimport Error from '../../Error/Error';\nimport FormAssistant from \"../FormAssistant/FormAssistant\";\n\nfunction FormAddress({ postcodeValue, gasInformation, electricityInformation, progressBar, showScript, customerStep, updateCustomerAddress, updateGasInformation, updateElectricityInformation, updateShowFormPostCode, updateShowFormAddres, updateShowOverlay, updateProgressBar, updateShowFomrFuelType }) {\n  /** STATES */\n  // Customer Address JSON\n  const [dataAddress, updateDataAddress] = useState({\n    doornumber: '',\n    addressline1: '',\n    addressline2: '',\n    city: '',\n    postcode: '',\n    mpan: '',\n    mprn: ''\n  });\n\n  // Customer Address List\n  const [addressList, updateAddressList] = useState([]);\n\n  // Hook useAddress\n  const [address, SelectAddress, updateAddress] = useAddress(\n    \"\", //Label\n    \"\", //Initial State\n    addressList //Array(response)\n  );\n\n  // Show Address type section\n  const [showTypeAddress, updateShowTypeAddres] = useState(true);\n\n  // Error State\n  const [error, updateError] = useState(false);\n\n  // Create customer in firebase\n  const [createCustomer, updateCreateCustomer] = useState(false);\n\n  // Button focus animation\n  const [focusAnimation, setFocusAnimation] = useState(false);\n\n  /** FUNCTIONS */\n\n  // Error smooth scroll\n  useEffect(() => {\n    if (error) {\n      const scroll_to = () => {\n        var element = document.querySelector(\"#error\");\n        // smooth scroll to element and align it at the bottom\n        element.scrollIntoView({ behavior: \"smooth\", block: \"end\", inline: \"end\" });\n      }\n\n      scroll_to()\n    }\n  }, [error]);\n\n  // Scroll to top\n  useEffect(() => {\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  }, []);\n\n  // useEffect to fetch the data from API\n  useEffect(() => {\n\n    // const address_api = process.env.REACT_APP_ADDRESS_API;\n\n    // Fetching Data\n    const fetchAPI = async () => {\n      // const url = `https://ws.postcoder.com/pcw/${address_api}/address/uk/${postcodeValue.replace(/ /g, '').toLowerCase()}`;\n      const key = process.env.REACT_APP_ADDRESS_API;\n      const url = `https://api.getAddress.io/find/${postcodeValue.replace(/ /g, '').toLowerCase()}?api-key=${key}&expand=true`;\n      const response_postcode = await fetch(url, {\n        method: 'GET'\n      }).then(function (response) {\n        if (response.status === 200) {\n          return response.json();\n        } else {\n          swal({\n            button: \"Ok\",\n            icon: \"info\",\n            content: (\n              <div className=\"swal-text-custom\">\n                <h1>Address not found</h1>\n                <p>\n                  Please enter the address manually\n                </p>\n              </div>\n            )\n          });\n          return;\n        }\n      }).then(function (response) {\n        return response;\n      }).catch(function (error) {\n        console.error(`Catch an error fetching to postcoder ${error}`);\n        swal({\n          button: \"Ok\",\n          icon: \"info\",\n          content: (\n            <div className=\"swal-text-custom\">\n              <h1>Address not found</h1>\n              <p>\n                Please enter the address manually\n              </p>\n            </div>\n          )\n        });\n        return;\n      });\n\n      if (response_postcode !== undefined) {\n\n        const data = response_postcode.addresses;\n\n        // Adding an ID\n        data.forEach((item, i) => {\n          item.id = i + 1;\n        });\n\n        if (addressList === []) {\n          return;\n        } else {\n          updateAddressList(data);\n        }\n      } else {\n        return;\n      }\n    }\n    // Execute Fetch API\n    fetchAPI();\n  }, []);\n\n  // Address Data\n  if (address !== '') {\n    // Selected Value\n    const selectedValue = addressList[address - 1];\n\n    // Separated Values\n    var doornumberValue = selectedValue.formatted_address[0].replace(/[^0-9.]/g, '');\n    var addressline1Value = selectedValue.formatted_address.toString().replace(/,*,/g,',').replace(/,/g, \", \");\n    var addressline2Value = '';\n    var cityValue = selectedValue.town_or_city;\n    var mpanValue = '';\n    var mprnValue = '';\n\n    if (doornumberValue === undefined || doornumberValue === '') {\n      doornumberValue = \"N/A\";\n    } else {\n      doornumberValue = selectedValue.formatted_address[0].replace(/[^0-9.]/g, '');\n    }\n\n    if (addressline1Value === undefined || addressline1Value === '') {\n      addressline1Value = \"N/A\";\n    } else {\n      addressline1Value = selectedValue.formatted_address.toString().replace(/,*,/g,',').replace(/,/g, \", \");\n    }\n\n    if (addressline2Value === undefined || addressline2Value === '') {\n      addressline2Value = \"N/A\";\n    } else {\n      addressline2Value = \"\";\n    }\n\n    if (cityValue === undefined || cityValue === '') {\n      cityValue = \"N/A\";\n    } else {\n      cityValue = selectedValue.town_or_city;\n    }\n\n    if (mpanValue === undefined || mpanValue === '') {\n      mpanValue = '';\n    } else {\n      mpanValue = '';\n    }\n\n    if (mprnValue === undefined || mprnValue === '') {\n      mprnValue = '';\n    } else {\n      mprnValue = '';\n    }\n  }\n\n  const doornumber = doornumberValue;\n  const addressline1 = addressline1Value;\n  const addressline2 = addressline2Value;\n  const city = cityValue;\n  const postcode = postcodeValue;\n  const mpan = mpanValue;\n  const mprn = mprnValue;\n\n  // useEffect to add the data to the state\n  useEffect(() => {\n    updateDataAddress({\n      ...dataAddress,\n      doornumber: doornumber,\n      addressline1: addressline1,\n      addressline2: addressline2,\n      city: city,\n      postcode: postcode,\n      mpan: mpan,\n      mprn: mprn\n    });\n\n    updateError(false);\n  }, [address]);\n\n  // Function that runs every time the user writes to the input\n  const handleChange = (e) => {\n    updateDataAddress({\n      ...dataAddress,\n      [e.target.name]: e.target.value.replace(/[^\\w\\s]/gi, '').trim(),\n      mpan: '',\n      mprn: ''\n    });\n  };\n\n  const handleChangeTypeAddress = () => {\n    const door_typed = document.getElementById(\"door-number\").value;\n    const addres_line1_typed = document.getElementById(\"line1\").value;\n    const city_typed = document.getElementById(\"city\").value;\n\n    // Validation for Typeaddress\n    if ((door_typed !== '') && (addres_line1_typed !== '') && (city_typed !== '')) {\n      // Hidde message\n      updateError(false);\n    }\n  }\n\n  // Send Add address to CustomerData \n  const sendAddress = async (dataAddress) => {\n\n    const door_typed = document.getElementById(\"door-number\").value;\n    const addres_line1_typed = document.getElementById(\"line1\").value;\n    const city_typed = document.getElementById(\"city\").value;\n\n    // Validation for type address section\n    if (((door_typed === '') || (door_typed === undefined)) || ((addres_line1_typed === '') || (addres_line1_typed === undefined)) || ((city_typed === '') || (city_typed === undefined))) {\n      updateError(true);\n      return;\n    } else {\n      updateError(false);\n    }\n\n    // Show Overlay\n    updateShowOverlay(true);\n\n    // Values to validate\n    const doornumberValidate = dataAddress.doornumber.replace(/[^\\w\\s]/gi, '').trim();\n    const addressValidate = dataAddress.addressline1.replace(/[^\\w\\s]/gi, '').trim();\n    const cityValidate = dataAddress.city.replace(/[^\\w\\s]/gi, '').trim();\n\n    if (doornumberValidate === '' || doornumberValidate === undefined || addressValidate === '' || addressValidate === undefined || cityValidate === '' || cityValidate === undefined) {\n      // Validation failed\n      updateError(true);\n    } else {\n      /** -- ECOES API -- */\n\n      // ecoes_api\n      const ecoes_api = process.env.REACT_APP_ECOES_API;\n\n      // Body parameters\n      const postcodeParameters = {\n        \"Authentication\": {\n          \"Key\": ecoes_api\n        },\n        \"ParameterSets\": [{\n          \"Parameters\": [\n            {\n              \"Key\": \"Postcode\",\n              \"Value\": postcodeValue.replace(/[^\\w\\s]/gi, '').trim()\n            },\n            {\n              \"Key\": \"BuildingNumber\",\n              \"Value\": doornumberValidate\n            }\n          ]\n        }]\n      }\n\n      // Response ECOES MPAN\n      const responseECOESMPAN = await fetch('https://cors-anywhere.herokuapp.com/https://www.ecoes.co.uk/WebServices/Trial/ECOESAPI.svc/RESTful/JSON/SearchUtilityAddress', {\n        method: 'POST',\n        body: JSON.stringify(postcodeParameters),\n        headers: {\n          'Content-Type': 'application/json'\n        },\n      }).then(function (response) {\n        if (response.status === 200) {\n          return response.json();\n        } else {\n          return console.error('An error ocurred fetching to ECOES SearchUtilityAddress');\n        }\n      }).then(function (response) {\n        // Error response\n        const error_response = response.Results[0].Errors.length;\n\n        // Check values and return \n        if (error_response >= 1) {\n          const NA = 'NA';\n          return NA;\n        } else {\n          // Successful response\n          const successful_response = response.Results[0].UtilityAddressMatches[0].AddressDetails[0].Value;\n          return successful_response;\n        }\n      }).catch(function (error) {\n\n        return console.error(`Catch an error fetching to ECOES SearchUtilityAddress ${error}`);\n      });\n\n      // MPAN value\n      let mpan_core = '';\n\n      if (responseECOESMPAN !== \"NA\" && responseECOESMPAN !== undefined) {\n        mpan_core = responseECOESMPAN.replace(/[^\\w\\s]/gi, '').trim();\n      } else {\n        mpan_core = '';\n      }\n\n      //If we get a MPAN value call ECOES Details - Conditional\n      if (mpan_core !== '') {\n        /**-- Response ECOES DETAILS by MPAN--  */\n        // Body parameters\n        const detailsParameters = {\n          \"Authentication\": {\n            \"Key\": ecoes_api\n          },\n          \"ParameterSets\": [{\n            \"Parameters\": [{\n              \"Key\": \"MPAN\",\n              \"Value\": mpan_core\n            }]\n          }]\n        }\n\n        const responseECOESDetails = await fetch('https://cors-anywhere.herokuapp.com/https://www.ecoes.co.uk/WebServices/Trial/ECOESAPI.svc/RESTful/JSON/GetTechnicalDetailsByMpan', {\n          method: 'POST',\n          body: JSON.stringify(detailsParameters),\n          headers: {\n            'Content-Type': 'application/json'\n          },\n        }).then(function (response) {\n          if (response.status === 200) {\n            return response.json();\n          } else {\n            return console.error('An error ocurred fetching to GetTechnicalDetailsByMpan');\n          }\n        }).then(function (response) {\n          if (response !== undefined) {\n            // Error response\n            const error_response = response.Results[0].Errors.length;\n            // Check values and return \n            if (error_response >= 1) {\n              // Electricity Infomartion values\n              const MPANDetails = {\n                mpan_core: '',\n                meter_serial_number: '',\n                meter_type: '',\n                supplier_mpid: ''\n              }\n\n              // Update the state\n              updateElectricityInformation({ ...electricityInformation, MPANDetails });\n            } else {\n              // Extract the values from the response\n              const meter_serial_number = response.Results[0].UtilityMatches[0].Meters[0].MeterDetails[1].Value;\n              const meter_type = response.Results[0].UtilityMatches[0].Meters[0].MeterDetails[2].Value;\n              const supplier_mpid = response.Results[0].UtilityMatches[0].UtilityDetails[11].Value;\n              // Assign values\n              const MPANDetails = {\n                mpan_core,\n                meter_serial_number,\n                meter_type,\n                supplier_mpid\n              }\n\n              // Update the state\n              updateElectricityInformation({ ...electricityInformation, MPANDetails });\n            }\n          } else {\n            // Electricity Infomartion values\n            const MPANDetails = {\n              mpan_core: '',\n              meter_serial_number: '',\n              meter_type: '',\n              supplier_mpid: ''\n            }\n            // Update the state\n            return updateElectricityInformation({ ...electricityInformation, MPANDetails });\n          }\n        });\n      } else {\n        // Electricity Infomartion values\n        const MPANDetails = {\n          mpan_core: '',\n          meter_serial_number: '',\n          meter_type: '',\n          supplier_mpid: ''\n        }\n        // Update the state\n        updateElectricityInformation({ ...electricityInformation, MPANDetails });\n      }\n\n      /**--Postcode structure */\n\n      // Postcode unformatted\n      let postcode_unformatted = postcode;\n      // Postcode without spaces\n      let postcode_unformatted_no_space = postcode_unformatted.replace(/ /g, '');\n      // Postcode formated\n      let postcode_formated = '';\n\n      // For a postcode structure AN-NAA\n      if (postcode_unformatted_no_space.length === 5) {\n        // First two chars \n        let first_two = postcode_unformatted_no_space.slice(0, 2);\n        // Last three chars\n        let last_three = postcode_unformatted_no_space.slice(2, 5);\n        // Formated Postcode\n        postcode_formated = first_two + ' ' + last_three;\n      }\n\n      // For a postcode structure ANN-NAA, AAN-NAA, ANA-NAA\n      if (postcode_unformatted_no_space.length === 6) {\n        // First three chars \n        let first_three = postcode_unformatted_no_space.slice(0, 3);\n        // Last three chars\n        let last_three = postcode_unformatted_no_space.slice(3, 6);\n        // Formated Postcode\n        postcode_formated = first_three + ' ' + last_three;\n      }\n\n      // For a postcode structure AANN-NAA, AANA-NAA\n      if (postcode_unformatted_no_space.length === 7) {\n        // First three chars \n        let first_four = postcode_unformatted_no_space.slice(0, 4);\n        // Last three chars\n        let last_three = postcode_unformatted_no_space.slice(4, 7);\n        // Formated Postcode\n        postcode_formated = first_four + ' ' + last_three;\n      }\n\n      /** -- XOSERVE API -- */\n\n      // xoserve_api\n      const xoserve_api = process.env.REACT_APP_XOSERVE_API;\n\n      const responseXOSERVE = await fetch(`https://cors-anywhere.herokuapp.com/https://xoserve.apimanagement.hana.ondemand.com:443/v1/switchdataTBB.svc?postcode='${postcode_formated}'&house_no='${doornumberValidate}'`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'APIKey': xoserve_api\n        },\n      }).then(function (response) {\n        if (response.status === 200) {\n          return response.json();\n        } else {\n          const mprn_core = '';\n          updateGasInformation({\n            ...gasInformation,\n            dataGas: {\n              mprn: '',\n              meter_mechanism_code: '',\n              current_supplier_id: '',\n              gas_transport_id: ''\n            }\n          });\n\n          console.error('An error ocurred fetching to Xoserve switchdataTBB');\n\n          return mprn_core;\n\n        }\n      }).then(function (response) {\n        // If exist information about the property \n        const success = response.hasOwnProperty('mprn');\n\n        if (success === true) {\n          const dataGas = response.mprn[0];\n          const mprn_core = response.mprn[0].mprn;\n          updateGasInformation({ ...gasInformation, dataGas });\n          return mprn_core;\n        } else {\n          const mprn_core = '';\n          updateGasInformation({\n            ...gasInformation,\n            dataGas: {\n              mprn: mprn_core,\n              meter_mechanism_code: '',\n              current_supplier_id: '',\n              gas_transport_id: ''\n            }\n          });\n          return mprn_core;\n        }\n      }).catch(function (error) {\n\n        return console.error(`Catch an error fetching to Xoserve switchdataTBB: ${error}`);\n      });\n\n      // MPRN value\n      let mprn_core = responseXOSERVE;\n\n      if (mprn_core === undefined) {\n        mprn_core = '';\n        updateGasInformation({\n          ...gasInformation,\n          dataGas: {\n            mprn: '',\n            meter_mechanism_code: '',\n            current_supplier_id: '',\n            gas_transport_id: ''\n          }\n        });\n      }\n\n      const postcode_formatted = dataAddress.postcode.replace(/\\s/g, '').trim().toLowerCase();\n      const doornumber_formatted = dataAddress.doornumber.replace(/\\s/g, '').trim().toLowerCase();\n\n      const uid = `${postcode_formatted}-${doornumber_formatted}`;\n\n      // Document ref\n      let docRef = await db.collection(\"customers\").doc(uid);\n\n      // // Fetching customer data\n      // const getCustomerData = async () => docRef.get().then((doc) => {\n      //   // If customer exist\n      //   if (doc.exists) {\n      //     return doc.data();\n      //   }\n      //   return;\n      // });\n\n      // Fetching customer data\n      const getCustomerData = async () => docRef.get().then((doc) => {\n        // If customer exist\n        if (doc.exists) {\n          return doc.data();\n        }\n        return;\n      }).catch((error) => {\n        console.log(error)\n        console.log('Fetching customer data failed');\n        return;\n      });\n\n      // Execute getCustomerData\n      let customer = await getCustomerData();\n\n      // Validate if customer exists\n      if (customer) {\n\n        // customerData\n        const customerData = customer;\n\n        // Customer Information\n        const { customerAddres, MPANDetails, dataGas } = customerData;\n\n        // Customer Address\n        const { doornumber, addressline1, addressline2, city, postcode } = customerAddres;\n\n        // MPANDetails\n        const { meter_type } = MPANDetails;\n\n        // dataGas\n        const { meter_mechanism_code } = dataGas;\n\n        // Electricity company name\n        const company_name_es = MPANDetails.company_name;\n        // MPAN\n        const mpan_fetched = MPANDetails.mpan_core;\n\n        // Gas company name\n        const company_name_gs = dataGas.company_name;\n        // MPRN\n        const mprn_fetched = dataGas.mprn;\n\n        // Customer Information - Sweet alert\n        swal({\n          className: 'swal-modal_custom',\n          buttons: {\n            cancel: \"Cancel\",\n            confirm: \"Use this information\"\n          },\n          content: (\n            <>\n              <div className=\"form-address-details-info-container\">\n                <div className=\"form-address-details-info\">\n\n                  <IconContext.Provider value={{ color: '#D338AE', size: '50px' }}>\n                    <ImProfile />\n                  </IconContext.Provider>\n\n                  <h3 style={{ marginBottom: '0' }}>Data found for this customer</h3>\n\n                  <div className=\"form-address-details-container\">\n                    {/* Customer Address */}\n                    <div className=\"form-address-single-details\">\n                      <div style={{ display: 'flex', flexDirection: 'column', textAlign: 'start' }}>\n                        <p>Address:<span>{`${addressline1.toUpperCase()}${addressline2 === \"N/A\" ? '' : `, ${addressline2.toUpperCase()}`} `}</span></p>\n                        <p>Flat number:<span>{doornumber.toUpperCase()}</span></p>\n                        <p>City:<span>{city.toUpperCase()}</span></p>\n                        <p>Postcode:<span>{postcode.toUpperCase()}</span></p>\n                      </div>\n                    </div>\n\n                    {/* -------- ELECTRICITY INFORMATION -------- */}\n\n                    {/* Title - Elictricity Information */}\n                    {(!!company_name_es) || (!!meter_type) || (!!mpan_fetched) ?\n                      (<h3>Electricity Information</h3>)\n                      :\n                      null}\n\n                    {/* Address - Elictricity Information */}\n                    {!!company_name_es ?\n                      (\n                        <div className=\"form-address-single-details\">\n                          <p>Supplier: <span>{company_name_es}</span></p>\n                        </div>\n                      )\n                      :\n                      null\n                    }\n\n                    {/* Meter Type - Elictricity Information */}\n                    {!!meter_type ?\n                      (\n                        <div className=\"form-address-single-details\">\n                          <p>Meter Type: <span>{meter_type}</span></p>\n                        </div>\n                      )\n                      :\n                      null\n                    }\n\n                    {/* Meter Type - Elictricity Information */}\n                    {!!mpan_fetched ?\n                      (\n                        <div className=\"form-address-single-details\">\n                          <p>MPAN: <span>{mpan_fetched}</span></p>\n                        </div>\n                      )\n                      :\n                      null\n                    }\n\n                    {/* -------- GAS INFORMATION -------- */}\n\n                    {/* Title - Gas Information */}\n                    {(!!company_name_gs) || (!!meter_mechanism_code) || (!!mprn_fetched) ?\n                      (<h3>Gas Information</h3>)\n                      :\n                      null}\n\n                    {/* Address - Gas Information */}\n                    {!!company_name_gs ?\n                      (\n                        <div className=\"form-address-single-details\">\n                          <p>Supplier: <span>{company_name_gs}</span></p>\n                        </div>\n                      )\n                      :\n                      null\n                    }\n\n                    {/* Meter Type - Gas Information */}\n                    {!!meter_mechanism_code ?\n                      (\n                        <div className=\"form-address-single-details\">\n                          <p>Meter Type: <span>{meter_mechanism_code}</span></p>\n                        </div>\n                      )\n                      :\n                      null\n                    }\n\n                    {/* Meter Type - Gas Information */}\n                    {!!mprn_fetched ?\n                      (\n                        <div className=\"form-address-single-details\">\n                          <p>MPAN: <span>{mprn_fetched}</span></p>\n                        </div>\n                      )\n                      :\n                      null\n                    }\n\n                  </div>\n                </div>\n              </div>\n            </>\n          )\n        }).then((result) => {\n\n          if (result !== true) {\n\n            // postcode_formatted\n            const postcode_formatted = dataAddress.postcode.replace(/\\s/g, '').trim().toLowerCase();\n            // doornumber_formatted\n            const doornumber_formatted = dataAddress.doornumber.replace(/\\s/g, '').trim().toLowerCase();\n            // uid\n            const uid = `${postcode_formatted}-${doornumber_formatted}`;\n\n            // Update firebase customer\n            db.collection(\"customers\").doc(uid).set({\n              created: firebase.firestore.FieldValue.serverTimestamp(),\n              step: 1,\n              customerAddres: {\n                doornumber: dataAddress.doornumber ? dataAddress.doornumber : '',\n                addressline1: dataAddress.addressline1 ? dataAddress.addressline1 : '',\n                addressline2: dataAddress.addressline2 ? dataAddress.addressline2 : '',\n                city: dataAddress.city ? dataAddress.city : '',\n                postcode: dataAddress.postcode ? dataAddress.postcode : '',\n                mpan: mpan_core ? mpan_core : '',\n                mprn: mprn_core ? mprn_core : ''\n              },\n              MPANDetails: {\n                mpan_core: '',\n                meter_serial_number: '',\n                meter_type: '',\n                supplier_mpid: '',\n                company_name: ''\n              },\n              dataGas: {\n                mprn: '',\n                meter_mechanism_code: '',\n                current_supplier_id: '',\n                gas_transport_id: '',\n                company_name: ''\n              }\n            });\n\n            // Validation successful\n            updateError(false);\n            // Update data\n            updateCustomerAddress({\n              ...dataAddress,\n              mpan: mpan_core,\n              mprn: mprn_core\n            });\n            // Update progress bar\n            updateProgressBar({ ...progressBar, step: 2 });\n            // Hidde Form Address\n            updateShowFormAddres(false);\n            // Show Form Fuel type\n            updateShowFomrFuelType(true);\n            // Hidde Overlay\n            updateShowOverlay(false);\n            console.log('Data was sent successfully - From cancel alert');\n            console.log('Update customers in firebse if it is necessary');\n\n            return;\n          }\n\n          console.log('Data was sent successfully - Using DB');\n          return customerStep(customerData);\n\n        }).catch((error) => {\n\n          // Update firebase customer\n          db.collection(\"customers\").doc(uid).set({\n            created: firebase.firestore.FieldValue.serverTimestamp(),\n            step: 1,\n            customerAddres: {\n              doornumber: dataAddress.doornumber ? dataAddress.doornumber : '',\n              addressline1: dataAddress.addressline1 ? dataAddress.addressline1 : '',\n              addressline2: dataAddress.addressline2 ? dataAddress.addressline2 : '',\n              city: dataAddress.city ? dataAddress.city : '',\n              postcode: dataAddress.postcode ? dataAddress.postcode : '',\n              mpan: mpan_core ? mpan_core : '',\n              mprn: mprn_core ? mprn_core : ''\n            },\n            MPANDetails: {\n              mpan_core: '',\n              meter_serial_number: '',\n              meter_type: '',\n              supplier_mpid: '',\n              company_name: ''\n            },\n            dataGas: {\n              mprn: '',\n              meter_mechanism_code: '',\n              current_supplier_id: '',\n              gas_transport_id: '',\n              company_name: ''\n            }\n          });\n\n          console.log(error);\n\n          // Validation successful\n          updateError(false);\n          // Update data\n          updateCustomerAddress({\n            ...dataAddress,\n            mpan: mpan_core,\n            mprn: mprn_core\n          });\n          // Update progress bar\n          updateProgressBar({ ...progressBar, step: 2 });\n          // Hidde Form Address\n          updateShowFormAddres(false);\n          // Show Form Fuel type\n          updateShowFomrFuelType(true);\n          // Hidde Overlay\n          updateShowOverlay(false);\n          console.log('Data was sent successfully - From error');\n          console.log('Update customers in firebse if it is necessary');\n          return;\n        });\n\n        // End process\n        return;\n      }\n\n      // Create customer in firebase\n      updateCreateCustomer(true);\n\n      // Validation successful\n      updateError(false);\n      // Update data\n      updateCustomerAddress({\n        ...dataAddress,\n        mpan: mpan_core,\n        mprn: mprn_core\n      });\n      // Update progress bar\n      updateProgressBar({ ...progressBar, step: 2 });\n      // Hidde Form Address\n      updateShowFormAddres(false);\n      // Show Form Fuel type\n      updateShowFomrFuelType(true);\n      // Hidde Overlay\n      updateShowOverlay(false);\n      console.log('Data was sent successfully - No user found');\n      console.log('Create a new customer in firebase');\n\n      // End process\n      return;\n    }\n  }\n\n  /** --  Listener to create a customer in firebase -- */\n  useEffect(() => {\n    (async () => {\n      // createCustomer\n      if (createCustomer) {\n        // postcode_formatted\n        const postcode_formatted = dataAddress.postcode.replace(/\\s/g, '').trim().toLowerCase();\n        // doornumber_formatted\n        const doornumber_formatted = dataAddress.doornumber.replace(/\\s/g, '').trim().toLowerCase();\n        // uid\n        const uid = `${postcode_formatted}-${doornumber_formatted}`;\n\n        // Firebase\n        await db.collection(\"customers\").doc(uid).set({\n          created: firebase.firestore.FieldValue.serverTimestamp(),\n          step: 1,\n          customerAddres: {\n            doornumber: dataAddress.doornumber ? dataAddress.doornumber : '',\n            addressline1: dataAddress.addressline1 ? dataAddress.addressline1 : '',\n            addressline2: dataAddress.addressline2 ? dataAddress.addressline2 : '',\n            city: dataAddress.city ? dataAddress.city : '',\n            postcode: dataAddress.postcode ? dataAddress.postcode : '',\n            mpan: electricityInformation.MPANDetails.mpan_core ? electricityInformation.MPANDetails.mpan_core : '',\n            mprn: gasInformation.dataGas.mprn ? gasInformation.dataGas.mprn : ''\n          },\n          MPANDetails: {\n            meter_serial_number: electricityInformation.MPANDetails.meter_serial_number ? electricityInformation.MPANDetails.meter_serial_number : '',\n            meter_type: electricityInformation.MPANDetails.meter_type ? electricityInformation.MPANDetails.meter_type : '',\n            mpan_core: electricityInformation.MPANDetails.mpan_core ? electricityInformation.MPANDetails.mpan_core : '',\n            supplier_mpid: electricityInformation.MPANDetails.supplier_mpid ? electricityInformation.MPANDetails.supplier_mpid : ''\n          },\n          dataGas: {\n            mprn: gasInformation.dataGas.mprn ? gasInformation.dataGas.mprn : '',\n            meter_mechanism_code: gasInformation.dataGas.meter_mechanism_code ? gasInformation.dataGas.meter_mechanism_code : '',\n            current_supplier_id: gasInformation.dataGas.current_supplier_id ? gasInformation.dataGas.current_supplier_id : '',\n            gas_transport_id: gasInformation.dataGas.gas_transport_id ? gasInformation.dataGas.gas_transport_id : ''\n          }\n        });\n      }\n    })();\n\n  }, [createCustomer]);\n\n  // Go back to postcode\n  const goToPostcode = (e) => {\n    e.preventDefault();\n    // Hidde Form Address\n    updateShowFormAddres(false);\n    // Show Postcode\n    updateShowFormPostCode(true);\n    // Update progress bar\n    updateProgressBar({ ...progressBar, step: 0 });\n  };\n\n  // Address is not listed\n  const type_address = (e) => {\n    e.preventDefault();\n    // Update data address \n    updateDataAddress({\n      ...dataAddress,\n      doornumber: '',\n      addressline1: '',\n      addressline2: '',\n      city: '',\n      // postcode: '',\n      mpan: '',\n      mprn: ''\n    });\n    // Cleaning states\n    updateElectricityInformation({});\n    updateGasInformation({});\n    updateAddress('');\n    updateShowTypeAddres(false);\n    updateError(false);\n\n    // Reset form\n    let reset_doornumber = document.getElementById('door-number');\n    let reset_line1 = document.getElementById('line1');\n    let reset_line2 = document.getElementById('line2');\n    let reset_city = document.getElementById('city');\n    if ((reset_doornumber !== null) && (reset_line1 !== null) && (reset_line2 !== null) && (reset_city !== null)) {\n      reset_doornumber.value = '';\n      reset_line1.value = '';\n      reset_line2.value = '';\n      reset_city.value = '';\n    }\n  }\n\n  // HandleChangeSelect\n  const handleChangeSelect = (e) => {\n    e.preventDefault();\n    // Update states\n    updateShowTypeAddres(true);\n    updateDataAddress({\n      ...dataAddress,\n      doornumber: '',\n      addressline1: '',\n      addressline2: '',\n      city: '',\n      // postcode: '',\n      mpan: '',\n      mprn: ''\n    });\n  }\n\n  return (\n    <>\n      {showTypeAddress ?\n        address === \"\" ? (\n          <section className=\"form-address-section\">\n            <div className=\"form-address-container\">\n              <div className=\"form-address-content\">\n                <div className=\"form-address\">\n                  <h1>Select your addres from the below</h1>\n                  <p>Having the correct address is key to ensuring we select the correct MPAN / MRPN for the customer's address. Id the customer's address is not present in the list below, we must enter it manually and request the customers MPAN / MPRN to enable successful switch.</p>\n                </div>\n\n                {/* Address */}\n                <div>\n                  <SelectAddress />\n                </div>\n\n                <div className='form-address-manually-btn'>\n                  <button data-cy=\"addr-empty\" onClick={(e) => type_address(e)}>My address isn't listed</button>\n                </div>\n\n                {/* Error */}\n                {error === true ? <Error message={'Please enter an address'} /> : null}\n\n                {/* Buttons */}\n                <div className=\"form-address-btn-container\">\n                  <button className=\"form-address-btn btn-back\" onClick={goToPostcode}>\n                    <IconContext.Provider value={{ color: '#D338AE', size: '35px' }}>\n                      <IoMdArrowDropleft className=\"icon-back\" />\n                    </IconContext.Provider>\n                    Go back\n                  </button>\n\n                  <button data-cy=\"addr-noselected\" className=\"form-address-btn btn-next\" onClick={() => address === '' ? updateError(true) : null}>\n                    Continue\n\n                    <IconContext.Provider value={{ color: '#FFF', size: '35px' }}>\n                      <IoMdArrowDropright className=\"icon-next\" />\n                    </IconContext.Provider>\n                  </button>\n                </div>\n              </div>\n\n              {showScript ?\n                (\n                  <div className=\"helper-address\">\n                    <div className=\"script-address\">\n                      <FormScript step={2} />\n                    </div>\n\n                    <div className=\"assistant-address-custom\">\n                      <FormAssistant tips={1} />\n                    </div>\n                  </div>\n                )\n                :\n                <div style={{ width: '100%' }}>\n                  <div className=\"assistant-address\">\n                    <FormAssistant tips={1} />\n                  </div>\n                </div>\n              }\n\n            </div>\n          </section>\n        ) : (\n          <section className=\"form-address-section\">\n            <div className=\"form-address-container\">\n              <div className=\"form-address-content\">\n                <div className=\"form-address\">\n                  <h1>Select your addres from the below</h1>\n                  <p>Having the correct address is key to ensuring we select the correct MPAN / MRPN for the customer's address. Id the customer's address is not present in the list below, we must enter it manually and request the customers MPAN / MPRN to enable successful switch.</p>\n                </div>\n\n                {/* Address */}\n                <div>\n                  <SelectAddress />\n                </div>\n\n                <div className=\"form-address-manually-btn\">\n                  <button onClick={(e) => type_address(e)} className={focusAnimation ? 'animate__animated animate__headShake' : ''}>My address isn't listed</button>\n                </div>\n\n                {/* Inputs */}\n                <form className=\"form-address-input-container\">\n                  <div className=\"form-address-input-content\">\n                    <h2>Address Information</h2>\n\n                    {/* Error */}\n                    {error === true ? <Error message={'Please enter an address'} /> : null}\n\n                    <div className=\"form-address-input\">\n                      <label>Door number</label>\n                      <div onClick={() => setFocusAnimation(!focusAnimation)}>\n                        <input\n                          id=\"door-number\"\n                          name=\"doornumber\"\n                          type=\"text\"\n                          value={dataAddress.doornumber || ''}\n                          disabled={true}\n                        />\n                      </div>\n                    </div>\n\n                    <div className=\"form-address-input\" style={{position: 'relative'}}>\n                      <label>Address Line 1</label>\n                      <div onClick={() => setFocusAnimation(!focusAnimation)}>\n                        <input\n                          id=\"line1\"\n                          name=\"addressline1\"\n                          type=\"text\"\n                          value={dataAddress.addressline1 || ''}\n                          disabled={true}\n                        />\n                      </div>\n                      <div className=\"form-address-tooltip\">{dataAddress.addressline1}</div>\n                    </div>\n\n                    <div className=\"form-address-input\">\n                      <label>Address line 2 (optional)</label>\n                      <div onClick={() => setFocusAnimation(!focusAnimation)}>\n                        <input\n                          id=\"line2\"\n                          name=\"addressline2\"\n                          type=\"text\"\n                          value={dataAddress.addressline2 || ''}\n                          disabled={true}\n                        />\n                      </div>\n                    </div>\n\n                    <div className=\"form-address-input\">\n                      <label>City</label>\n                      <div onClick={() => setFocusAnimation(!focusAnimation)}>\n                        <input\n                          id=\"city\"\n                          name=\"city\"\n                          type=\"text\"\n                          value={dataAddress.city || ''}\n                          disabled={true}\n                        />\n                      </div>\n                    </div>\n\n                    <div className=\"form-address-input\">\n                      <label>Postcode</label>\n                      <div onClick={() => setFocusAnimation(!focusAnimation)}>\n                        <input\n                          id=\"postcode\"\n                          name=\"postcode\"\n                          type=\"text\"\n                          value={dataAddress.postcode || ''}\n                          disabled={true}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </form>\n\n                {/* Buttons */}\n                <div className=\"form-address-btn-container\">\n                  <button className=\"form-address-btn btn-back\" onClick={goToPostcode}>\n                    <IconContext.Provider value={{ color: '#D338AE', size: '35px' }}>\n                      <IoMdArrowDropleft className=\"icon-back\" />\n                    </IconContext.Provider>\n                    Go back\n                  </button>\n\n                  <button className=\"form-address-btn btn-next\" onClick={(e) => e.preventDefault(sendAddress(dataAddress))}>\n                    Continue\n\n                    <IconContext.Provider value={{ color: '#FFF', size: '35px' }}>\n                      <IoMdArrowDropright className=\"icon-next\" />\n                    </IconContext.Provider>\n                  </button>\n                </div>\n              </div>\n\n              {showScript ?\n                (\n                  <div className=\"helper-address\">\n                    <div className=\"script-address\">\n                      <FormScript step={2} />\n                    </div>\n\n                    <div className=\"assistant-address-custom\">\n                      <FormAssistant tips={1} />\n                    </div>\n                  </div>\n                )\n                :\n                <div style={{ width: '100%' }}>\n                  <div className=\"assistant-address\">\n                    <FormAssistant tips={1} />\n                  </div>\n                </div>\n              }\n\n            </div>\n          </section>\n        )\n        :\n        (\n          <section className=\"form-address-section\">\n            <div className=\"form-address-container\">\n              <div className=\"form-address-content\">\n                <div className=\"form-address\">\n                  <h1>Select your addres from the below</h1>\n                  <p>Having the correct address is key to ensuring we select the correct MPAN / MRPN for the customer's address. Id the customer's address is not present in the list below, we must enter it manually and request the customers MPAN / MPRN to enable successful switch.</p>\n                </div>\n\n                {/* Address */}\n                <div onChange={(e) => handleChangeSelect(e)}>\n                  <SelectAddress />\n                </div>\n\n                <div className='form-address-manually-btn'>\n                  <button onClick={(e) => type_address(e)}>My address isn't listed</button>\n                </div>\n\n                {/* Inputs */}\n                <form className=\"form-address-input-container\" onChange={() => handleChangeTypeAddress()}>\n                  <div className=\"form-address-input-content\">\n                    <h2>Type address manually</h2>\n\n                    {/* Error */}\n                    {error === true ? <Error message={'Please enter an address'} /> : null}\n\n                    <div className=\"form-address-input\">\n                      <label>Door number</label>\n                      <input\n                        id=\"door-number\"\n                        type=\"text\"\n                        value={dataAddress.doornumber || ''}\n                        onChange={(e) => handleChange(e)}\n                        name=\"doornumber\"\n                        data-cy=\"door-input\"\n                      />\n                    </div>\n\n                    <div className=\"form-address-input\" style={{position: 'relative'}}>\n                      <label>Address Line 1</label>\n                      <input\n                        id=\"line1\"\n                        type=\"text\"\n                        value={dataAddress.addressline1 || ''}\n                        onChange={(e) => handleChange(e)}\n                        name=\"addressline1\"\n                        data-cy=\"addr1-input\"\n                      />\n                    </div>\n\n                    <div className=\"form-address-input\">\n                      <label>Address line 2 (optional)</label>\n                      <input\n                        id=\"line2\"\n                        type=\"text\"\n                        value={dataAddress.addressline2 || ''}\n                        onChange={(e) => handleChange(e)}\n                        name=\"addressline2\"\n                        data-cy=\"addr2-input\"\n                      />\n                    </div>\n\n                    <div className=\"form-address-input\">\n                      <label>City</label>\n                      <input\n                        id=\"city\"\n                        type=\"text\"\n                        value={dataAddress.city || ''}\n                        onChange={(e) => handleChange(e)}\n                        name=\"city\"\n                        data-cy=\"city-input\"\n                      />\n                    </div>\n\n                    <div className=\"form-address-input\">\n                      <label>Postcode</label>\n                      <input\n                        id=\"postcode\"\n                        type=\"text\"\n                        value={postcodeValue}\n                        onChange={(e) => handleChange(e)}\n                        name=\"postcode\"\n                        disabled\n                      />\n                    </div>\n\n                  </div>\n                </form>\n\n                {/* Buttons */}\n                <div className=\"form-address-btn-container\">\n                  <button className=\"form-address-btn btn-back\" onClick={goToPostcode}>\n                    <IconContext.Provider value={{ color: '#D338AE', size: '35px' }}>\n                      <IoMdArrowDropleft className=\"icon-back\" />\n                    </IconContext.Provider>\n                    Go back\n                  </button>\n\n                  <button data-cy=\"addrtyped-continue\" className=\"form-address-btn btn-next\" onClick={(e) => e.preventDefault(sendAddress(dataAddress))}>\n                    Continue\n\n                    <IconContext.Provider value={{ color: '#FFF', size: '35px' }}>\n                      <IoMdArrowDropright className=\"icon-next\" />\n                    </IconContext.Provider>\n                  </button>\n                </div>\n              </div>\n\n              {showScript ?\n                (\n                  <div className=\"helper-address\">\n                    <div className=\"script-address\">\n                      <FormScript step={2} />\n                    </div>\n\n                    <div className=\"assistant-address-custom\">\n                      <FormAssistant tips={1} />\n                    </div>\n                  </div>\n                )\n                :\n                <div style={{ width: '100%' }}>\n                  <div className=\"assistant-address\">\n                    <FormAssistant tips={1} />\n                  </div>\n                </div>\n              }\n\n            </div>\n          </section>\n        )}\n    </>\n  );\n}\n\nexport default FormAddress;\n","import \"./Error.css\";\n\nconst Error = ({ message }) => {\n\n  return (\n    <div data-cy=\"error\" className=\"error-container\" id=\"error\">\n      <div className=\"error-message\">\n        <p className=\"error-text\">{message}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Error;\n","import React, { useState, useEffect } from 'react';\n// Styles\nimport './FormScript.css';\n// Icons\nimport { IconContext } from \"react-icons\";\nimport { IoIosChatbubbles } from 'react-icons/io';\n\nfunction FormScript({ step, use, avgElec, avgGas }) {\n    // States\n    const [scriptHeight, setHeight] = useState('');\n\n    // useEffect\n    useEffect(() => {\n        let scHeight = document.getElementById('script-content').offsetHeight;\n        setHeight(scHeight);\n        let parentElement = document.getElementById('script-container').parentElement;\n        parentElement.style.maxHeight = `${scHeight}px`;\n    }, [scriptHeight]);\n\n    // Step content\n    let step_content;\n\n    // Step 1 - Postcode\n    if (step === 1) {\n        step_content = (\n            <div>\n                <ol>\n                    <li>Can you confirm your postcode to start with?</li>\n                    <li>We save our customers <strong>over £100</strong> per year on <strong>average 41%</strong> of households (10m) are on <strong>Standard Variable Tariff</strong> (the worst tariff available).</li>\n                </ol>\n            </div>\n        )\n    }\n    // Step 2 - Full address\n    if (step === 2) {\n        step_content = (\n            <div>\n                <ol>\n                    <li>Can you confirm your door number? <strong>(</strong>Reconfirm full first line of address with customer<strong>)</strong>.</li>\n                </ol>\n            </div>\n        )\n    }\n    // Step 3 - Choose your fuel type\n    if (step === 3) {\n        step_content = (\n            <div>\n                <ol>\n                    <li>Do you have both gas and electricity at the property, or only electric?</li>\n                </ol>\n            </div>\n        )\n    }\n    // Step 4 - Supply number\n    if (step === 4) {\n        step_content = (\n            <div>\n                <ol>\n                    <li>Lorem ipsum dolor sit amet consectetur adipisicing elit. Alias eos ullam quos cupiditate sed tempore? Ducimus blanditiis laborum similique voluptatum sunt ad! Sunt placeat explicabo ratione assumenda voluptate, praesentium tempora!</li>\n\n                    <li>Lorem ipsum dolor sit amet consectetur adipisicing elit. Alias eos ullam quos cupiditate sed tempore? Ducimus blanditiisblanditiis  adipisicing  adipisicing  adipisicing  adipisicing</li>\n                </ol>\n            </div>\n        )\n    }\n    // Step 5 - Choose your energy supplier(s)\n    if (step === 5) {\n        step_content = (\n            <div>\n                <ol>\n                    <li>Lorem ipsum dolor sit amet consectetur adipisicing elit. Alias eos ullam quos cupiditate sed tempore? Ducimus blanditiis laborum similique voluptatum sunt ad! Sunt placeat explicabo ratione assumenda voluptate, praesentium tempora!</li>\n\n                    <li>Lorem ipsum dolor sit amet consectetur adipisicing elit. Alias eos ullam quos cupiditate sed tempore? Ducimus blanditiis laborum similique voluptatum sunt ad! Sunt placeat explicabo ratione assumenda voluptate, praesentium tempora!</li>\n                </ol>\n            </div>\n        )\n    }\n    // Step 6 - Enter economy 7\n    if (step === 6) {\n        step_content = (\n            <div>\n                <ol>\n                    <li>Do you have an Economy 7 meter?</li>\n                </ol>\n            </div>\n        )\n    }\n    // Step 7 - How much energy do you use?\n    if (step === 7) {\n        step_content = (\n            <div>\n                <ol>\n                    {use === 'kwh' ? <li>Do you know how many KWH of electricity you use each year/month?</li> : null}\n                    {use === 'gbp_es' ? <li>Do you know how much you pay each month for your electricity?</li> : null}\n                    {use === 'gas' ? <li>Do you know how many KWH of gas you use each year/month?</li> : null}\n                    {use === 'gbp_gs' ? <li>Do you know how much you pay each month for your gas?</li> : null}\n\n                    {use === 'avg' ?\n                        <li>Okay we will have to base your {(avgElec && !avgGas )? 'electricity' : null} {(avgGas &&  !avgElec) ? 'gas' : null} {(avgElec && avgGas) ? 'electricity and gas' : null} quote on your property profile…</li>\n                        :\n                        null\n                    }\n                </ol>\n            </div>\n        )\n    }\n\n    // Step 8 - Existing Debt\n    if (step === 8) {\n        step_content = (\n            <div>\n                <p>EXISTING DEBT Lorem ipsum dolor sit amet consectetur adipisicing elit. Alias eos ullam quos cupiditate sed tempore? Ducimus blanditiis laborum similique voluptatum sunt ad! Sunt placeat explicabo ratione assumenda voluptate, praesentium tempora!</p>\n\n                <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Alias eos ullam quos cupiditate sed tempore? Ducimus blanditiis laborum similique voluptatum sunt ad! Sunt placeat explicabo ratione assumenda voluptate, praesentium tempora!</p>\n\n                <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Alias eos ullam quos cupiditate sed tempore? Ducimus blanditiis laborum similique voluptatum sunt ad! Sunt placeat explicabo ratione assumenda voluptate, praesentium tempora!</p>\n            </div>\n        )\n    }\n\n    // Step 9 - Compare section\n    if (step === 9) {\n        step_content = (\n            <div>\n                <p>Compare Section Lorem ipsum dolor sit amet consectetur adipisicing elit. Alias eos ullam quos cupiditate sed tempore? Ducimus blanditiis laborum similique voluptatum sunt ad! Sunt placeat explicabo ratione assumenda voluptate, praesentium tempora!</p>\n\n                <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Alias eos ullam quos cupiditate sed tempore? Ducimus blanditiis laborum similique voluptatum sunt ad! Sunt placeat explicabo ratione assumenda voluptate, praesentium tempora!</p>\n\n                <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Alias eos ullam quos cupiditate sed tempore? Ducimus blanditiis laborum similique voluptatum sunt ad! Sunt placeat explicabo ratione assumenda voluptate, praesentium tempora!</p>\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"script-container\" id=\"script-container\" style={{ maxHeight: scriptHeight }}>\n            <div className=\"script-content\" id=\"script-content\">\n                <div className=\"script-header\">\n                    <h3>My script</h3>\n                    <IconContext.Provider value={{ color: '#D338AE', size: '50px' }}>\n                        <IoIosChatbubbles />\n                    </IconContext.Provider>\n                </div>\n\n                {/* Scripts by steps */}\n                <>\n                    {step_content}\n                </>\n            </div>\n        </div>\n    )\n}\n\nexport default FormScript;\n","import React, {useState, useEffect} from 'react';\n// Styles\nimport './FormAssistant.css';\n// Icons\nimport { IconContext } from \"react-icons\";\nimport { BiMessageRoundedError } from 'react-icons/bi';\n\nfunction FormAssistant({ tips }) {\n\n    // States\n    const [assistantHeight, setHeight] = useState('');\n\n    // useEffect\n    useEffect(() => {\n        let scHeight = document.getElementById('assistant-content').offsetHeight;\n        setHeight(scHeight);\n        let parentElement = document.getElementById('assistant-container').parentElement;\n        parentElement.style.maxHeight = `${scHeight}px`;\n    }, [assistantHeight]);\n\n    let tips_content;\n\n    // tips 1 - Full address\n    if (tips === 1) {\n        tips_content = (\n            <div>\n                <ul>\n                    <li>\n                        <p>Reconfirm full first line of address with customer.</p>\n                    </li>\n                </ul>\n            </div>\n        )\n    }\n    // tips 2 - Choose your fuel type\n    if (tips === 2) {\n        tips_content = (\n            <div>\n                <ul>\n                    <li>\n                        <p>Customers who switch both of their fuels to enjoy the most savings</p>\n                    </li>\n                </ul>\n            </div>\n        )\n    }\n    // tips 3 - Supply number\n    if (tips === 3) {\n        tips_content = (\n            <div>\n                <ul>\n                    <li>\n                        <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Alias eos ullam quos cupiditate sed tempore.</p>\n                    </li>\n\n                    <li>\n                        <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Alias eos ullam quos cupiditate sed tempore.</p>\n                    </li>\n                </ul>\n            </div>\n        )\n    }\n    // tips 4 - Choose your energy supplier(s)\n    if (tips === 4) {\n        tips_content = (\n            <div>\n                <ul>\n                    <li>\n                        <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Alias eos ullam quos cupiditate sed tempore.</p>\n                    </li>\n\n                    <li>\n                        <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Alias eos ullam quos cupiditate sed tempore.</p>\n                    </li>\n                </ul>\n            </div>\n        )\n    }\n    // tips 5 - Enter economy 7\n    if (tips === 5) {\n        tips_content = (\n            <div>\n                <ul>\n                    <li>\n                        <p>An Economy 7 meter is a 2 rate meter, so you have a different unit rate in the day and a different unit rate at night.</p>\n                    </li>\n                </ul>\n            </div>\n        )\n    }\n    // tips 6 - How much energy do you use?\n    if (tips === 6) {\n        tips_content = (\n            <div>\n                <ul>\n                    <li>\n                        <p>We need to know how much energy you use so we can provide you with an accurate quote.</p>\n                    </li>\n                </ul>\n            </div>\n        )\n    }\n    // tips 7 - Existing debt\n    if (tips === 7) {\n        tips_content = (\n            <div>\n                <ul>\n                    <li>\n                        <p>Exisitng debt Lorem ipsum dolor sit amet consectetur adipisicing elit. Alias eos ullam quos cupiditate sed tempore.</p>\n                    </li>\n\n                    <li>\n                        <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Alias eos ullam quos cupiditate sed tempore.</p>\n                    </li>\n                </ul>\n            </div>\n        )\n    }\n\n    // tips 9 - Compare section\n    if (tips === 9) {\n        tips_content = (\n            <div>\n                <ul>\n                    <li>\n                        <p>Compare section Lorem ipsum dolor sit amet consectetur adipisicing elit. Alias eos ullam quos cupiditate sed tempore.</p>\n                    </li>\n\n                    <li>\n                        <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Alias eos ullam quos cupiditate sed tempore.</p>\n                    </li>\n                </ul>\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"assistant-container\" id=\"assistant-container\" style={{maxHeight: assistantHeight}}>\n            <div className=\"assistant-content\" id=\"assistant-content\">\n                <div className=\"assistant-header\">\n                    <h3>Savings Assistant</h3>\n                    <IconContext.Provider value={{ color: '#D338AE', size: '35px' }}>\n                        <BiMessageRoundedError />\n                    </IconContext.Provider>\n                </div>\n\n                <div className=\"assistant-information\">\n                    <p>Tips for this stage</p>\n                    {tips_content}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default FormAssistant;\n"],"sourceRoot":""}
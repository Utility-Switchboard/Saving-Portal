{"version":3,"sources":["components/Navbar/Navbar.jsx","components/Footer/Footer.jsx","pages/HomePage/Home.jsx"],"names":["Navbar","progressBar","user","useState","overlay","updateOverlay","activeBreak","updateActiveBreak","btnCloseAnimation","setBtnCloseAnimation","history","useHistory","step","percentage","document","getElementById","step_text","style","width","customMargin","startBreak","a","console","log","year","Date","getFullYear","month","getMonth","date","getDate","milliseconds","getTime","breakId","breakData","timeStamp","firebase","firestore","FieldValue","serverTimestamp","db","collection","doc","uid","docRef","getUserData","get","then","exists","data","userData","update","breakStart","classList","remove","endBreak","breakEnd","signOut","auth","push","add","email","signInTime","catch","error","name","displayName","photoURL","signContainer","offsetWidth","Overlay","id","className","href","target","rel","onClick","marginRight","src","alt","loading","toggle","borderRadius","undefined","split","slice","join","replace","Footer","FormPostCode","lazy","FormAddress","FormFuelType","FormMpanMprn","FormSupply","FormE7","FormUsageKWH","FormUsageGAS","FormUsageGBP_es","FormUsageGBP_gs","FormUsageAVG","FormDebt","FormCompare","FormDetails","FormBankDetails","FormRating","FormSuccessful","Home","updateProgressBar","showScript","updateShowScript","postcode","customerPostCode","updateCustomerPostCode","customerAddres","updateCustomerAddress","useGas","updateUseGas","fuel","updateFuel","electricityInformation","updateElectricityInformation","gasInformation","updateGasInformation","supplierInformation","updateSupplierInformation","customerInformation","updateCustomerInformation","electricityPaymentType","updateElectricityPaymentType","gasPaymentType","updateGasPaymentType","economy7","updateEconomy7","showOverlay","updateShowOverlay","showFormPostCode","updateShowFormPostCode","showFormAddres","updateShowFormAddres","showFormFuelType","updateShowFomrFuelType","showFormMpanMprn","updateShowFormMpanMprn","showFormSupply","updateShowFormSupply","showE7","updateShowE7","showFormUsageKWH","updateShowFormUsageKWH","showFormUsageGAS","updateShowFormUsageGAS","showFormUsageGBP_es","updateShowFormUsageGBP_es","showFormUsageGBP_gs","updateShowFormUsageGBP_gs","showFormUsageAVG","updateShowFormUsageAVG","avgElec","updateAvgElec","avgGas","updateAvgGas","showFormDebt","updateShowFormDebt","showFormCompare","updateShowFormCompare","showFormDetails","updateShowFormDetails","showFormBankDetails","updateShowFormBankDetails","showFormRating","updateShowFormRating","showSuccessFul","updateShowSuccessFul","addPostCodeData","toUpperCase","customerStep","customer","MPANDetails","dataGas","fuel_description","usage_property_size_dual","usage_property_size_es","usage_property_size_gs","usage_gas_description","usage_gbp_description_gs","usage_kwh_description","usage_gbp_description_es","debt","gas_only","elec_only","same_supplier","dual_active","general_unit_rate_elec","unit_rate","general_unit_rate_gas","unitRateElecRef","unitRateElec","unitRateGasRef","unitRateGas","electricity_payment_type_id","electricity_payment_type_method","copy_electricityPaymentType","electricityPaymentType_validated","gas_payment_type_id","gas_payment_type_method","copy_gasPaymentType","gasPaymentType_validated","tariff_description","unit_rate_elec","unit_rate_gas","tariff_description_elec","elec_tariff","tariff_description_gas","gas_tariff","usage_kwh_entered","usage_gbp_entered_es","usage_gbp_entered","usage_size_entered_es","usage_size_entered","usage_gas_entered","usage_gbp_entered_gs","usage_size_entered_gs","usage_size_entered_dual","usage_validated","copy_usage_validated","text","spinner","fallback","postcodeValue"],"mappings":"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","file":"static/js/23.304ac635.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\n// React Router\nimport { useHistory } from 'react-router-dom';\n// Firebase\nimport { db, auth } from '../../firebase/firebase';\nimport firebase from \"firebase/app\";\n// Components\nimport Overlay from '../Overlay/Overlay';\n// Icons\nimport { FaRegUser } from \"react-icons/fa\";\n// CSS\nimport './Navbar.css';\n// Icons\nimport { IoMdCloseCircleOutline } from \"react-icons/io\";\n\nfunction Navbar({ progressBar, user }) {\n\n    /**-- STATES --*/\n    const [overlay, updateOverlay] = useState(false);\n\n    // ActiveBreak\n    const [activeBreak, updateActiveBreak] = useState(false);\n\n    // Close button effect\n    const [btnCloseAnimation, setBtnCloseAnimation] = useState(false);\n\n    // Histoty\n    const history = useHistory();\n\n    // Initial state \n    const step = progressBar.step;\n    const percentage = document.getElementById('percentage');\n    let step_text = 'Enter your postcode';\n    if (step === 0) {\n        if (percentage !== null) {\n            percentage.style.width = '0%';\n            step_text = 'Enter your postcode';\n        }\n    }\n    // Step 1\n    if (step === 1) {\n        percentage.style.width = '10%';\n        step_text = 'Enter your full address';\n    }\n    // Step 2\n    if (step === 2) {\n        percentage.style.width = '20%';\n        step_text = 'Choose your fuel type';\n    }\n    // Step 3\n    if (step === 3) {\n        percentage.style.width = '30%';\n        step_text = 'Supply number';\n    }\n    // Step 4\n    if (step === 4) {\n        percentage.style.width = '40%';\n        step_text = 'Choose your energy supplier(s)';\n    }\n    // Step 5\n    if (step === 5) {\n        percentage.style.width = '50%';\n        step_text = 'Enter economy 7';\n    }\n\n    // Step 6\n    if (step === 6) {\n        percentage.style.width = '60%';\n        step_text = 'How much energy do you use?';\n    }\n\n    // Step 7\n    if (step === 7) {\n        percentage.style.width = '65%';\n        step_text = 'Existing debt';\n    }\n\n    // Step 8\n    if (step === 8) {\n        percentage.style.width = '70%';\n        step_text = 'Compare section';\n    }\n\n    // Step 9\n    if (step === 9) {\n        percentage.style.width = '80%';\n        step_text = 'Customer Details';\n    }\n\n    // Step 10\n    if (step === 10) {\n        percentage.style.width = '90%';\n        step_text = 'Bank Details';\n    }\n\n    // Step 11\n    if (step === 11) {\n        percentage.style.width = '100%';\n        step_text = 'Sign up successful';\n    }\n\n    /**-- FUNCTIONS --*/\n\n    // activeSidebar\n    const activeSidebar = () => {\n        // Active Sidebar \n        let sidebar = document.getElementById(\"sidebar\");\n        sidebar.classList.toggle('active-sidebar');\n\n        // setBtnCloseAnimation\n        setBtnCloseAnimation(false);\n\n        // Show Overlay\n        updateOverlay(true);\n    }\n\n    // closeSidebar\n    const closeSidebar = () => {\n        // Close Sidebar \n        let sidebar = document.getElementById(\"sidebar\");\n        sidebar.classList.remove('active-sidebar');\n\n        // setBtnCloseAnimation\n        setBtnCloseAnimation(true);\n\n        // Hide Overlay\n        updateOverlay(false);\n    }\n\n    // startBreak\n    const startBreak = async () => {\n        console.log('startBreak');\n        // Get year\n        let year = new Date().getFullYear();\n        // Get month\n        let month = new Date().getMonth();\n        // Get date\n        let date = new Date().getDate();\n        // Get time in milliseconds\n        let milliseconds = new Date().getTime();\n        // Break ID\n        let breakId = `break-start-${date}-${month}-${year}-${milliseconds}`;\n\n        // Break data object\n        let breakData = {};\n\n        // Create new object key\n        breakData[breakId] = { timeStamp: firebase.firestore.FieldValue.serverTimestamp() };\n\n        // Document ref\n        let docRef = await db.collection(\"users\").doc(user.uid);\n\n        // Fetching userData data\n        const getUserData = async () => docRef.get().then((doc) => {\n            // If userData exist\n            if (doc.exists) {\n                return doc.data();\n            }\n\n            return;\n        });\n\n        // Assign getUserData\n        let userData = await getUserData();\n\n        // Validation\n        if (userData) {\n            // Update user in firebase\n            db.collection(\"users\").doc(user.uid).update({\n                // Save a copy of the actual data\n                ...userData,\n                // Add into the breakStart object\n                breakStart: {\n                    // Save a copy of the actual data\n                    ...userData.breakStart,\n                    // Add new field\n                    ...breakData\n                }\n            });\n        }\n\n        // Close Sidebar \n        let sidebar = document.getElementById(\"sidebar\");\n        sidebar.classList.remove('active-sidebar');\n\n        // Hide Overlay\n        updateOverlay(false);\n        // Uodate activeBreak\n        updateActiveBreak(!activeBreak);\n    }\n\n    // endBreak\n    const endBreak = async () => {\n        console.log('endBreak');\n        // Get year\n        let year = new Date().getFullYear();\n        // Get month\n        let month = new Date().getMonth();\n        // Get date\n        let date = new Date().getDate();\n        // Get time in milliseconds\n        let milliseconds = new Date().getTime();\n        // Break ID\n        let breakId = `break-end-${date}-${month}-${year}-${milliseconds}`;\n\n        // Break data object\n        let breakData = {};\n\n        // Create new object key\n        breakData[breakId] = { timeStamp: firebase.firestore.FieldValue.serverTimestamp() };\n\n        // Document ref\n        let docRef = await db.collection(\"users\").doc(user.uid);\n\n        // Fetching userData data\n        const getUserData = async () => docRef.get().then((doc) => {\n            // If userData exist\n            if (doc.exists) {\n                return doc.data();\n            }\n\n            return;\n        });\n\n        // Assign getUserData\n        let userData = await getUserData();\n\n        // Validation\n        if (userData) {\n            // Update user in firebase\n            db.collection(\"users\").doc(user.uid).update({\n                // Save a copy of the actual data\n                ...userData,\n                // Add into the breakEnd object\n                breakEnd: {\n                    // Save a copy of the actual data\n                    ...userData.breakEnd,\n                    // Add new field\n                    ...breakData\n                }\n            });\n        }\n\n        // Close Sidebar \n        let sidebar = document.getElementById(\"sidebar\");\n        sidebar.classList.remove('active-sidebar');\n\n        // Hide Overlay\n        updateOverlay(false);\n        // Uodate activeBreak\n        updateActiveBreak(!activeBreak);\n    }\n\n    // signOut\n    const signOut = async () => {\n        // Sign Out - Firebase\n        await auth.signOut().then(() => {\n            console.log('Sign-out successful.');\n            // Redirect\n            history.push('/');\n            // Firebase\n            db.collection('signOutLogs').add({\n                email,\n                signInTime: firebase.firestore.FieldValue.serverTimestamp()\n            });\n        }).catch((error) => {\n            console.log('An error happened.');\n            console.log(error);\n        });\n\n        return;\n    }\n\n    // User information\n    const email = user.email;\n    const name = user.displayName;\n    const photoURL = user.photoURL;\n\n    // customMargin\n    let customMargin;\n\n    // signContainer\n    let signContainer = document.getElementById('sign-container');\n\n    if (signContainer) {\n        customMargin = ((signContainer.offsetWidth - 120) / 2);\n    }\n\n    return (\n        <>\n            {/* Overlay */}\n            {overlay ?\n                <Overlay />\n                :\n                null\n            }\n\n            {/* Sidebar */}\n            <div id=\"sidebar\" className=\"sidebar-container\">\n                <div className=\"sidebar\">\n                    {/* <button className=\"closebtn\" onClick={() => closeSidebar()}><i className=\"far fa-times-circle\"></i></button> */}\n                    <a className=\"sidebar-btn\" href=\"https://sales-portal.utilityswitchboard.com/\" target=\"_blank\" rel=\"noopener\">Sales Portal</a>\n                    <IoMdCloseCircleOutline className={btnCloseAnimation ? \"closebtn animate__animated animate__slideOutRight\" : 'closebtn'} onClick={() => closeSidebar()} />\n\n                    {activeBreak ?\n                        (\n                            <button className=\"sidebar-btn\" onClick={() => startBreak()}>\n                                Start break\n                            </button>\n                        )\n                        :\n                        (\n                            <button className=\"sidebar-btn\" onClick={() => endBreak()}>\n                                End break\n                            </button>\n                        )\n                    }\n\n                    <button className=\"sidebar-btn\" onClick={() => signOut()}>\n                        Log Out\n                    </button>\n                </div>\n            </div>\n\n            {/* Navbar */}\n            <div className=\"navbar-container\">\n                <nav className=\"navbar\">\n                    <a href=\".\" className=\"navbar-logo\" style={{marginRight: customMargin}}>\n                        <img src=\"https://924601.smushcdn.com/2398792/wp-content/themes/twentytwentyone/assets/images/usb-logo-white.png?lossy=1&strip=1&webp=1\" alt=\"Logo\" width=\"120\" loading=\"lazy\" />\n                    </a>\n\n                    <div className=\"progress-bar-container\">\n                        <div id=\"progress-bar\" className=\"progress-bar\">\n                            <div className=\"percentage\" id=\"percentage\"></div>\n                        </div>\n                        <p>{step_text}</p>\n                    </div>\n\n                    <div className=\"sign-container\" id=\"sign-container\" >\n                        <div className=\"sign-content\" onClick={() => activeSidebar()}>\n                            {\n                                photoURL ?\n                                    (\n                                        <>\n                                            <div className=\"avatar-container\">\n                                                <img src={photoURL} alt=\"Avatar\" width=\"35\" style={{ borderRadius: \"50%\" }} loading=\"lazy\" />\n                                                <div className={activeBreak ? 'status-circle break' : 'status-circle'} id=\"status\"></div>\n                                            </div>\n                                        </>\n                                    )\n                                    :\n                                    (\n                                        <>\n                                            <div className=\"avatar-container\">\n                                                <FaRegUser className=\"user-icon\" />\n                                                <div className={activeBreak ? 'status-circle-icon break' : 'status-circle-icon'} id=\"status\"></div>\n                                            </div>\n                                        </>\n                                    )\n                            }\n                            <p className=\"sign\">Hi, {user !== undefined ? name ? name.split(' ').slice(0, 2).join(' ') : email.replace('@utilityswitchboard.com', '') : null}!</p>\n                            {/* <p className=\"sign\">Hi, {user.displayName}!</p> */}\n                        </div>\n                    </div>\n                </nav>\n            </div>\n        </>\n    )\n}\n\nexport default Navbar;\n","import React from 'react';\nimport './Footer.css';\n\nfunction Footer() {\n\n    return (\n        <>\n            <div className=\"footer-container\" id=\"footer-container\">\n                <nav className=\"footer\">\n                    <a href=\".\" className=\"footer-logo\">\n                        <img src=\"https://924601.smushcdn.com/2398792/wp-content/themes/twentytwentyone/assets/images/usb-logo-white.png?lossy=1&strip=1&webp=1\" alt=\"Logo\" width=\"200\" loading=\"lazy\"/>\n                        <p>\t&#169; Copyright {new Date().getFullYear()} - All rights reserved</p>\n                    </a>\n                </nav>\n            </div>\n        </>\n    )\n}\n\nexport default Footer;\n","import React, { useState, lazy, Suspense } from \"react\";\n// Firebase\nimport { db } from \"../../firebase/firebase\";\n\n// Components\nimport Navbar from \"../../components/Navbar/Navbar\";\nimport Footer from \"../../components/Footer/Footer\";\nimport Overlay from \"../../components/Overlay/Overlay\";\nconst FormPostCode = lazy(() => import('../../components/FormCards/FormPostCode/FormPostCode'));\nconst FormAddress = lazy(() => import('../../components/FormCards/FormAddress/FormAddress'));\nconst FormFuelType = lazy(() => import('../../components/FormCards/FormFuelType/FormFuelType'));\nconst FormMpanMprn = lazy(() => import('../../components/FormCards/FormMPN-MPRN/FormMpanMprn'));\nconst FormSupply = lazy(() => import('../../components/FormCards/FormSupply/FormSupply'));\nconst FormE7 = lazy(() => import('../../components/FormCards/FormE7/FormE7'));\n// const FormTariffs = lazy(() => import('../../components/FormCards/FormTariffs/FormTariffs'));\nconst FormUsageKWH = lazy(() => import('../../components/FormCards/FormsUsage/FormUsageKWH/FormUsageKWH'));\nconst FormUsageGAS = lazy(() => import('../../components/FormCards/FormsUsage/FormUsageGAS/FormUsageGAS'));\nconst FormUsageGBP_es = lazy(() => import('../../components/FormCards/FormsUsage/FormUsageGBP_es/FormUsageGBP_es'));\nconst FormUsageGBP_gs = lazy(() => import('../../components/FormCards/FormsUsage/FormUsageGBP_gs/FormUsageGBP_gs'));\nconst FormUsageAVG = lazy(() => import('../../components/FormCards/FormsUsage/FormUsageAVG/FormUsageAVG'));\nconst FormDebt = lazy(() => import('../../components/FormCards/FormDebt/FormDebt'));\nconst FormCompare = lazy(() => import('../../components/FormCards/FormCompare/FormCompare'));\nconst FormDetails = lazy(() => import('../../components/FormCards/FormDetails/FormDetails'));\nconst FormBankDetails = lazy(() => import('../../components/FormCards/FormBankDetails/FormBankDetails'));\nconst FormRating = lazy(() => import('../../components/FormCards/FormRating/FormRating'));\nconst FormSuccessful = lazy(() => import('../../components/FormCards/FormSuccessful/FormSuccessful'));\n\nfunction Home({ user }) {\n    /* -- STATES -- */\n    // Progress bar \n    const [progressBar, updateProgressBar] = useState({ step: 0 });\n\n    // Script\n    const [showScript, updateShowScript] = useState(true);\n\n    // Customer Postcode State\n    const [customerPostCode, updateCustomerPostCode] = useState({\n        postcode: \"\"\n    });\n\n    // Customer Address\n    const [customerAddres, updateCustomerAddress] = useState({});\n\n    // Use gas \n    const [useGas, updateUseGas] = useState({});\n\n    // Fuel\n    const [fuel, updateFuel] = useState({});\n\n    // Customer Electricity Information\n    const [electricityInformation, updateElectricityInformation] = useState({});\n\n    // Customer Gas Information\n    const [gasInformation, updateGasInformation] = useState({});\n\n    // Customer supplier information\n    const [supplierInformation, updateSupplierInformation] = useState({});\n\n    // Customer Information\n    const [customerInformation, updateCustomerInformation] = useState({});\n\n    // Customer Electricity Payment Type\n    const [electricityPaymentType, updateElectricityPaymentType] = useState({});\n\n    // Customer Gas Payment Type\n    const [gasPaymentType, updateGasPaymentType] = useState({});\n\n    // Customer Economy 7\n    const [economy7, updateEconomy7] = useState({});\n\n    /** -- VIEWS states -- */\n\n    // Show Overlay\n    const [showOverlay, updateShowOverlay] = useState(false);\n\n    // Show Form PostCode\n    const [showFormPostCode, updateShowFormPostCode] = useState(true);\n\n    // Show Form Address\n    const [showFormAddres, updateShowFormAddres] = useState(false);\n\n    // Show form Fuel type\n    const [showFormFuelType, updateShowFomrFuelType] = useState(false);\n\n    // Show Form MPAN/MPRN \n    const [showFormMpanMprn, updateShowFormMpanMprn] = useState(false);\n\n    // Show Form Supply \n    const [showFormSupply, updateShowFormSupply] = useState(false);\n\n    // Show Form E7\n    const [showE7, updateShowE7] = useState(false);\n\n    // // Show Form Tariffs\n    // const [showFormTariffs, updateShowFormTariffs] = useState(false);\n\n    // Show Form Usage KWH\n    const [showFormUsageKWH, updateShowFormUsageKWH] = useState(false);\n\n    // Show Form Usage GAS\n    const [showFormUsageGAS, updateShowFormUsageGAS] = useState(false);\n\n    // Show Form Usage GBP_es\n    const [showFormUsageGBP_es, updateShowFormUsageGBP_es] = useState(false);\n\n    // Show Form Usage GBP_gs\n    const [showFormUsageGBP_gs, updateShowFormUsageGBP_gs] = useState(false);\n\n    // Show Form Usage AVG\n    const [showFormUsageAVG, updateShowFormUsageAVG] = useState(false);\n\n    // AVG for elec\n    const [avgElec, updateAvgElec] = useState(false);\n\n    // AVG for gas\n    const [avgGas, updateAvgGas] = useState(false);\n\n    // Show Form Debt\n    const [showFormDebt, updateShowFormDebt] = useState(false);\n\n    // Show Form Compare\n    const [showFormCompare, updateShowFormCompare] = useState(false);\n\n    // Show Form Details\n    const [showFormDetails, updateShowFormDetails] = useState(false);\n\n    // Show Form Bank Details\n    const [showFormBankDetails, updateShowFormBankDetails] = useState(false);\n\n    // Show rating\n    const [showFormRating, updateShowFormRating] = useState(false);\n\n    // Show Successful\n    const [showSuccessFul, updateShowSuccessFul] = useState(false);\n\n    // Add postcode to customer \n    const addPostCodeData = (postcode) => {\n        const postCodeData = postcode;\n        updateCustomerPostCode({\n            postcode: postCodeData.toUpperCase()\n        });\n    };\n\n    // Customer step\n    const customerStep = async (customer) => {\n\n        const { step, customerAddres, MPANDetails, dataGas, fuel, useGas, fuel_description, supplierInformation, electricityPaymentType, gasPaymentType, economy7, usage_property_size_dual, usage_property_size_es, usage_property_size_gs, usage_gas_description, usage_gbp_description_gs, usage_kwh_description, usage_gbp_description_es, avgElec, avgGas, debt } = customer;\n\n        console.log('Aqui aqui');\n\n        console.log(debt)\n\n        // Postcode\n        const { postcode } = customerAddres;\n\n        // Variables\n        let gas_only;\n        let elec_only;\n        let same_supplier;\n        let dual_active;\n\n        if (step > 1) {\n            /**-- Assign Values   */\n            gas_only = fuel_description.gas_only;\n            elec_only = fuel_description.elec_only;\n            same_supplier = fuel_description.same_supplier;\n            dual_active = fuel_description.dual_active;\n        }\n\n        // Variables for electricity and gas payment methods validated\n        let electricityPaymentType_validated;\n        let gasPaymentType_validated;\n\n        // Validation Electricity payment type\n        let electricity_payment_type_id;\n        let electricity_payment_type_method;\n\n        // Validation Gas payment type\n        let gas_payment_type_id;\n        let gas_payment_type_method;\n\n        // Default unit rate for electricity\n        const general_unit_rate_elec = { unit_rate: 17 };\n\n        // Default unit rate for gas\n        const general_unit_rate_gas = { unit_rate: 27 };\n\n        /**-- Unit rate for electricity --*/\n\n        // DocRef Unit Rate Elec\n        let unitRateElecRef = await db.collection(\"unitRates\").doc('unit_rate_svt_elec');\n\n        let unitRateElec = await unitRateElecRef.get().then((doc) => {\n            if (doc.exists) {\n\n                return doc.data();\n\n            } else {\n\n                // console.log(general_unit_rate_elec);\n\n                return general_unit_rate_elec;\n            }\n        }).catch((error) => {\n\n            console.log(\"Error getting document:\", error);\n            // console.log(general_unit_rate_elec);\n\n            return general_unit_rate_elec;\n        });\n\n        /**-- Unit rate for gas --*/\n\n        // DocRef Unit Rate gas\n        let unitRateGasRef = await db.collection(\"unitRates\").doc('unit_rate_svt_gas');\n\n        let unitRateGas = await unitRateGasRef.get().then((doc) => {\n            if (doc.exists) {\n\n                return doc.data();\n\n            } else {\n\n                // console.log(general_unit_rate_elec);\n\n                return general_unit_rate_gas;\n            }\n        }).catch((error) => {\n\n            console.log(\"Error getting document:\", error);\n            // console.log(general_unit_rate_elec);\n\n            return general_unit_rate_gas;\n        });\n\n        // Step 0 - Enter your postcode\n        switch (step) {\n            case 0:\n                console.log('Step 0');\n\n                // Update progress bar\n                updateProgressBar({ ...progressBar, step: 1 });\n                // Add postcode to customerData\n                addPostCodeData(postcode);\n                // Hidde Form Post Code\n                updateShowFormPostCode(false);\n                // Show Form Address\n                updateShowFormAddres(true);\n                // Hide Overlay\n                updateShowOverlay(false);\n                break;\n\n            // Step 1 - Enter your full address -> Choose your fuel type\n            case 1:\n                console.log('Step 1');\n\n                // Add postcode to customerData\n                addPostCodeData(postcode);\n\n                // Update customer address\n                updateCustomerAddress({ ...customerAddres });\n\n                // Update Electricity information\n                updateElectricityInformation({ ...electricityInformation, MPANDetails });\n\n                // Update Gas information\n                updateGasInformation({ ...gasInformation, dataGas });\n\n                // Update progress bar\n                updateProgressBar({ ...progressBar, step: 2 });\n                // Hide Address\n                updateShowFormAddres(false);\n                // Show Form Fuel type\n                updateShowFomrFuelType(true);\n                // Hide Overlay\n                updateShowOverlay(false);\n\n                break;\n\n            // Step 2 - Choose your fuel type -> Supply number\n            case 2:\n                console.log('Step 2');\n\n                // Update customer address\n                updateCustomerAddress({ ...customerAddres });\n\n                // Update Electricity information\n                updateElectricityInformation({ ...electricityInformation, MPANDetails });\n\n                // Update Gas information\n                updateGasInformation({ ...gasInformation, dataGas });\n\n                // Update fuel state\n                updateFuel({ ...fuel });\n\n                // Update useGas\n                updateUseGas({ ...useGas });\n\n                // Update Customer\n                updateCustomerInformation({\n                    ...customerInformation,\n                    fuel_description\n                });\n\n                // Update progress bar\n                updateProgressBar({ ...progressBar, step: 3 });\n                // Hide Address\n                updateShowFormAddres(false);\n                // Show MPAN/MPRN\n                updateShowFormMpanMprn(true);\n                // Hide Overlay\n                updateShowOverlay(false);\n\n                break;\n\n            // Step 3 - Supply number -> Choose your energy supplier(s)\n            case 3:\n                console.log('Step 3');\n\n                // Update customer address\n                updateCustomerAddress({ ...customerAddres });\n\n                // Update Electricity information\n                updateElectricityInformation({ ...electricityInformation, MPANDetails });\n\n                // Update Gas information\n                updateGasInformation({ ...gasInformation, dataGas });\n\n                // Update fuel state\n                updateFuel({ ...fuel });\n\n                // Update useGas\n                updateUseGas({ ...useGas });\n\n                // Update Supplier Information\n                updateSupplierInformation({ ...supplierInformation });\n\n                // Update Customer\n                updateCustomerInformation({\n                    ...customerInformation,\n                    fuel_description\n                });\n\n                // Update progress bar\n                updateProgressBar({ ...progressBar, step: 4 });\n                // Hide Address\n                updateShowFormAddres(false);\n                // Show Form Supply\n                updateShowFormSupply(true);\n                // Hide Overlay\n                updateShowOverlay(false);\n\n                break;\n\n            // Step 4 - Choose your energy supplier(s) -> Economy 7\n            case 4:\n                console.log('Step 4');\n\n                // Update customer address\n                updateCustomerAddress({ ...customerAddres });\n\n                // Update Electricity information\n                updateElectricityInformation({ ...electricityInformation, MPANDetails });\n\n                // Update Gas information\n                updateGasInformation({ ...gasInformation, dataGas });\n\n                // Update fuel state\n                updateFuel({ ...fuel });\n\n                // Update useGas\n                updateUseGas({ ...useGas });\n\n                // Update Supplier Information\n                updateSupplierInformation({ ...supplierInformation });\n\n                /**-- Payment type validation --*/\n\n                // Validation Electricity payment type\n                electricity_payment_type_id = electricityPaymentType.electricity_payment_type_id;\n                electricity_payment_type_method = electricityPaymentType.electricity_payment_type_method;\n\n                if ((electricity_payment_type_id === '') && (electricity_payment_type_method === '')) {\n                    // Delete Electricity payment type if it is empty\n                    const copy_electricityPaymentType = { ...electricityPaymentType };\n                    delete copy_electricityPaymentType['electricity_payment_type_id'];\n                    delete copy_electricityPaymentType['electricity_payment_type_method'];\n                    // Update Electricity payment type\n                    updateElectricityPaymentType({ ...copy_electricityPaymentType });\n                    // Assigning validated value\n                    electricityPaymentType_validated = copy_electricityPaymentType;\n                } else {\n                    // Update Electricity payment type\n                    updateElectricityPaymentType({ ...electricityPaymentType });\n                    // Assigning validated value\n                    electricityPaymentType_validated = electricityPaymentType;\n                }\n\n                // Validation Gas payment type\n                gas_payment_type_id = gasPaymentType.gas_payment_type_id;\n                gas_payment_type_method = gasPaymentType.gas_payment_type_method;\n\n                if ((gas_payment_type_id === '') && (gas_payment_type_method === '')) {\n                    // Delete Gas payment type if it is empty\n                    const copy_gasPaymentType = { ...gasPaymentType };\n                    delete copy_gasPaymentType['gas_payment_type_id'];\n                    delete copy_gasPaymentType['gas_payment_type_method'];\n                    // Update Gas payment type\n                    updateGasPaymentType({ ...copy_gasPaymentType });\n                    // Assigning validated value\n                    gasPaymentType_validated = copy_gasPaymentType;\n                } else {\n                    // Update Gas payment type\n                    updateGasPaymentType({ ...gasPaymentType });\n                    // Assigning validated value\n                    gasPaymentType_validated = gasPaymentType;\n                }\n\n                // Update customer information\n                updateCustomerInformation({\n                    ...customerInformation,\n                    customerAddres,\n                    useGas,\n                    fuel,\n                    supplierInformation,\n                    electricityPaymentType: electricityPaymentType_validated,\n                    gasPaymentType: gasPaymentType_validated,\n                    fuel_description,\n                });\n\n                // Update progress bar\n                updateProgressBar({ ...progressBar, step: 5 });\n                // Hide Address\n                updateShowFormAddres(false);\n                // Show FormE7\n                updateShowE7(true);\n                // Hide Overlay\n                updateShowOverlay(false);\n\n                break;\n\n            // Step 5 - Economy 7 -> How much energy do you use?\n            case 5:\n                console.log('Step 5');\n\n                // Update customer address\n                updateCustomerAddress({ ...customerAddres });\n\n                // Update Electricity information\n                updateElectricityInformation({ ...electricityInformation, MPANDetails });\n\n                // Update Gas information\n                updateGasInformation({ ...gasInformation, dataGas });\n\n                // Update fuel state\n                updateFuel({ ...fuel });\n\n                // Update useGas\n                updateUseGas({ ...useGas });\n\n                // Update Supplier Information\n                updateSupplierInformation({ ...supplierInformation });\n\n                /**-- Payment type validation --*/\n\n                // Validation Electricity payment type\n                electricity_payment_type_id = electricityPaymentType.electricity_payment_type_id;\n                electricity_payment_type_method = electricityPaymentType.electricity_payment_type_method;\n\n                if ((electricity_payment_type_id === '') && (electricity_payment_type_method === '')) {\n                    // Delete Electricity payment type if it is empty\n                    const copy_electricityPaymentType = { ...electricityPaymentType };\n                    delete copy_electricityPaymentType['electricity_payment_type_id'];\n                    delete copy_electricityPaymentType['electricity_payment_type_method'];\n                    // Update Electricity payment type\n                    updateElectricityPaymentType({ ...copy_electricityPaymentType });\n                    // Assigning validated value\n                    electricityPaymentType_validated = copy_electricityPaymentType;\n                } else {\n                    // Update Electricity payment type\n                    updateElectricityPaymentType({ ...electricityPaymentType });\n                    // Assigning validated value\n                    electricityPaymentType_validated = electricityPaymentType;\n                }\n\n                // Validation Gas payment type\n                gas_payment_type_id = gasPaymentType.gas_payment_type_id;\n                gas_payment_type_method = gasPaymentType.gas_payment_type_method;\n\n                if ((gas_payment_type_id === '') && (gas_payment_type_method === '')) {\n                    // Delete Gas payment type if it is empty\n                    const copy_gasPaymentType = { ...gasPaymentType };\n                    delete copy_gasPaymentType['gas_payment_type_id'];\n                    delete copy_gasPaymentType['gas_payment_type_method'];\n                    // Update Gas payment type\n                    updateGasPaymentType({ ...copy_gasPaymentType });\n                    // Assigning validated value\n                    gasPaymentType_validated = copy_gasPaymentType;\n                } else {\n                    // Update Gas payment type\n                    updateGasPaymentType({ ...gasPaymentType });\n                    // Assigning validated value\n                    gasPaymentType_validated = gasPaymentType;\n                }\n\n                // Update Economy 7\n                updateEconomy7({\n                    economy7: {\n                        ...economy7\n                    }\n                });\n\n                /**-- Assign Tariff description  */\n\n                // elec_only\n                if (elec_only) {\n                    console.log('elec_only, Assign Tariff description');\n\n                    // Update customer information\n                    updateCustomerInformation({\n                        ...customerInformation,\n                        customerAddres,\n                        useGas,\n                        fuel,\n                        supplierInformation,\n                        electricityPaymentType: electricityPaymentType_validated,\n                        gasPaymentType: gasPaymentType_validated,\n                        fuel_description,\n                        economy7,\n                        tariff_description: {\n                            unit_rate: unitRateElec.unit_rate\n                        }\n                    });\n                }\n\n                // gas_only\n                if (gas_only) {\n                    console.log('gas_only, Assign Tariff description');\n\n                    // Update customer information\n                    updateCustomerInformation({\n                        ...customerInformation,\n                        customerAddres,\n                        useGas,\n                        fuel,\n                        supplierInformation,\n                        electricityPaymentType: electricityPaymentType_validated,\n                        gasPaymentType: gasPaymentType_validated,\n                        fuel_description,\n                        economy7,\n                        tariff_description: {\n                            unit_rate: unitRateGas.unit_rate\n                        }\n                    });\n                }\n\n                // dual_active\n                if (dual_active) {\n                    // same_supplier\n                    if (same_supplier) {\n                        console.log('Same supplier true, Assign Tariff description');\n\n                        // Update customer information\n                        updateCustomerInformation({\n                            ...customerInformation,\n                            customerAddres,\n                            useGas,\n                            fuel,\n                            supplierInformation,\n                            electricityPaymentType: electricityPaymentType_validated,\n                            gasPaymentType: gasPaymentType_validated,\n                            fuel_description,\n                            economy7,\n                            tariff_description: {\n                                unit_rate_elec: unitRateElec.unit_rate,\n                                unit_rate_gas: unitRateGas.unit_rate,\n                            }\n                        });\n                    } else {\n                        console.log('Same supplier false, Assign Tariff description');\n\n                        // Update customer information\n                        updateCustomerInformation({\n                            ...customerInformation,\n                            customerAddres,\n                            useGas,\n                            fuel,\n                            supplierInformation,\n                            electricityPaymentType: electricityPaymentType_validated,\n                            gasPaymentType: gasPaymentType_validated,\n                            fuel_description,\n                            economy7,\n                            tariff_description_elec: {\n                                elec_tariff: {\n                                    unit_rate: unitRateElec.unit_rate\n                                }\n                            },\n                            tariff_description_gas: {\n                                gas_tariff: {\n                                    unit_rate: unitRateGas.unit_rate\n                                }\n                            }\n                        });\n                    }\n                }\n\n                // Update progress bar\n                updateProgressBar({ ...progressBar, step: 6 });\n                // Hide Address\n                updateShowFormAddres(false);\n\n                // Conditional to usage section\n                if (gas_only) {\n                    // Show Gas\n                    updateShowFormUsageGAS(true)\n                } else {\n                    // Show KWH\n                    updateShowFormUsageKWH(true);\n                }\n\n                // Hide Overlay\n                updateShowOverlay(false);\n\n                break;\n            \n            // Step 6 - How much energy do you use? -> Existing debt\n            case 6:\n                console.log('Step 6');\n                break;\n\n            // Step 7 - How much energy do you use? -> Compare section\n            case 7:\n                console.log('Step 7');\n\n                // Update customer address\n                updateCustomerAddress({ ...customerAddres });\n\n                // Update Electricity information\n                updateElectricityInformation({ ...electricityInformation, MPANDetails });\n\n                // Update Gas information\n                updateGasInformation({ ...gasInformation, dataGas });\n\n                // Update fuel state\n                updateFuel({ ...fuel });\n\n                // Update useGas\n                updateUseGas({ ...useGas });\n\n                // Update Supplier Information\n                updateSupplierInformation({ ...supplierInformation });\n\n                /**-- Payment type validation --*/\n\n                // Validation Electricity payment type\n                electricity_payment_type_id = electricityPaymentType.electricity_payment_type_id;\n                electricity_payment_type_method = electricityPaymentType.electricity_payment_type_method;\n\n                if ((electricity_payment_type_id === '') && (electricity_payment_type_method === '')) {\n                    // Delete Electricity payment type if it is empty\n                    const copy_electricityPaymentType = { ...electricityPaymentType };\n                    delete copy_electricityPaymentType['electricity_payment_type_id'];\n                    delete copy_electricityPaymentType['electricity_payment_type_method'];\n                    // Update Electricity payment type\n                    updateElectricityPaymentType({ ...copy_electricityPaymentType });\n                    // Assigning validated value\n                    electricityPaymentType_validated = copy_electricityPaymentType;\n                } else {\n                    // Update Electricity payment type\n                    updateElectricityPaymentType({ ...electricityPaymentType });\n                    // Assigning validated value\n                    electricityPaymentType_validated = electricityPaymentType;\n                }\n\n                // Validation Gas payment type\n                gas_payment_type_id = gasPaymentType.gas_payment_type_id;\n                gas_payment_type_method = gasPaymentType.gas_payment_type_method;\n\n                if ((gas_payment_type_id === '') && (gas_payment_type_method === '')) {\n                    // Delete Gas payment type if it is empty\n                    const copy_gasPaymentType = { ...gasPaymentType };\n                    delete copy_gasPaymentType['gas_payment_type_id'];\n                    delete copy_gasPaymentType['gas_payment_type_method'];\n                    // Update Gas payment type\n                    updateGasPaymentType({ ...copy_gasPaymentType });\n                    // Assigning validated value\n                    gasPaymentType_validated = copy_gasPaymentType;\n                } else {\n                    // Update Gas payment type\n                    updateGasPaymentType({ ...gasPaymentType });\n                    // Assigning validated value\n                    gasPaymentType_validated = gasPaymentType;\n                }\n\n                // Update Economy 7\n                updateEconomy7({\n                    economy7: {\n                        ...economy7\n                    }\n                });\n\n                /**-- Assign Tariff description && Usage */\n\n                // Entered usage boolean values \n                // Elec\n                const usage_kwh_entered = usage_kwh_description.usage_kwh_entered;\n                const usage_gbp_entered_es = usage_gbp_description_es.usage_gbp_entered;\n                const usage_size_entered_es = usage_property_size_es.usage_size_entered;\n\n                // Gas\n                const usage_gas_entered = usage_gas_description.usage_kwh_entered;\n                const usage_gbp_entered_gs = usage_gbp_description_gs.usage_gbp_entered;\n                const usage_size_entered_gs = usage_property_size_gs.usage_size_entered;\n\n                // Dual\n                const usage_size_entered_dual = usage_property_size_dual.usage_size_entered;\n\n                // usage_validated\n                const usage_validated = {\n                    usage_kwh_description,\n                    usage_gbp_description_es,\n                    usage_gas_description,\n                    usage_gbp_description_gs,\n                    usage_property_size_es,\n                    usage_property_size_gs,\n                    usage_property_size_dual\n                };\n\n                // copy_usage_validated\n                let copy_usage_validated = { ...usage_validated };\n\n                /**-- Electricity Values --*/\n\n                // Validation usage_kwh_entered\n                if (usage_kwh_entered) {\n                    delete copy_usage_validated['usage_gbp_description_es'];\n                    delete copy_usage_validated['usage_property_size_es'];\n                    delete copy_usage_validated['usage_property_size_dual'];\n                }\n\n                //  Validation usage_gbp_entered_es\n                if (usage_gbp_entered_es) {\n                    delete copy_usage_validated['usage_property_size_es'];\n                    delete copy_usage_validated['usage_property_size_dual'];\n                }\n\n                // Validation usage_size_entered_es\n                if (usage_size_entered_es) {\n                    delete copy_usage_validated['usage_property_size_dual'];\n                    delete copy_usage_validated['usage_property_size_gs'];\n                }\n\n                /**-- Gas Values --*/\n\n                // usage_gas_entered\n                if (usage_gas_entered) {\n                    delete copy_usage_validated['usage_gbp_description_gs'];\n                    delete copy_usage_validated['usage_property_size_gs'];\n                    delete copy_usage_validated['usage_property_size_dual'];\n                }\n\n                // Validation usage_gbp_entered_gs\n                if (usage_gbp_entered_gs) {\n                    delete copy_usage_validated['usage_property_size_gs'];\n                    delete copy_usage_validated['usage_property_size_dual'];\n                }\n\n                // Validation usage_size_entered_gs\n                if (usage_size_entered_gs) {\n                    delete copy_usage_validated['usage_property_size_dual'];\n                    delete copy_usage_validated['usage_property_size_es'];\n                }\n\n                /**-- Dual Values --*/\n\n                // Validation usage_size_entered_dual\n                if (usage_size_entered_dual) {\n                    delete copy_usage_validated['usage_property_size_es'];\n                    delete copy_usage_validated['usage_property_size_gs'];\n                }\n\n                // elec_only\n                if (elec_only) {\n                    console.log('elec_only, Assign Tariff description');\n\n                    delete copy_usage_validated['usage_gas_description'];\n                    delete copy_usage_validated['usage_gbp_description_gs'];\n                    delete copy_usage_validated['usage_property_size_gs'];\n                    delete copy_usage_validated['usage_property_size_dual'];\n\n                    // Update customer information\n                    updateCustomerInformation({\n                        ...customerInformation,\n                        customerAddres,\n                        useGas,\n                        fuel,\n                        supplierInformation,\n                        electricityPaymentType: electricityPaymentType_validated,\n                        gasPaymentType: gasPaymentType_validated,\n                        fuel_description,\n                        economy7,\n                        tariff_description: {\n                            unit_rate: unitRateElec.unit_rate\n                        },\n                        debt,\n                        ...copy_usage_validated\n                    });\n                }\n\n                // gas_only\n                if (gas_only) {\n                    console.log('gas_only, Assign Tariff description');\n\n                    delete copy_usage_validated['usage_kwh_description'];\n                    delete copy_usage_validated['usage_gbp_description_es'];\n                    delete copy_usage_validated['usage_property_size_es'];\n                    delete copy_usage_validated['usage_property_size_dual'];\n\n                    // Update customer information\n                    updateCustomerInformation({\n                        ...customerInformation,\n                        customerAddres,\n                        useGas,\n                        fuel,\n                        supplierInformation,\n                        electricityPaymentType: electricityPaymentType_validated,\n                        gasPaymentType: gasPaymentType_validated,\n                        fuel_description,\n                        economy7,\n                        tariff_description: {\n                            unit_rate: unitRateGas.unit_rate\n                        },\n                        debt,\n                        ...copy_usage_validated\n                    });\n                }\n\n                // dual_active\n                if (dual_active) {\n                    // same_supplier\n                    if (same_supplier) {\n                        console.log('Same supplier true, Assign Tariff description');\n\n                        // Update customer information\n                        updateCustomerInformation({\n                            ...customerInformation,\n                            customerAddres,\n                            useGas,\n                            fuel,\n                            supplierInformation,\n                            electricityPaymentType: electricityPaymentType_validated,\n                            gasPaymentType: gasPaymentType_validated,\n                            fuel_description,\n                            economy7,\n                            tariff_description: {\n                                unit_rate_elec: unitRateElec.unit_rate,\n                                unit_rate_gas: unitRateGas.unit_rate,\n                            },\n                            debt,\n                            ...copy_usage_validated\n                        });\n\n                    } else {\n                        console.log('Same supplier false, Assign Tariff description');\n\n                        // Update customer information\n                        updateCustomerInformation({\n                            ...customerInformation,\n                            customerAddres,\n                            useGas,\n                            fuel,\n                            supplierInformation,\n                            electricityPaymentType: electricityPaymentType_validated,\n                            gasPaymentType: gasPaymentType_validated,\n                            fuel_description,\n                            economy7,\n                            tariff_description_elec: {\n                                elec_tariff: {\n                                    unit_rate: unitRateElec.unit_rate\n                                }\n                            },\n                            tariff_description_gas: {\n                                gas_tariff: {\n                                    unit_rate: unitRateGas.unit_rate\n                                }\n                            },\n                            debt,\n                            ...copy_usage_validated\n                        });\n                    }\n                }\n\n                // Update AvgElec\n                updateAvgElec(avgElec);\n                // Update AvgGas\n                updateAvgGas(avgGas);\n\n                // Update progress bar\n                updateProgressBar({ ...progressBar, step: 8 });\n                // Hide Form Address\n                updateShowFormAddres(false);\n                // Show Compare\n                updateShowFormCompare(true);\n\n                // Hide Overlay\n                updateShowOverlay(false);\n\n                break;\n\n            // Step 8\n            case 8:\n                console.log('Step 8');\n                break;\n            default:\n                break;\n        }\n    }\n\n    // States control\n    // console.log('De aqui para abajo');\n    // console.log(customerAddres);\n    // console.log(useGas);\n    // console.log(fuel);   \n    // console.log(electricityInformation);\n    // console.log(gasInformation);\n    // console.log(supplierInformation);\n    console.log(customerInformation);\n    // console.log(electricityPaymentType);\n    // console.log(gasPaymentType);\n    // console.log(economy7);\n\n    // console.log(electricityInformation);\n    // console.log(gasInformation);\n    // console.log(supplierInformation);\n    // console.log(customerInformation);\n    // console.log(electricityPaymentType);\n    // console.log(customerAddres);\n    // console.log(economy7);\n    // console.log(useGas);\n    // console.log(fuel);\n\n    return (\n        <>\n            {/* Navbar */}\n            <Navbar\n                progressBar={progressBar}\n                user={user}\n            />\n\n            {/* Overlay */}\n            {showOverlay ? <Overlay text={'Loading data, please wait...'} spinner={true} /> : null}\n\n            <>\n                {/* Postcode form*/}\n                {showFormPostCode ?\n                    (\n                        <Suspense fallback={<Overlay text={'Loading data, please wait...'} spinner={true} />}>\n                            <FormPostCode\n                                addPostCodeData={addPostCodeData}\n                                progressBar={progressBar}\n                                showScript={showScript}\n                                updateShowFormPostCode={updateShowFormPostCode}\n                                updateShowFormAddres={updateShowFormAddres}\n                                updateProgressBar={updateProgressBar}\n                                updateShowScript={updateShowScript}\n                            />\n                        </Suspense>\n                    )\n                    :\n                    (\n                        null\n                    )\n                }\n\n                {/* Address form*/}\n                {showFormAddres ?\n                    (\n                        <Suspense fallback={<Overlay text={'Loading data, please wait...'} spinner={true} />}>\n                            <FormAddress\n                                postcodeValue={customerPostCode.postcode}\n                                gasInformation={gasInformation}\n                                electricityInformation={electricityInformation}\n                                progressBar={progressBar}\n                                showScript={showScript}\n                                customerStep={customerStep}\n                                updateCustomerAddress={updateCustomerAddress}\n                                updateGasInformation={updateGasInformation}\n                                updateElectricityInformation={updateElectricityInformation}\n                                updateShowFormPostCode={updateShowFormPostCode}\n                                updateShowFormAddres={updateShowFormAddres}\n                                updateShowOverlay={updateShowOverlay}\n                                updateProgressBar={updateProgressBar}\n                                updateShowScript={updateShowScript}\n                                updateShowFomrFuelType={updateShowFomrFuelType}\n                            />\n                        </Suspense>\n                    )\n                    :\n                    (\n                        null\n                    )\n                }\n\n                {/* Fuel type */}\n                {showFormFuelType ?\n                    (\n                        <Suspense fallback={<Overlay text={'Loading data, please wait...'} spinner={true} />}>\n                            <FormFuelType\n                                customerInformation={customerInformation}\n                                showScript={showScript}\n                                fuel={fuel}\n                                useGas={useGas}\n                                electricityInformation={electricityInformation}\n                                gasInformation={gasInformation}\n                                supplierInformation={supplierInformation}\n                                customerAddres={customerAddres}\n                                progressBar={progressBar}\n                                updateCustomerInformation={updateCustomerInformation}\n                                updateFuel={updateFuel}\n                                updateUseGas={updateUseGas}\n                                updateElectricityInformation={updateElectricityInformation}\n                                updateGasInformation={updateGasInformation}\n                                updateSupplierInformation={updateSupplierInformation}\n                                updateCustomerAddress={updateCustomerAddress}\n                                updateShowFomrFuelType={updateShowFomrFuelType}\n                                updateShowFormMpanMprn={updateShowFormMpanMprn}\n                                updateShowFormAddres={updateShowFormAddres}\n                                updateProgressBar={updateProgressBar}\n                            />\n                        </Suspense>\n                    )\n                    :\n                    null\n                }\n\n                {/* MPAN/MPRN form*/}\n                {showFormMpanMprn ?\n                    (\n                        <Suspense fallback={<Overlay text={'Loading data, please wait...'} spinner={true} />}>\n                            <FormMpanMprn\n                                customerAddres={customerAddres}\n                                electricityInformation={electricityInformation}\n                                gasInformation={gasInformation}\n                                customerInformation={customerInformation}\n                                useGas={useGas}\n                                fuel={fuel}\n                                progressBar={progressBar}\n                                showScript={showScript}\n                                updateCustomerAddress={updateCustomerAddress}\n                                updateElectricityInformation={updateElectricityInformation}\n                                updateGasInformation={updateGasInformation}\n                                updateCustomerInformation={updateCustomerInformation}\n                                updateProgressBar={updateProgressBar}\n                                updateShowFormMpanMprn={updateShowFormMpanMprn}\n                                updateShowFormSupply={updateShowFormSupply}\n                                updateShowFomrFuelType={updateShowFomrFuelType}\n                                updateShowOverlay={updateShowOverlay}\n                            />\n                        </Suspense>\n                    )\n                    :\n                    (\n                        null\n                    )\n                }\n                {/* Supplier Information form*/}\n                {showFormSupply ?\n                    (\n                        <Suspense fallback={<Overlay text={'Loading data, please wait...'} spinner={true} />}>\n                            <FormSupply\n                                customerAddres={customerAddres}\n                                electricityInformation={electricityInformation}\n                                gasInformation={gasInformation}\n                                supplierInformation={supplierInformation}\n                                useGas={useGas}\n                                fuel={fuel}\n                                customerInformation={customerInformation}\n                                electricityPaymentType={electricityPaymentType}\n                                gasPaymentType={gasPaymentType}\n                                progressBar={progressBar}\n                                showScript={showScript}\n                                updateCustomerAddress={updateCustomerAddress}\n                                updateShowFormMpanMprn={updateShowFormMpanMprn}\n                                updateShowFormSupply={updateShowFormSupply}\n                                updateShowE7={updateShowE7}\n                                updateSupplierInformation={updateSupplierInformation}\n                                updateElectricityInformation={updateElectricityInformation}\n                                updateGasInformation={updateGasInformation}\n                                updateCustomerInformation={updateCustomerInformation}\n                                updateElectricityPaymentType={updateElectricityPaymentType}\n                                updateGasPaymentType={updateGasPaymentType}\n                                updateFuel={updateFuel}\n                                updateProgressBar={updateProgressBar}\n                            />\n                        </Suspense>\n                    )\n                    :\n                    (\n                        null\n                    )\n                }\n                {/* Economy 7 form */}\n                {showE7 ?\n                    (\n                        <Suspense fallback={<Overlay text={'Loading data, please wait...'} spinner={true} />}>\n                            <FormE7\n                                economy7={economy7}\n                                customerInformation={customerInformation}\n                                electricityPaymentType={electricityPaymentType}\n                                gasPaymentType={gasPaymentType}\n                                electricityInformation={electricityInformation}\n                                gasInformation={gasInformation}\n                                supplierInformation={supplierInformation}\n                                progressBar={progressBar}\n                                showScript={showScript}\n                                updateEconomy7={updateEconomy7}\n                                updateCustomerInformation={updateCustomerInformation}\n                                updateShowFormSupply={updateShowFormSupply}\n                                updateShowE7={updateShowE7}\n                                // updateShowFormTariffs={updateShowFormTariffs}\n                                updateElectricityPaymentType={updateElectricityPaymentType}\n                                updateGasPaymentType={updateGasPaymentType}\n                                updateProgressBar={updateProgressBar}\n                                updateShowOverlay={updateShowOverlay}\n                                updateSupplierInformation={updateSupplierInformation}\n                                updateGasInformation={updateGasInformation}\n                                updateElectricityInformation={updateElectricityInformation}\n                                updateShowFormUsageKWH={updateShowFormUsageKWH}\n                                updateShowFormUsageGAS={updateShowFormUsageGAS}\n                            />\n                        </Suspense>\n                    )\n                    :\n                    (\n                        null\n                    )\n                }\n                {/* Form Tariffs\n                {showFormTariffs ?\n                    (\n                        <Suspense fallback={<Overlay text={'Loading data, please wait...'} spinner={true} />}>\n                            <FormTariffs\n                                customerInformation={customerInformation}\n                                showScript={showScript}\n                                progressBar={progressBar}\n                                updateShowE7={updateShowE7}\n                                // updateShowFormTariffs={updateShowFormTariffs}\n                                updateShowOverlay={updateShowOverlay}\n                                updateCustomerInformation={updateCustomerInformation}\n                                updateElectricityPaymentType={updateElectricityPaymentType}\n                                updateShowFormUsageKWH={updateShowFormUsageKWH}\n                                updateShowFormUsageGAS={updateShowFormUsageGAS}\n                                updateProgressBar={updateProgressBar}\n                            />\n                        </Suspense>\n                    )\n                    :\n                    (\n                        null\n                    )\n                } */}\n                {/* Form Usage */}\n                {showFormUsageKWH ?\n                    (\n                        <Suspense fallback={<Overlay text={'Loading data, please wait...'} spinner={true} />}>\n                            <FormUsageKWH\n                                customerInformation={customerInformation}\n                                progressBar={progressBar}\n                                showScript={showScript}\n                                updateAvgElec={updateAvgElec}\n                                updateCustomerInformation={updateCustomerInformation}\n                                updateShowFormUsageKWH={updateShowFormUsageKWH}\n                                updateShowFormUsageGAS={updateShowFormUsageGAS}\n                                updateShowFormUsageGBP_es={updateShowFormUsageGBP_es}\n                                updateShowFormDebt={updateShowFormDebt}\n                                // updateShowFormTariffs={updateShowFormTariffs}\n                                updateProgressBar={updateProgressBar}\n                                updateShowOverlay={updateShowOverlay}\n                                updateShowE7={updateShowE7}\n                            />\n                        </Suspense>\n                    )\n                    :\n                    null\n                }\n                {/* Form Usage */}\n                {showFormUsageGAS ?\n                    (\n                        <Suspense fallback={<Overlay text={'Loading data, please wait...'} spinner={true} />}>\n                            <FormUsageGAS\n                                customerInformation={customerInformation}\n                                progressBar={progressBar}\n                                avgElec={avgElec}\n                                showScript={showScript}\n                                updateCustomerInformation={updateCustomerInformation}\n                                updateShowFormUsageGAS={updateShowFormUsageGAS}\n                                updateShowFormUsageKWH={updateShowFormUsageKWH}\n                                updateShowFormUsageGBP_gs={updateShowFormUsageGBP_gs}\n                                updateShowFormUsageGBP_es={updateShowFormUsageGBP_es}\n                                updateShowFormUsageAVG={updateShowFormUsageAVG}\n                                updateShowFormDebt={updateShowFormDebt}\n                                // updateShowFormTariffs={updateShowFormTariffs}\n                                updateAvgGas={updateAvgGas}\n                                updateAvgElec={updateAvgElec}\n                                updateProgressBar={updateProgressBar}\n                                updateShowOverlay={updateShowOverlay}\n                                updateShowE7={updateShowE7}\n                            />\n                        </Suspense>\n                    )\n                    :\n                    null\n                }\n                {/* Form Usage GBP */}\n                {showFormUsageGBP_es ?\n                    (\n                        <Suspense fallback={<Overlay text={'Loading data, please wait...'} spinner={true} />}>\n                            <FormUsageGBP_es\n                                customerInformation={customerInformation}\n                                progressBar={progressBar}\n                                showScript={showScript}\n                                updateCustomerInformation={updateCustomerInformation}\n                                updateShowFormUsageKWH={updateShowFormUsageKWH}\n                                updateShowFormUsageGBP_es={updateShowFormUsageGBP_es}\n                                updateShowFormUsageGBP_es={updateShowFormUsageGBP_es}\n                                updateShowFormUsageAVG={updateShowFormUsageAVG}\n                                updateShowFormUsageGAS={updateShowFormUsageGAS}\n                                updateShowFormDebt={updateShowFormDebt}\n                                updateAvgElec={updateAvgElec}\n                                updateProgressBar={updateProgressBar}\n                            />\n                        </Suspense>\n                    )\n                    :\n                    null\n                }\n                {/* Form Usage GBP */}\n                {showFormUsageGBP_gs ?\n                    (\n                        <Suspense fallback={<Overlay text={'Loading data, please wait...'} spinner={true} />}>\n                            <FormUsageGBP_gs\n                                customerInformation={customerInformation}\n                                avgElec={avgElec}\n                                progressBar={progressBar}\n                                showScript={showScript}\n                                updateCustomerInformation={updateCustomerInformation}\n                                updateShowFormUsageGAS={updateShowFormUsageGAS}\n                                updateShowFormUsageGBP_gs={updateShowFormUsageGBP_gs}\n                                updateShowFormUsageAVG={updateShowFormUsageAVG}\n                                updateShowFormDebt={updateShowFormDebt}\n                                updateAvgGas={updateAvgGas}\n                                updateProgressBar={updateProgressBar}\n                            />\n                        </Suspense>\n                    )\n                    :\n                    null\n                }\n                {/* Form Usage AVG*/}\n                {showFormUsageAVG ?\n                    (\n                        <Suspense fallback={<Overlay text={'Loading data, please wait...'} spinner={true} />}>\n                            <FormUsageAVG\n                                customerInformation={customerInformation}\n                                avgElec={avgElec}\n                                avgGas={avgGas}\n                                progressBar={progressBar}\n                                showScript={showScript}\n                                updateCustomerInformation={updateCustomerInformation}\n                                updateShowFormUsageAVG={updateShowFormUsageAVG}\n                                updateShowFormUsageGBP_es={updateShowFormUsageGBP_es}\n                                updateShowFormUsageGBP_gs={updateShowFormUsageGBP_gs}\n                                updateShowFormUsageGAS={updateShowFormUsageGAS}\n                                updateShowFormDebt={updateShowFormDebt}\n                                updateProgressBar={updateProgressBar}\n                            />\n                        </Suspense>\n                    )\n                    :\n                    null\n                }\n                {/* Form Debt */}\n                {showFormDebt ?\n                    (\n                        <Suspense fallback={<Overlay text={'Loading data, please wait...'} spinner={true} />}>\n                            <FormDebt\n                                customerInformation={customerInformation}\n                                showScript={showScript}\n                                progressBar={progressBar}\n                                updateCustomerInformation={updateCustomerInformation}\n                                updateShowFormUsageKWH={updateShowFormUsageKWH}\n                                updateShowFormUsageGBP_es={updateShowFormUsageGBP_es}\n                                updateShowFormUsageAVG={updateShowFormUsageAVG}\n                                updateProgressBar={updateProgressBar}\n                                updateShowFormUsageGAS={updateShowFormUsageGAS}\n                                updateShowFormUsageGBP_gs={updateShowFormUsageGBP_gs}\n                                updateShowFormDebt={updateShowFormDebt}\n                                updateShowFormCompare={updateShowFormCompare}\n                            />\n                        </Suspense>\n                    )\n                    :\n                    null\n                }\n                {/* Form Compare */}\n                {showFormCompare ?\n                    (\n                        <Suspense fallback={<Overlay text={'Loading data, please wait...'} spinner={true} />}>\n                            <FormCompare\n                                customerInformation={customerInformation}\n                                user={user}\n                                electricityInformation={electricityInformation}\n                                gasInformation={gasInformation}\n                                avgElec={avgElec}\n                                avgGas={avgGas}\n                                showScript={showScript}\n                                progressBar={progressBar}\n                                updateCustomerInformation={updateCustomerInformation}\n                                updateShowOverlay={updateShowOverlay}\n                                updateShowFormCompare={updateShowFormCompare}\n                                updateShowFormUsageKWH={updateShowFormUsageKWH}\n                                updateShowFormUsageGBP_es={updateShowFormUsageGBP_es}\n                                updateShowFormUsageAVG={updateShowFormUsageAVG}\n                                updateShowFormUsageGAS={updateShowFormUsageGAS}\n                                updateShowFormUsageGBP_gs={updateShowFormUsageGBP_gs}\n                                updateShowFormDetails={updateShowFormDetails}\n                                updateShowFormDebt={updateShowFormDebt}\n                                updateProgressBar={updateProgressBar}\n                            />\n                        </Suspense>\n                    )\n                    :\n                    null\n                }\n                {/* Form Details */}\n                {showFormDetails ?\n                    (\n                        <Suspense fallback={<Overlay text={'Loading data, please wait...'} spinner={true} />}>\n                            <FormDetails\n                                customerInformation={customerInformation}\n                                progressBar={progressBar}\n                                updateCustomerInformation={updateCustomerInformation}\n                                updateShowFormCompare={updateShowFormCompare}\n                                updateShowFormDetails={updateShowFormDetails}\n                                updateProgressBar={updateProgressBar}\n                                updateShowFormBankDetails={updateShowFormBankDetails}\n                                updateShowOverlay={updateShowOverlay}\n                            />\n                        </Suspense>\n                    )\n                    :\n                    null\n                }\n                {/* Form Bank Details */}\n                {showFormBankDetails ?\n                    (\n                        <Suspense fallback={<Overlay text={'Loading data, please wait...'} spinner={true} />}>\n                            <FormBankDetails\n                                customerInformation={customerInformation}\n                                progressBar={progressBar}\n                                updateCustomerInformation={updateCustomerInformation}\n                                updateShowFormDetails={updateShowFormDetails}\n                                updateProgressBar={updateProgressBar}\n                                updateShowFormBankDetails={updateShowFormBankDetails}\n                                updateShowFormRating={updateShowFormRating}\n                                updateShowOverlay={updateShowOverlay}\n                            />\n                        </Suspense>\n                    )\n                    :\n                    null\n                }\n                {/* Form rating */}\n                {showFormRating ?\n                    (\n                        <FormRating\n                            customerInformation={customerInformation}\n                            progressBar={progressBar}\n                            updateCustomerInformation={updateCustomerInformation}\n                            updateShowFormRating={updateShowFormRating}\n                            updateShowSuccessFul={updateShowSuccessFul}\n                            updateProgressBar={updateProgressBar}\n                        />\n                    )\n                    :\n                    null\n                }\n                {/* Form successful */}\n                {showSuccessFul ?\n                    (\n                        <FormSuccessful\n\n                        />\n                    )\n                    :\n                    null\n                }\n            </>\n            {/* Footer */}\n            <Footer />\n        </>\n    )\n}\n\nexport default Home;\n"],"sourceRoot":""}
{"version":3,"sources":["firebase/firebase.js","components/Overlay/Overlay.jsx","components/IdleTimerContainer/IdleTimerContainer.js","App.jsx","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","googleProvider","GoogleAuthProvider","enablePersistence","catch","err","code","console","log","createUserProfileDocument","user","a","docRef","collection","doc","uid","get","exists","displayName","email","createdAt","Date","display_name","set","breakStart","breakEnd","message","Overlay","text","spinner","className","IdleTimerContainer","IdleTimerRef","useRef","history","useHistory","signOut","then","push","error","ref","timeout","onIdle","timeleft","counterDownTimer","setInterval","clearInterval","currentUser","add","signInTime","FieldValue","serverTimestamp","swal","getState","isOpen","close","closeOnClickOutside","buttons","confirm","content","Provider","value","color","size","respond","Home","lazy","Login","App","useState","isAuthenticated","setIsAuthenticated","isLoading","updateIsLoading","userInfo","updateUserInfo","useEffect","onAuthStateChanged","fallback","path","render","props","to","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.977438cb.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\n// Firebase Config\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_apiKey,\n  authDomain: process.env.REACT_APP_authDomain,\n  projectId: process.env.REACT_APP_projectId,\n  storageBucket: process.env.REACT_APP_storageBucket,\n  messagingSenderId: process.env.REACT_APP_messagingSenderId,\n  appId: process.env.REACT_APP_appId,\n  measurementId: process.env.REACT_APP_measurementId\n};\n\n// Firebase App\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\n\n// DB\nconst db = firebaseApp.firestore();\n\n// Auth\nconst auth = firebase.auth();\n\n// Google Provider\nconst googleProvider = new firebase.auth.GoogleAuthProvider();\n\n// Enable offline mode\nfirebase.firestore().enablePersistence()\n  .catch((err) => {\n    if (err.code === 'failed-precondition') {\n      // Multiple tabs open, persistence can only be enabled\n      // in one tab at a a time.\n      // ...\n      console.log(err);\n    } else if (err.code === 'unimplemented') {\n      // The current browser does not support all of the\n      // features required to enable persistence\n      // ...\n      console.log(err);\n    }\n  });\n\n// Function to create user profile document\nconst createUserProfileDocument = async (user) => {\n  // Document ref\n  const docRef = db.collection(\"users\").doc(user.uid);\n\n  // snapShot\n  const snapShot = await docRef.get();\n\n  if (!snapShot.exists) {\n\n    const { displayName, email } = user;\n    const createdAt = new Date();\n\n    let display_name;\n\n    if (!!displayName) {\n      display_name = displayName;\n    } else {\n      display_name = email;\n    }\n\n    try {\n      await docRef.set({\n        displayName: display_name,\n        email,\n        createdAt,\n        breakStart: {},\n        breakEnd: {}\n      })\n    } catch (error) {\n      console.log('Error Creating User', error.message);\n    }\n  }\n\n  return docRef;\n}\n\nexport { db, auth, googleProvider, createUserProfileDocument };","import React from \"react\";\nimport \"./Overlay.css\";\n\nfunction Overlay({ text, spinner }) {\n\n  // Calculate the height\n  // var window_height = window.innerHeight * 0.67 ;\n  // document.getElementById(\"window-height\").style.height = \"50px\";\n  // console.log(window_height);\n\n  return (\n    <>\n      {/* <div id=\"window-height\" style={{height: (window_height)}}></div> */}\n\n      <div className=\"overlay\">\n        <div className=\"content\">\n          {spinner ?\n            (\n              <div className=\"sk-chase\">\n                <div className=\"sk-chase-dot\"></div>\n                <div className=\"sk-chase-dot\"></div>\n                <div className=\"sk-chase-dot\"></div>\n                <div className=\"sk-chase-dot\"></div>\n                <div className=\"sk-chase-dot\"></div>\n                <div className=\"sk-chase-dot\"></div>\n              </div>\n            )\n            :\n            null\n          }\n\n          <div className=\"overlay-message-container\">\n            <h1 className=\"overlay-message\">{text}</h1>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Overlay;\n","import React, { useRef } from 'react';\n// React Router\nimport { useHistory } from 'react-router-dom';\n// Firebase\nimport { db, auth } from '../../firebase/firebase';\nimport firebase from \"firebase/app\";\n// IdleTimer\nimport IdleTimer from 'react-idle-timer';\n// Icons\nimport { IconContext } from \"react-icons\";\nimport { RiTimeLine } from 'react-icons/ri';\n// Swal\nimport swal from '@sweetalert/with-react';\n\nfunction IdleTimerContainer() {\n    const IdleTimerRef = useRef(null);\n\n    // Histoty\n    const history = useHistory();\n\n    const signOut = async () => {\n        // Sign Out - Firebase\n        await auth.signOut().then(() => {\n            console.log('Sign-out successful.');\n            // Redirect\n            history.push('/');\n        }).catch((error) => {\n            console.log('An error happened.');\n        });\n\n        return;\n    }\n\n    const onIdle = () => {\n\n        // Counter down timer\n        let timeleft = 30;\n        let counterDownTimer = setInterval(function () {\n            if (timeleft <= 0) {\n                clearInterval(counterDownTimer);\n            }\n\n            // Decresae by -1\n            let upTo = timeleft -= 1;\n\n            if (upTo === 0) {\n\n                // Signout method\n                signOut();\n\n                // Email\n                const email = auth.currentUser.email;\n\n                // Firebase\n                db.collection('signOutLogs').add({\n                    email,\n                    signInTime: firebase.firestore.FieldValue.serverTimestamp(),\n                });\n\n                // Check modal state\n                const isOpen = swal.getState().isOpen;\n                // Conditional to close the modal\n                if (isOpen) {\n                    swal.close();\n                }\n\n                return;\n            }\n\n        }, 1000);\n\n        swal({\n            closeOnClickOutside: true,\n            buttons: {\n                confirm: \"Yes, I'm here\"\n            },\n            content: (\n                <div className=\"swal-text-custom\">\n                    <IconContext.Provider value={{ color: '#D338AE', size: '50px' }}>\n                        <div className=\"animate__animated animate__shakeX\">\n                            <RiTimeLine />\n                        </div>\n                    </IconContext.Provider>\n                    <h1>Are you still there?</h1>\n                </div>\n            )\n        }).then(respond => {\n            if (respond === null || respond === true) {\n                clearInterval(counterDownTimer);\n                return;\n            }\n        });\n    }\n\n    return (\n        <div>\n            <IdleTimer ref={IdleTimerRef} timeout={360 * 1000} onIdle={onIdle}></IdleTimer>\n        </div>\n    )\n}\n\nexport default IdleTimerContainer\n","import React, { lazy, Suspense, useEffect, useState } from \"react\";\n// React Router\nimport { Switch, Route, Redirect } from 'react-router-dom';\n// IdleTimerContainer\nimport IdleTimerContainer from './components/IdleTimerContainer/IdleTimerContainer';\n// Firebase\nimport { auth, createUserProfileDocument } from './firebase/firebase';\n\n// Components\nimport Overlay from './components/Overlay/Overlay';\n\n// Pages\nconst Home = lazy(() => import('../src/pages/HomePage/Home'));\nconst Login = lazy(() => import('../src/pages/LoginPage/Login'));\n\nfunction App() {\n  \n  /**-- States --*/\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isLoading, updateIsLoading] = useState(true);\n  const [userInfo, updateUserInfo] = useState(null);\n\n  useEffect(() => {\n    (async () => {\n      // Session\n      await auth.onAuthStateChanged((user) => {\n        if (user) {\n          // console.log('is logged');\n\n          // Create User profile\n          createUserProfileDocument(user);\n          // Update states\n          updateIsLoading(false);\n          updateUserInfo(user);\n          setIsAuthenticated(true);\n        } else {\n          // console.log('is not logged');\n          // setIsAuthenticated\n          setIsAuthenticated(false);\n          // updateIsLoading\n          updateIsLoading(false);\n        }\n      });\n    })();\n  }, []);\n\n  if (isLoading) {\n    return <Overlay text={'Checking the session...'} spinner={true} />\n  }\n  \n  return (\n      <Switch>\n        <Suspense fallback={<Overlay text={'Loading data, please wait...'} spinner={true} />}>\n          {isAuthenticated ?\n            (\n              <>\n                <Route path='/home' render={(props) => <Home user={userInfo} {...props} />} />\n                {/* Checking activity */}\n                <IdleTimerContainer />\n                {/* Redirect */}\n                <Redirect to={`/home`} />\n              </>\n            )\n            :\n            (\n              <>\n                <Route exact path='/' component={Login} />\n                {/* Redirect */}\n                <Redirect to=\"/\" /> \n              </>\n            )\n          }\n        </Suspense>\n      </Switch>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// Animated css\nimport 'animate.css';\n\nReactDOM.render(\n\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["utils/utils.jsx","../../source/parsePhoneNumberFromString_.js","../../source/isValidPhoneNumber.js","../node_modules/libphonenumber-js/min/exports/isValidPhoneNumber.js","components/FormCards/FormDetails/FormDetails.jsx","components/Error/Error.jsx"],"names":["validateEmail","email","test","String","toLowerCase","parsePhoneNumberFromString","text","options","metadata","isSupportedCountry","defaultCountry","undefined","parsePhoneNumber","error","isValidPhoneNumber","normalizeArguments","phoneNumber","extract","withMetadata","_isValidPhoneNumber","arguments","FormDetails","customerInformation","progressBar","updateCustomerInformation","updateShowFormCompare","updateShowFormDetails","updateShowFormBankDetails","updateProgressBar","updateShowOverlay","useState","disableInput","updateDisableInput","useEffect","window","scrollTo","top","behavior","updateError","message","errorMessage","setErrorMessage","customerAddres","doornumber","addressline1","addressline2","city","postcode","switching_details","supplier_selected","tariff_name","exit_fees","monthly_cost","debt","debt_apply","debt_amount","document","querySelector","scrollIntoView","block","inline","handleChange","e","customerDetails","target","name","value","verifyCustomer","a","preventDefault","phone","replace","trim","toString","fetch","method","body","JSON","stringify","headers","then","response","status","Promise","reject","json","first_name","last_name","bankDetails","account_holder","account_number","sort_code","catch","console","goToBankDetails","first_name_validated","last_name_validated","email_validated","phone_validated","log","length","parsedPhoneNumber","number","customerObj","agent","step","className","onSubmit","htmlFor","type","id","onChange","disabled","required","style","marginBottom","onClick","editCustomer","Error","copy_customer_switching","goToCompareSection","Provider","color","size"],"mappings":"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","file":"static/js/20.689dfb51.chunk.js","sourcesContent":["// export const refreshTokenSetup = (res) => {\n//     // Timing to renew access token\n//     let refreshTiming = (res.tokenObj.expires_in || 3600 - 5 * 60) * 1000;\n  \n//     const refreshToken = async () => {\n//       const newAuthRes = await res.reloadAuthResponse();\n//       refreshTiming = (newAuthRes.expires_in || 3600 - 5 * 60) * 1000;\n//       console.log('newAuthRes:', newAuthRes);\n//       // saveUserToken(newAuthRes.access_token); \n//       localStorage.setItem('authToken', newAuthRes.id_token);\n  \n//       // Setup the other timer after the first one\n//       setTimeout(refreshToken, refreshTiming);\n//     };\n  \n//     // Setup first refresh timer\n//     setTimeout(refreshToken, refreshTiming);\n//   };\n\n/**-- EMAIL VALIDATION --*/\nexport const validateEmail = (email) => {\n  const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n};","import parsePhoneNumber from './parsePhoneNumber_'\r\nimport ParseError from './ParseError'\r\nimport { isSupportedCountry } from './metadata'\r\n\r\nexport default function parsePhoneNumberFromString(text, options, metadata) {\r\n\t// Validate `defaultCountry`.\r\n\tif (options && options.defaultCountry && !isSupportedCountry(options.defaultCountry, metadata)) {\r\n\t\toptions = {\r\n\t\t\t...options,\r\n\t\t\tdefaultCountry: undefined\r\n\t\t}\r\n\t}\r\n\t// Parse phone number.\r\n\ttry {\r\n\t\treturn parsePhoneNumber(text, options, metadata)\r\n\t} catch (error) {\r\n\t\t/* istanbul ignore else */\r\n\t\tif (error instanceof ParseError) {\r\n\t\t\t//\r\n\t\t} else {\r\n\t\t\tthrow error\r\n\t\t}\r\n\t}\r\n}\r\n","import { normalizeArguments } from './parsePhoneNumber'\r\nimport parsePhoneNumberFromString from './parsePhoneNumberFromString_'\r\n\r\nexport default function isValidPhoneNumber() {\r\n\tlet { text, options, metadata } = normalizeArguments(arguments)\r\n\toptions = {\r\n\t\t...options,\r\n\t\textract: false\r\n\t}\r\n\tconst phoneNumber = parsePhoneNumberFromString(text, options, metadata)\r\n\treturn phoneNumber && phoneNumber.isValid() || false\r\n}","import { withMetadata } from '../metadata'\r\nimport { isValidPhoneNumber as _isValidPhoneNumber } from '../../core/index'\r\n\r\nexport function isValidPhoneNumber() {\r\n\treturn withMetadata(_isValidPhoneNumber, arguments)\r\n}","import React, { useState, useEffect } from \"react\";\n// CSS\nimport \"./FormDetails.css\";\nimport { IconContext } from \"react-icons\";\nimport { IoMdArrowDropright, IoMdArrowDropleft } from 'react-icons/io';\n// Utils\nimport { validateEmail } from '../../../utils/utils';\n// Phone Number Validation\nimport { isValidPhoneNumber, parsePhoneNumber } from 'libphonenumber-js';\n// Components\nimport Error from '../../Error/Error';\n\nconst FormDetails = ({ customerInformation, progressBar, updateCustomerInformation, updateShowFormCompare, updateShowFormDetails, updateShowFormBankDetails, updateProgressBar, updateShowOverlay }) => {\n\n    /** STATES */\n    // disableInput\n    const [disableInput, updateDisableInput] = useState(true);\n\n    // Scroll to top\n    useEffect(() => {\n        window.scrollTo({ top: 0, behavior: 'smooth' });\n    }, []);\n\n    // Error State\n    const [error, updateError] = useState(false);\n    const [errorMessage, setErrorMessage] = useState({\n        message: ''\n    });\n\n    // Variables\n    const { doornumber, addressline1, addressline2, city, postcode } = customerInformation.customerAddres;\n    const { tariff_name, exit_fees, monthly_cost } = customerInformation.switching_details.supplier_selected;\n    const { debt_apply, debt_amount } = customerInformation.debt;\n\n    // console.log('Desde');\n    // console.log(customerInformation);\n\n    /** FUNCTIONS */\n\n    // Error smooth scroll\n    useEffect(() => {\n        if (error) {\n            const scroll_to = () => {\n                var element = document.querySelector(\"#error\");\n                // smooth scroll to element and align it at the bottom\n                element.scrollIntoView({ behavior: \"smooth\", block: \"end\", inline: \"end\" });\n            }\n\n            scroll_to();\n        }\n    }, [error]);\n\n    // Function that runs every time the user writes to the input\n    const handleChange = (e) => {\n        // Hidde error\n        updateError(false);\n        // Update Customer details\n        updateCustomerInformation({\n            ...customerInformation,\n            customerDetails: {\n                ...customerInformation.customerDetails,\n                [e.target.name]: e.target.value\n            }\n        });\n    };\n\n    // Verify button\n    const verifyCustomer = async (e) => {\n        e.preventDefault();\n\n        // Show Overlay\n        updateShowOverlay(true);\n\n        let phone = { 'phone': customerInformation.customerDetails.phone.replace(/[^0-9\\.]+/g, '').trim().toString() };\n\n        await fetch('https://zohosdkfunction.azurewebsites.net/api/httptrigger1?method=verify', {\n            method: 'POST',\n            body: JSON.stringify(phone),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then((response) => {\n            if (response.status !== 200) {\n                return Promise.reject(response.json());\n            }\n\n            return response.json();\n\n        }).then((response) => {\n            // console.log(response);\n            if (response.status !== 200) {\n                // Disable input\n                updateDisableInput(false);\n                return Promise.reject(response);\n            }\n            // Update Customer details\n            updateCustomerInformation({\n                ...customerInformation,\n                customerDetails: {\n                    ...customerInformation.customerDetails,\n                    first_name: response.first_name ? response.first_name : '',\n                    last_name: response.last_name ? response.last_name : '',\n                    email: response.email ? response.email : '',\n                    phone: response.phone ? response.phone : ''\n                },\n                bankDetails: {\n                    account_holder: '',\n                    account_number: '',\n                    sort_code: ''\n                }\n            });\n\n            // Disable input\n            updateDisableInput(true);\n\n        }).catch((error) => {\n            console.error('Error: ', error);\n            // Update Customer details\n            updateCustomerInformation({\n                ...customerInformation,\n                customerDetails: {\n                    ...customerInformation.customerDetails,\n                    first_name: '',\n                    last_name: '',\n                    email: '',\n                    phone: phone.phone\n                },\n                bankDetails: {\n                    account_holder: '',\n                    account_number: '',\n                    sort_code: ''\n                }\n            });\n        });\n\n        // Hide Overlay\n        updateShowOverlay(false);\n    }\n\n    // Edit button\n    const editCustomer = (e) => {\n        e.preventDefault();\n\n        // Update disable input\n        updateDisableInput(false);\n    }\n\n    // goToBankDetails\n    const goToBankDetails = async (e) => {\n        e.preventDefault();\n\n        // Customer Details\n        const { first_name, last_name, email, phone } = customerInformation.customerDetails;\n        // Validated details\n        const first_name_validated = first_name.replace(/[^a-zA-Z ]/g, \"\").trim();\n        const last_name_validated = last_name.replace(/[^a-zA-Z ]/g, \"\").trim();\n        const email_validated = email.replace(/[^A-Za-z0-9|@.-]/g, \"\").trim();\n        const phone_validated = phone.replace(/[^0-9\\.]+/g, '').trim().toString();\n\n        // Validate email\n        if (!validateEmail(email_validated)) {\n            // Set error message\n            setErrorMessage({\n                ...errorMessage,\n                message: 'Please introduce a valid email address'\n            });\n            // Show error\n            updateError(true);\n            return;\n        };\n\n        console.log(phone_validated)\n\n        // Validate phone number length\n        if (phone_validated.length <= 10 || phone_validated.length > 12) {\n            // Set error message\n            setErrorMessage({\n                ...errorMessage,\n                message: 'Please introduce a valid phone number'\n            });\n            // Show Error\n            updateError(true);\n            return;\n        };\n\n        // Phone number parsed\n        const parsedPhoneNumber = parsePhoneNumber(phone_validated, 'GB');\n        // Phone number\n        const phoneNumber = parsedPhoneNumber.number;\n\n        // Phone number validation\n        if (!isValidPhoneNumber(phoneNumber, 'GB')) {\n            // Set error message\n            setErrorMessage({\n                ...errorMessage,\n                message: 'Please introduce a valid phone number'\n            });\n            // Show Error\n            updateError(true);\n            return;\n        };\n\n        // Validation\n        if (!first_name_validated || !last_name_validated || !email_validated || !phone_validated) {\n            // Set error message\n            setErrorMessage({\n                ...errorMessage,\n                message: 'All fields are required'\n            });\n            // Show Error\n            updateError(true);\n            return;\n        };\n\n        if (!disableInput) {\n            // Show Overlay\n            updateShowOverlay(true);\n\n            // Customer Object\n            const customerObj = {\n                \"fullname\": `${first_name_validated} ${last_name_validated}`,\n                \"email\": email_validated,\n                \"phone\": phoneNumber,\n                \"authorised_by\": customerInformation.agent.email\n            }\n\n            console.log(customerObj)\n\n            // Endpoint\n            const url = 'https://zohocontactcreatefunction.azurewebsites.net/api/HttpTrigger1?method=createContact';\n            // Fetch Create contact\n            await fetch(url, {\n                method: 'POST',\n                body: JSON.stringify(customerObj),\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n            }).then(function (response) {\n                console.log(response);\n                return response.json();\n\n            }).then(function (response) {\n                console.log(response);\n                return response;\n            }).catch(function (error) {\n                console.error(`Catch an error fetching to postcoder ${error}`);\n            });\n\n            // Hide Overlay\n            updateShowOverlay(false);\n        }\n\n        // Update Customer details\n        updateCustomerInformation({\n            ...customerInformation,\n            customerDetails: {\n                ...customerInformation.customerDetails,\n                first_name: first_name_validated,\n                last_name: last_name_validated,\n                email: email_validated,\n                phone: phoneNumber.replace(/[^0-9\\.]+/g, '')\n            },\n            bankDetails: {\n                account_holder: '',\n                account_number: '',\n                sort_code: ''\n            }\n        });\n\n        // Update Error\n        updateError(false);\n        // Hide Form Customer details\n        updateShowFormDetails(false);\n        // Update Progress Bar\n        updateProgressBar({ ...progressBar, step: 10 });\n        // Show Bank Details\n        updateShowFormBankDetails(true);\n    }\n\n    // goToCompareSection\n    const goToCompareSection = (e) => {\n        e.preventDefault();\n\n        // Delete Switching details\n        const copy_customer_switching = { ...customerInformation };\n        delete copy_customer_switching['switching_details'];\n        delete copy_customer_switching['customerDetails'];\n        // Update customer information\n        updateCustomerInformation({ ...copy_customer_switching });\n        // Update Error\n        updateError(false);\n        // Hide Customer details\n        updateShowFormDetails(false);\n        // Update Progress Bar\n        updateProgressBar({ ...progressBar, step: 8 });\n        // Show compare section \n        updateShowFormCompare(true);\n    }\n\n    // UseEffect - conditional disable state\n    useEffect(() => {\n        if ((!customerInformation.customerDetails.first_name) || (!customerInformation.customerDetails.last_name) || (!customerInformation.customerDetails.email) || (!customerInformation.customerDetails.phone)) {\n            // Update disable input\n            updateDisableInput(false)\n        }\n    }, []);\n\n    return (\n        <>\n            <section className=\"form-details-section\">\n                <div className=\"form-details-container\">\n\n                    {/* Content */}\n                    <div className=\"form-details-content\">\n                        <div className=\"form-details\">\n                            <h1>Customer Details</h1>\n                            <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Nostrum dicta libero tenetur commodi id? Eius aperiam illo voluptatem fuga nobis nulla vitae obcaecati. Rerum doloribus veniam accusamus ad quibusdam sequi!</p>\n                        </div>\n\n                        {/* Inputs */}\n                        <form className=\"form-details-input-container\" onSubmit={(e) => goToBankDetails(e)}>\n                            <div className=\"form-details-input-content-custom\">\n                                <div className=\"form-details-input-element-custom\">\n                                    <label htmlFor=\"firstName\">First Name<span>*</span></label>\n                                    <input type=\"text\" id=\"firstName\" name='first_name' onChange={handleChange} value={customerInformation.customerDetails.first_name.replace(/[^a-zA-Z ]/g, \"\") || ''} disabled={disableInput} />\n                                </div>\n\n                                <div className=\"form-details-input-element-custom\">\n                                    <label htmlFor=\"lastName\">Last Name<span>*</span></label>\n                                    <input type=\"text\" id=\"lastName\" name='last_name' onChange={handleChange} value={customerInformation.customerDetails.last_name.replace(/[^a-zA-Z ]/g, \"\") || ''} disabled={disableInput} />\n                                </div>\n                            </div>\n\n                            <div className=\"form-details-input-element\">\n                                <label htmlFor=\"emailAddress\">Email address<span>*</span></label>\n                                <input type=\"text\" id=\"emailAddress\" name='email' onChange={handleChange} value={customerInformation.customerDetails.email.replace(/[^A-Za-z0-9|@.-]/g, \"\") || ''} disabled={disableInput} required={true} />\n                            </div>\n\n                            <div className=\"form-details-input-content-custom\" style={error ? { marginBottom: '1.9rem' } : null} >\n                                <div className=\"form-details-input-element-custom\">\n                                    <label htmlFor=\"phoneNumber\">Phone Number<span>*</span></label>\n                                    <input type=\"text\" id=\"phoneNumber\" name='phone' onChange={handleChange} value={customerInformation.customerDetails.phone.replace(/[^0-9\\.]+/g, '') || ''} disabled={disableInput} required={true} />\n                                </div>\n\n                                {/* Verify and Edit buttons */}\n                                <div className=\"form-details-btn-container-custom\">\n                                    <div>\n                                        <button className=\"form-details-btn-custom\" type=\"button\" disabled={disableInput} onClick={(e) => verifyCustomer(e)}>Verify</button>\n\n                                        <button className=\"form-details-btn-custom\" type=\"button\" onClick={(e) => editCustomer(e)}>Edit</button>\n                                    </div>\n                                </div>\n                            </div>\n\n                            {error ?\n                                (\n                                    // <Error message={ errorEmail ? 'Please introduce a valid email address' : 'All fields are required, please check'} />\n                                    <Error message={errorMessage.message} />\n                                )\n                                :\n                                null\n                            }\n\n                            {/* Buttons */}\n                            <div className=\"form-details-btn-container\">\n                                <button className=\"form-details-btn btn-back\" onClick={(e) => goToCompareSection(e)}>\n                                    <IconContext.Provider value={{ color: '#D338AE', size: '35px' }}>\n                                        <IoMdArrowDropleft className=\"icon-back\" />\n                                    </IconContext.Provider>\n                                    Go back\n                                </button>\n\n                                <button data-cy=\"addrtyped-continue\" className=\"form-details-btn btn-next\">\n                                    Continue\n\n                                    <IconContext.Provider value={{ color: '#FFF', size: '35px' }}>\n                                        <IoMdArrowDropright className=\"icon-next\" />\n                                    </IconContext.Provider>\n                                </button>\n                            </div>\n                        </form>\n                    </div>\n\n                    {/* Summary */}\n                    <div className=\"form-summary-container\">\n                        <h1>Summary</h1>\n\n                        <div className=\"form-summary-section\">\n                            <h2>Customer Information</h2>\n\n                            <div className=\"form-summary-content\">\n                                <div className=\"form-summary-element\">\n                                    <p><span>Door number:</span></p>\n                                    <p className=\"text-end\">{doornumber}</p>\n                                </div>\n\n                                <div className=\"form-summary-element\">\n                                    <p><span>Address line 1:</span></p>\n                                    <p className=\"text-end\">{addressline1}</p>\n                                </div>\n\n                                <div className=\"form-summary-element\">\n                                    <p><span>Address line 2:</span></p>\n                                    <p className=\"text-end\">{addressline2}</p>\n                                </div>\n\n                                <div className=\"form-summary-element\">\n                                    <p><span>City:</span></p>\n                                    <p className=\"text-end\">{city}</p>\n                                </div>\n\n                                <div className=\"form-summary-element\">\n                                    <p><span>Postcode:</span></p>\n                                    <p className=\"text-end\">{postcode}</p>\n                                </div>\n                            </div>\n                        </div>\n\n                        <hr />\n\n                        <div className=\"form-summary-section\">\n                            <h2>About your chosen plan</h2>\n\n                            <div className=\"form-summary-content\">\n                                <div className=\"form-summary-element\">\n                                    <p><span>Plan name:</span></p>\n                                    <p className=\"text-end\">{tariff_name}</p>\n                                </div>\n\n                                <div className=\"form-summary-element\">\n                                    <p><span>Annual saving:</span></p>\n                                    <p className=\"text-end\"><span>£</span>{148}</p>\n                                </div>\n\n                                <div className=\"form-summary-element\">\n                                    <p><span>Early exit fee:</span></p>\n                                    <p className=\"text-end\"><span>£</span>{exit_fees}</p>\n                                </div>\n\n                                <div className=\"form-summary-element\">\n                                    <p><span>Contract length:</span></p>\n                                    <p className=\"text-end\">{24} months</p>\n                                </div>\n\n                                <div className=\"form-summary-element\">\n                                    <p><span>Monthly direct debit:</span></p>\n                                    <p className=\"text-end\"><span>£</span>{monthly_cost}</p>\n                                </div>\n\n                                <div className=\"form-summary-element\">\n                                    <p><span>Existing debt:</span></p>\n                                    <p className=\"text-end\">{debt_apply ? <><span>£</span>{debt_amount}</> : 'N/A'}</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </>\n    );\n};\n\nexport default FormDetails;\n","import \"./Error.css\";\n\nconst Error = ({ message }) => {\n\n  return (\n    <div data-cy=\"error\" className=\"error-container\" id=\"error\">\n      <div className=\"error-message\">\n        <p className=\"error-text\">{message}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Error;\n"],"sourceRoot":""}
{"version":3,"sources":["assets/img/bank_details.svg","components/FormCards/FormBankDetails/FormBankDetails.jsx","components/Error/Error.jsx"],"names":["FormBankDetails","customerInformation","progressBar","updateCustomerInformation","updateShowFormDetails","updateShowFormBankDetails","updateProgressBar","updateShowFormRating","updateShowOverlay","useEffect","window","scrollTo","top","behavior","useState","error","updateError","message","errorMessage","setErrorMessage","customerAddres","doornumber","addressline1","addressline2","city","postcode","switching_details","supplier_selected","tariff_name","exit_fees","customerDetails","first_name","last_name","email","phone","document","querySelector","scrollIntoView","block","inline","handleChange","e","console","log","bankDetails","target","name","value","dispatchSwitching","a","preventDefault","account_holder","account_number","sort_code","length","agent","debt","debt_apply","debt_amount","fuel_description","same_supplier","gas_only","elec_only","dual_active","supplierInformation","electricity_supplier","gas_supplier","supplier_name","Existing_Energy_Provider","company_name","customer","fullname","addline1","replaceAll","replace","addline2","vendor","plan","Existing_debt","If_debt_how_much","Customer_rating_for_TP","Meter_Type","Select_Provider","boiler_age","boiler_power","bank","account_sortcode","summary","authorised_by","supplier_notes","fetch","method","body","JSON","stringify","headers","then","response","status","Promise","reject","json","step","catch","className","onSubmit","style","marginBottom","htmlFor","type","id","onChange","required","maxLength","placeholder","toUpperCase","trim","src","BankDetails","alt","Error","onClick","copy_customer_switching","goToCustomerDetails","Provider","color","size"],"mappings":"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","file":"static/js/19.36cdb099.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bank_details.4ef05c56.svg\";","import React, { useState, useEffect } from \"react\";\n// CSS\nimport \"./FormBankDetails.css\";\nimport { IconContext } from \"react-icons\";\nimport { IoMdArrowDropright, IoMdArrowDropleft } from 'react-icons/io';\n// Components\nimport Error from '../../Error/Error';\n// Images\nimport BankDetails from '../../../assets/img/bank_details.svg'\n\nconst FormBankDetails = ({ customerInformation, progressBar, updateCustomerInformation, updateShowFormDetails, updateShowFormBankDetails, updateProgressBar, updateShowFormRating, updateShowOverlay }) => {\n\n    /** STATES */\n    // Scroll to top\n    useEffect(() => {\n        window.scrollTo({ top: 0, behavior: 'smooth' });\n    }, []);\n\n    // Error State\n    const [error, updateError] = useState(false);\n    const [errorMessage, setErrorMessage] = useState({\n        message: ''\n    });\n\n    // Variables\n    const { doornumber, addressline1, addressline2, city, postcode } = customerInformation.customerAddres;\n    const { tariff_name, exit_fees } = customerInformation.switching_details.supplier_selected;\n    const { first_name, last_name, email, phone } = customerInformation.customerDetails;\n\n    /** FUNCTIONS */\n\n    // Error smooth scroll\n    useEffect(() => {\n        if (error) {\n            const scroll_to = () => {\n                var element = document.querySelector(\"#error\");\n                // smooth scroll to element and align it at the bottom\n                element.scrollIntoView({ behavior: \"smooth\", block: \"end\", inline: \"end\" });\n            }\n\n            scroll_to();\n        }\n    }, [error]);\n\n    // Function that runs every time the user writes to the input\n    const handleChange = (e) => {\n        // Hidde error\n        updateError(false);\n        console.log('handleChange');\n        // Update Customer details\n        updateCustomerInformation({\n            ...customerInformation,\n            bankDetails: {\n                ...customerInformation.bankDetails,\n                [e.target.name]: e.target.value\n            }\n        });\n    };\n\n    // dispatchSwitching\n    const dispatchSwitching = async (e) => {\n        e.preventDefault();\n\n        // Customer Details\n        const { account_holder, account_number, sort_code } = customerInformation.bankDetails;\n\n        // Validation\n        if (!account_holder || !account_number || !sort_code) {\n            // Set error message\n            setErrorMessage({\n                ...errorMessage,\n                message: 'All fields are required'\n            });\n            // Show Error\n            updateError(true);\n            return;\n        };\n\n        if (account_number.length < 8) {\n            // Set error message\n            setErrorMessage({\n                ...errorMessage,\n                message: 'Please verify the account number'\n            });\n            // Show Error\n            updateError(true);\n            return;\n        };\n\n        if (sort_code.length < 6) {\n            // Set error message\n            setErrorMessage({\n                ...errorMessage,\n                message: 'Please verify the sort code'\n            });\n            // Show Error\n            updateError(true);\n            return;\n        };\n\n        // Update error\n        updateError(false);\n\n        // Show Overlay\n        updateShowOverlay(true);\n        // Agent email\n        const { agent } = customerInformation;\n        // Customer details\n        const { phone, first_name, last_name, email } = customerInformation.customerDetails;\n        const { debt_apply, debt_amount } = customerInformation.debt;\n        // Customer Address\n        const { doornumber, addressline1, addressline2, city, postcode } = customerInformation.customerAddres;\n        // Fuel description\n        const { same_supplier, gas_only, elec_only, dual_active } = customerInformation.fuel_description;\n        // Supplier Information\n        const { electricity_supplier, gas_supplier } = customerInformation.supplierInformation;\n        // Switching details\n        const { tariff_name, supplier_name } = customerInformation.switching_details.supplier_selected;\n\n        console.log(supplier_name)\n\n        let Existing_Energy_Provider;\n\n        // Conditional Existing_Energy_Provider \n        if (dual_active) {\n            if (same_supplier) {\n                // Take electricity provider as mandatory\n                Existing_Energy_Provider = electricity_supplier.company_name;\n            } else {\n                // We should add the fields in the CRM to add \"Electricity energy provider\" and \"Gas energy provider\" / At the moment we are selecting the electricity provider\n                Existing_Energy_Provider = electricity_supplier.company_name;\n            };\n        } else {\n            if (elec_only) {\n                // Assing Electricty provider\n                Existing_Energy_Provider = electricity_supplier.company_name;\n            };\n\n            if (gas_only) {\n                // Assing Electricty provider\n                Existing_Energy_Provider = gas_supplier.company_name;\n            };\n        };\n\n        // Endpoint\n        const url = 'https://smartdebittestapi.azurewebsites.net/api/HttpTrigger1?method=savingVal';\n\n        const customer = {\n            fullname: `${first_name} ${last_name}`,\n            phone,\n            email,\n            doornumber,\n            addline1: addressline1.replaceAll(',', ' -').replace(/\\s+/g, ' '),\n            addline2: addressline2,\n            city,\n            postcode,\n            vendor: \"EDF\",\n            plan: tariff_name,\n            Existing_debt: debt_apply,\n            If_debt_how_much: debt_amount,\n            Customer_rating_for_TP: 5,\n            Meter_Type: \"Legacy PAYG\",\n            Select_Provider: supplier_name,\n            Existing_Energy_Provider,\n            boiler_age: \"\",\n            boiler_power: \"\",\n            bank: {\n                account_holder,\n                account_number,\n                account_sortcode: sort_code\n            },\n            summary: 0.0,\n            authorised_by: agent.email,\n            supplier_notes: \"\"\n        }\n\n        // Fetch - Validate bank details\n        await fetch(url, {\n            method: 'POST',\n            body: JSON.stringify(customer),\n            headers: {\n                'Content-Type': 'application/json'\n            },\n        }).then((response) => {\n            if (response.status !== 200) {\n                return Promise.reject(response.json());\n            }\n\n            return response.json();\n        }).then((response) => {\n            console.log(response);\n            if (response.status !== 'success') {\n                const message = response.message.error;\n                // Set error message\n                setErrorMessage({\n                    ...errorMessage,\n                    message: message ? message : 'Please check your bank details'\n                });\n                // Show Error\n                updateError(true);\n\n                return;\n            }\n\n            // Hide Bank Details\n            updateShowFormBankDetails(false);\n            // Update progress bar\n            updateProgressBar({ ...progressBar, step: 10 });\n            // Show Rating\n            updateShowFormRating(true);\n\n            console.log('dispatchSwitching');\n\n            return response;\n        }).catch((error) => {\n            // Error\n            console.error(`Catch an error fetching to postcoder ${error}`);\n            // Set error message\n            setErrorMessage({\n                ...errorMessage,\n                message: 'We can not connect to smart debit, please try again'\n            });\n            // Show Error\n            updateError(true);\n\n            return;\n        });\n\n        // Hide Overlay\n        updateShowOverlay(false);\n\n        return;\n    }\n\n    // goToCustomerDetails\n    const goToCustomerDetails = (e) => {\n        e.preventDefault();\n\n        // Delete Switching details\n        const copy_customer_switching = { ...customerInformation };\n        delete copy_customer_switching['bankDetails'];\n        // Update customer information\n        updateCustomerInformation({ ...copy_customer_switching });\n        // Update Error\n        updateError(false);\n        // Hide Bank details\n        updateShowFormBankDetails(false);\n        // Show Customer Details\n        updateShowFormDetails(true);\n        // Update Progress Bar\n        updateProgressBar({ ...progressBar, step: 9 });\n\n        console.log('goToCustomerDetails');\n    }\n\n    return (\n        <>\n            <section className=\"form-bank-details-section\">\n                <div className=\"form-bank-details-container\">\n\n                    {/* Content */}\n                    <div className=\"form-bank-details-content\">\n                        <div className=\"form-bank-details\">\n                            <h1>Bank Details</h1>\n                            <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Nostrum dicta libero tenetur commodi id? Eius aperiam illo voluptatem fuga nobis nulla vitae obcaecati. Rerum doloribus veniam accusamus ad quibusdam sequi!</p>\n                        </div>\n\n                        {/* Inputs */}\n                        <form className=\"form-bank-details-input-container\" onSubmit={(e) => dispatchSwitching(e)}>\n                            <div className=\"form-bank-details-split-content\">\n                                <div className=\"form-bank-details-input-content\" style={error ? { marginBottom: '1rem' } : null}>\n                                    {/* Bank Details */}\n                                    <div className=\"form-bank-details-input-element\">\n                                        <label htmlFor=\"acch\">Account holder<span>*</span></label>\n                                        <input type=\"text\" id=\"acch\" name='account_holder' onChange={handleChange} required maxLength=\"18\" placeholder=\"Introduce account holder\" value={customerInformation.bankDetails.account_holder.replace(/[^a-zA-Z ]/g, \"\").toUpperCase() || ''} />\n                                        <p>18 characters max</p>\n                                    </div>\n\n                                    <div className=\"form-bank-details-input-element\">\n                                        <label htmlFor=\"accn\">Account number<span>*</span></label>\n                                        <input type=\"text\" id=\"accn\" name='account_number' onChange={handleChange} required maxLength=\"8\" placeholder=\"12345678\" value={customerInformation.bankDetails.account_number.replace(/[^0-9.]/g, '').trim() || ''} />\n                                    </div>\n\n                                    <div className=\"form-bank-details-input-element\" style={error ? { marginBottom: '0' } : null}>\n                                        <label htmlFor=\"sc\">Sort code<span>*</span></label>\n                                        <input type=\"text\" id=\"sc\" name='sort_code' onChange={handleChange} required maxLength=\"6\" placeholder=\"123456\" value={customerInformation.bankDetails.sort_code.replace(/[^0-9.]/g, '').trim() || ''} />\n                                    </div>\n                                </div>\n\n                                {/* Image */}\n                                <div className=\"form-bank-details-img-content\">\n                                    <img src={BankDetails} alt=\"Bank Details\" />\n                                </div>\n                            </div>\n\n\n                            {error ?\n                                (\n                                    // <Error message={ errorEmail ? 'Please introduce a valid email address' : 'All fields are required, please check'} />\n                                    <Error message={errorMessage.message} />\n                                )\n                                :\n                                null\n                            }\n\n                            {/* Buttons */}\n                            <div className=\"form-bank-details-btn-container\">\n                                <button className=\"form-bank-details-btn btn-back\" onClick={(e) => goToCustomerDetails(e)}>\n                                    <IconContext.Provider value={{ color: '#D338AE', size: '35px' }}>\n                                        <IoMdArrowDropleft className=\"icon-back\" />\n                                    </IconContext.Provider>\n                                    Go back\n                                </button>\n\n                                <button data-cy=\"addrtyped-continue\" className=\"form-bank-details-btn btn-next\">\n                                    Continue\n\n                                    <IconContext.Provider value={{ color: '#FFF', size: '35px' }}>\n                                        <IoMdArrowDropright className=\"icon-next\" />\n                                    </IconContext.Provider>\n                                </button>\n                            </div>\n                        </form>\n                    </div>\n\n                    {/* Summary */}\n                    <div className=\"form-summary-bank-container\">\n                        <h1>Summary</h1>\n\n                        <div className=\"form-summary-bank-section\">\n                            <h2>Customer Information</h2>\n\n                            <div className=\"form-summary-bank-content\">\n                                <div className=\"form-summary-bank-element\">\n                                    <p><span>Full name:</span></p>\n                                    <p className=\"text-end\">{`${first_name} ${last_name}`}</p>\n                                </div>\n\n                                <div className=\"form-summary-bank-element\">\n                                    <p><span>Email:</span></p>\n                                    <p className=\"text-end\">{email}</p>\n                                </div>\n\n                                <div className=\"form-summary-bank-element\">\n                                    <p><span>Phone:</span></p>\n                                    <p className=\"text-end\">{phone}</p>\n                                </div>\n\n                                <div className=\"form-summary-bank-element\">\n                                    <p><span>Door number:</span></p>\n                                    <p className=\"text-end\">{doornumber}</p>\n                                </div>\n\n                                <div className=\"form-summary-bank-element\">\n                                    <p><span>Address line 1:</span></p>\n                                    <p className=\"text-end\">{addressline1}</p>\n                                </div>\n\n                                <div className=\"form-summary-bank-element\">\n                                    <p><span>Address line 2:</span></p>\n                                    <p className=\"text-end\">{addressline2}</p>\n                                </div>\n\n                                <div className=\"form-summary-bank-element\">\n                                    <p><span>City:</span></p>\n                                    <p className=\"text-end\">{city}</p>\n                                </div>\n\n                                <div className=\"form-summary-bank-element\">\n                                    <p><span>Postcode:</span></p>\n                                    <p className=\"text-end\">{postcode}</p>\n                                </div>\n                            </div>\n                        </div>\n\n                        <hr />\n\n                        <div className=\"form-summary-bank-section\">\n                            <h2>About your chosen plan</h2>\n\n                            <div className=\"form-summary-bank-content\">\n                                <div className=\"form-summary-bank-element\">\n                                    <p><span>Plan name:</span></p>\n                                    <p className=\"text-end\">{tariff_name}</p>\n                                </div>\n\n                                <div className=\"form-summary-bank-element\">\n                                    <p><span>Annual saving:</span></p>\n                                    <p className=\"text-end\"><span>£</span>{148}</p>\n                                </div>\n\n                                <div className=\"form-summary-bank-element\">\n                                    <p><span>Early exit fee:</span></p>\n                                    <p className=\"text-end\"><span>£</span>{exit_fees}</p>\n                                </div>\n\n                                <div className=\"form-summary-bank-element\">\n                                    <p><span>Contract lenght:</span></p>\n                                    <p className=\"text-end\">{24} months</p>\n                                </div>\n\n                                <div className=\"form-summary-bank-element\">\n                                    <p><span>Monthly direct debit:</span></p>\n                                    <p className=\"text-end\"><span>£</span>{'31.76'}</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </>\n    );\n};\n\nexport default FormBankDetails;\n","import \"./Error.css\";\n\nconst Error = ({ message }) => {\n\n  return (\n    <div data-cy=\"error\" className=\"error-container\" id=\"error\">\n      <div className=\"error-message\">\n        <p className=\"error-text\">{message}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Error;\n"],"sourceRoot":""}
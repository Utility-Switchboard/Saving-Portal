{"version":3,"sources":["assets/img/moneyMan.png","pages/LoginPage/Login.jsx","components/Error/Error.jsx"],"names":["Login","useState","email","password","user","setUser","error","updateError","message","errorMessage","updateErrorMessage","onChange","e","target","name","value","replace","checkSessionMethod","auth","fetchSignInMethodsForEmail","then","res","onSubmit","a","preventDefault","methodType","signInWithEmailAndPassword","userCredential","console","log","db","collection","add","signInTime","firebase","firestore","FieldValue","serverTimestamp","catch","code","signInWithGoogle","signInWithPopup","googleProvider","result","errorCode","credential","className","onClick","document","getElementById","style","display","dispatchModal","id","src","alt","type","placeholder","Error","loading","MoneyMan"],"mappings":"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","file":"static/js/21.5440cae9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/moneyMan.33c20cf2.png\";","import React, { useState } from \"react\";\n// Components\nimport Error from \"../../components/Error/Error\";\n// CSS\nimport \"./Login.css\";\n// Firebase\nimport { db, auth, googleProvider } from \"../../firebase/firebase\";\nimport firebase from \"firebase/app\";\n// Images\nimport MoneyMan from \"../../assets/img/moneyMan.png\";\n\nfunction Login() {\n\n    /**-- STATES --*/\n\n    // User state\n    const [user, setUser] = useState({\n        email: \"\",\n        password: \"\",\n    });\n\n    // Error state\n    const [error, updateError] = useState(false);\n    const [errorMessage, updateErrorMessage] = useState({ message: '' })\n\n    // Taking user values\n    const { email, password } = user;\n    const onChange = (e) => {\n        setUser({\n            ...user,\n            [e.target.name]: e.target.value.replace(/ /g, \"\"),\n        });\n    };\n\n    // Check session method\n    const checkSessionMethod = (email) => {\n\n        let signInMethodsForEmail = auth.fetchSignInMethodsForEmail(email).then((res) => {\n            return res[0];\n        });\n\n        return signInMethodsForEmail;\n\n    };\n\n    const dispatchModal = (e) => {\n        e.preventDefault();\n\n        document.getElementById(\"modal\").style.display = 'flex';\n    }\n\n    // Submit form\n    const onSubmit = async (e) => {\n        e.preventDefault();\n\n        const email = user.email;\n        const password = user.password;\n\n        // Email field validation\n        if (email === \"\") {\n            updateErrorMessage({ ...errorMessage, message: 'Email is required' })\n            // Show error\n            updateError(true);\n            return;\n        }\n\n        // Password field validation\n        if (password === \"\") {\n            updateErrorMessage({ ...errorMessage, message: 'Password is required' })\n            // Show error\n            updateError(true);\n            return;\n        }\n\n        // Method type\n        const methodType = await checkSessionMethod(email);\n\n        updateErrorMessage({ ...errorMessage, message: 'Email address already in use.' });\n\n        // Checking method type\n        if (methodType === 'google.com') {\n            // Error message\n            updateErrorMessage({ ...errorMessage, message: 'Please, sign in with your Google account' });\n            // Show error\n            updateError(true);\n            return;\n        }\n\n        // Dispatch Sign in function\n        await auth.signInWithEmailAndPassword(email, password).then((userCredential) => {\n            console.log('Success')\n            // console.log(userCredential.user.uid);\n            // Firebase\n            db.collection('signInLogs').add({\n                email,\n                signInTime: firebase.firestore.FieldValue.serverTimestamp(),\n            });\n        }).catch(error => {\n            console.error(error);\n            switch (error.code) {\n                case 'auth/email-already-in-use':\n                    updateErrorMessage({ ...errorMessage, message: 'Email address already in use.' });\n                    break;\n                case 'auth/invalid-email':\n                    updateErrorMessage({ ...errorMessage, message: 'Email address is invalid.' });\n                    break;\n                case 'auth/operation-not-allowed':\n                    updateErrorMessage({ ...errorMessage, message: 'Error during sign up.' });\n                    break;\n                case 'auth/weak-password':\n                    updateErrorMessage({ ...errorMessage, message: 'Password is not strong enough. Add additional characters including special characters and numbers.' });\n                    break;\n                case 'auth/wrong-password':\n                    updateErrorMessage({ ...errorMessage, message: 'Password is wrong' });\n                    break;\n                case 'auth/user-not-found':\n                    updateErrorMessage({ ...errorMessage, message: 'User not found, try with your google account instead' });\n                    break;\n                default:\n                    updateErrorMessage({ ...errorMessage, message: error.message });\n                    break;\n            }\n            updateError(true);\n        });\n    };\n\n    const signInWithGoogle = async (e) => {\n        e.preventDefault();\n\n        // auth.signInWithRedirect(googleProvider);\n        await auth.signInWithPopup(googleProvider)\n            .then((result) => {\n                // Email\n                const email = result.user.email;\n\n                // Firebase\n                db.collection('signInLogs').add({\n                    email,\n                    signInTime: firebase.firestore.FieldValue.serverTimestamp(),\n                });\n            })\n            .catch((error) => {\n                // Handle Errors here.\n                var errorCode = error.code;\n                var errorMessage = error.message;\n                // The email of the user's account used.\n                var email = error.email;\n                // The firebase.auth.AuthCredential type that was used.\n                var credential = error.credential;\n\n                if (errorCode) { console.error(errorCode); }\n\n                if (errorMessage) { console.error(errorMessage); }\n\n                if (email) { console.error(email); }\n\n                if (credential) { console.error(credential); }\n\n                return;\n            });\n    };\n\n    return (\n        <>\n            <div className=\"some-page-wrapper\">\n                <div className=\"row\">\n                    <div className=\"column\">\n                        <div className=\"title-column\">\n                            <div className=\"login-title\">\n                                <h1>Utility Switchboard</h1>\n                                <h1>\n                                    <span>Savings Portal</span>.\n                                </h1>\n                            </div>\n\n                            <div className=\"login-btn-container\">\n                                <button className=\"btn-login\" onClick={(e) => dispatchModal(e)}>Sign In</button>\n                            </div>\n\n                            <div className=\"modal animate__animated animate__pulse\" id=\"modal\">\n                                <form onSubmit={(e) => onSubmit(e)} className=\"modal-content\">\n\n                                    <div className=\"modal-logo\">\n                                        <img src={\"https://utilityswitchboard.com/wp-content/uploads/2021/07/usb-favicon.png\"} alt=\"\" />\n                                    </div>\n\n                                    <div className=\"form-field\">\n                                        <input\n                                            type=\"email\"\n                                            id=\"email\"\n                                            name=\"email\"\n                                            placeholder=\"Introduce email\"\n                                            value={email || ''}\n                                            onChange={onChange}\n                                            placeholder=\"Email\"\n                                            required\n                                        />\n                                    </div>\n\n                                    <div className=\"form-field\">\n                                        <input\n                                            type=\"password\"\n                                            id=\"password\"\n                                            name=\"password\"\n                                            placeholder=\"Introduce password\"\n                                            value={password || ''}\n                                            onChange={onChange}\n                                            placeholder=\"Password\"\n                                            autoComplete=\"on\"\n                                            required\n                                        />\n                                    </div>\n\n                                    {error ? (\n                                        <div className=\"error-modal\"><Error message={errorMessage.message} /></div>\n                                    ) : null}\n\n                                    <div className=\"login-btn-container\">\n                                        <button className=\"btn-login\">Sign In</button>\n                                    </div>\n\n                                    <p>Or sign in using</p>\n\n                                    <button className=\"google-btn\" onClick={(e) => signInWithGoogle(e)}>\n                                        <div>\n                                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" loading=\"lazy\" />\n                                        </div>\n                                    </button>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"column\">\n                        <div className=\"image-column\">\n                            <div className=\"image-container\">\n                                <img src={MoneyMan} alt=\"Saving Money\" />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default Login;\n","import \"./Error.css\";\n\nconst Error = ({ message }) => {\n\n  return (\n    <div data-cy=\"error\" className=\"error-container\" id=\"error\">\n      <div className=\"error-message\">\n        <p className=\"error-text\">{message}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Error;\n"],"sourceRoot":""}